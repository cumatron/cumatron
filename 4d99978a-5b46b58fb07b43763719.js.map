{"version":3,"sources":["webpack:///./node_modules/troika-three-text/dist/troika-three-text.esm.js"],"names":["_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","createSDFGenerator","createGlyphSegmentsIndex","pointOnQuadraticBezier","x0","y0","x1","y1","x2","y2","t","t2","x","y","pointOnCubicBezier","x3","y3","now","self","performance","sdfWidth","sdfHeight","path","viewBox","maxDistance","match","firstX","firstY","prevX","prevY","sdfExponent","length","undefined","start","textureData","Uint8Array","viewBoxWidth","viewBoxHeight","lineSegmentsIndex","segmentRE","exec","args","replace","split","map","v","parseFloat","addLineSegment","prevPoint","i","nextPoint","_prevPoint","_i","_nextPoint","sdfX","sdfY","signedDist","findNearestSignedDistance","alpha","Math","pow","abs","max","min","round","timing","bounds","needsSort","segments","sortSegments","sort","a","b","maxX","absSquareDistanceToLineSegment","lineX0","lineY0","lineX1","lineY1","ldx","ldy","lengthSq","dx","dy","segment","minX","minY","maxY","push","closestDistSq","Infinity","closestDist","seg","distSq","sqrt","inside","isPointInPoly","workerModule","name","dependencies","window","r","parse","_bin","readASCII","n","readUshort","o","readUint","s","h","_readFont","readFixed","_data","_offset","f","d","l","u","offset","trim","_tabOffset","readF2dot14","readShort","readInt","_view","getInt32","readInt8","getInt8","getInt16","getUint16","readUshorts","getUint32","readUint64","String","fromCharCode","readUnicode","_tdec","TextDecoder","readUTF8","decode","readBytes","readASCIIArray","_dataView","buffer","DataView","byteOffset","byteLength","_lctf","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","readLookupTable","tabs","ltype","flag","numOfOnes","readClassDef","getInterval","readCoverage","fmt","tab","coverageIndex","indexOf","readFeatureTable","tag","featureParams","readScriptTable","readLangSysTable","reqFeature","features","CFF","readIndex","readDict","readSubrs","CharStrings","ROS","FDArray","c","p","_readFDict","FDSelect","U","g","Encoding","readEncoding","charset","readCharset","Private","Subrs","Bias","tableSE","glyphByUnicode","glyphBySE","getCharString","val","size","readCharString","S","cmap","tables","parse0","parse4","parse6","parse12","console","debug","format","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","groups","glyf","maxp","numGlyphs","_parseGlyf","loca","noc","xMin","yMin","xMax","yMax","endPts","instructions","flags","xs","ys","parts","m","tx","ty","p1","p2","glyphIndex","instr","GPOS","subt","coverage","pos","readValueRecord","pairsets","P","gid2","val1","val2","F","_","classDef1","classDef2","matrix","C","I","w","GSUB","delta","newg","vals","readLigatureSet","cDef","scset","readSubClassSet","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","readSubClassRule","input","substLookupRecords","readChainSubClassSet","readChainSubClassRule","subst","readLigature","chain","nglyph","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aWidth","lsBearing","kern","parseV1","glyph1","rval","readFormat0","glyph2","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","version","italicAngle","underlinePosition","underlineThickness","codeToGlyph","p0e4","p3e1","p1e0","p0e3","glyphToPath","cmds","crds","SVG","entries","toPath","stack","nStems","haveWidth","width","defaultWidthX","open","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","moveTo","lineTo","qcurveTo","closePath","_getGlyphClass","getPairAdjustment","_applySubs","_glsCovered","glyphsToPath","curveTo","shift","nominalWidthX","pop","O","T","k","G","D","B","L","R","A","W","M","V","N","charAt","Typr","Object","defineProperty","value","Uint16Array","Uint32Array","Error","code","captureStackTrace","set","E","subarray","j","z","q","H","J","K","Q","X","Y","Z","$","rr","er","nr","tr","stream","convert_streams","setUint16","setUint32","signature","flavor","numTables","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","compLength","origLength","origChecksum","reduce","forEach","outOffset","slice","woff2otf","joiningTypeMap","cmdArgLengths","joiningTypeRawData","formsToFeatures","detectJoiningForms","str","ch","joiningForms","prevJoiningType","prevForm","prevIndex","codePointAt","joiningType","Map","_loop","type","lastCode","range","_range$split","_range$split2","skip","step","parseInt","get","form","wrapFontObj","typrFont","glyphMap","create","fontObj","forEachGlyph","text","fontSize","letterSpacing","callback","glyphX","fontScale","glyphIndices","font","glyphIds","cc","gsub","supportedFeatures","usedLookups","feature","test","ti","isJoiningFeature","ci","stringToGlyphs","charIndex","prevGlyphIndex","glyphObj","_Typr$U$glyphToPath","crdsIdx","_i6","len","numArgs","_i7","_len","index","advanceWidth","pathCommandCount","peek","init","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","sdfMargin","textureWidth","tempColor","linkEl","atlases","getTextRenderInfo","assign","totalStart","document","createElement","href","toAbsoluteURL","colorRanges","colors","key","hasOwnProperty","getHex","freeze","atlasKey","concat","atlas","count","glyphs","sdfTexture","typesetInWorker","then","glyphPositions","timings","neededSDFs","glyphBounds","Float32Array","fontSizeMult","boundsIdx","positionsIdx","quadsStart","glyphId","glyphInfo","_result$glyphData$gly","glyphData","pathBounds","fontUnitsMargin","atlasIndex","_sdfViewBox","sdfViewBox","posX","posY","quads","sdfStart","sdf","all","_ref2","maxDist","generateSDFInWorker","_ref3","sdfResults","_ref4","texImg","image","data","biggerArray","height","squareIndex","floor","cols","baseStartIndex","srcStartIndex","rowStartIndex","needsUpdate","sdfTotal","total","parameters","glyphAtlasIndices","glyphColors","caretPositions","caretHeight","chunkedBounds","lineHeight","topBaseline","blockBounds","visibleBounds","log","_result$blockBounds2","toObj","fromObj","typesetterWorkerModule","fontParser","bidi","config","fonts","DEFAULT_IGNORABLE_CHARS","BREAK_AFTER_CHARS","loadFont","fontUrl","pending","url","tryLoad","onError","err","error","request","XMLHttpRequest","responseType","onload","status","statusText","response","onerror","send","doLoadFont","callbacks","cb","typeset","_ref","_ref$text","_ref$font","_ref$fontSize","_ref$letterSpacing","_ref$lineHeight","_ref$maxWidth","maxWidth","direction","_ref$textAlign","textAlign","_ref$textIndent","textIndent","_ref$whiteSpace","whiteSpace","_ref$overflowWrap","overflowWrap","_ref$anchorX","anchorX","_ref$anchorY","anchorY","_ref$includeCaretPosi","includeCaretPositions","_ref$chunkedBoundsSiz","chunkedBoundsSize","_ref$colorRanges","metricsOnly","mainStart","fontLoad","typesetting","info","hasMaxWidth","isFinite","maxLineWidth","renderableGlyphCount","canWrap","typesetStart","halfLeading","caretBottomOffset","lineXOffset","currentLine","TextLine","lines","nextLine","_char","glyphWidth","curLineCount","isWhitespace","canBreakAfter","isEmpty","glyphAt","adjustX","splitAt","isSoftWrapped","fly","line","_line$glyphAt","anchorXOffset","anchorYOffset","parsePercent","bidiLevelsResult","getEmbeddingLevels","lineYOffset","chunk","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineIndex","lineGlyphCount","lineWidth","trailingWhitespaceCount","_lineXOffset","justifyAdjust","whitespaceCount","_i2","justifyOffset","_i3","_glyphObj","flips","getReorderSegments","fi","_flips$fi","end","left","right","_i4","startInLine","endInLine","_glyphInfo","setGlyphObj","_i5","_glyphInfo2","rtl","levels","mirrored","getMirroredCharacter","caretLeft","caretRight","ligCount","fillLigatureCaretPositions","_charIndex","idx","glyphY","visX0","visY0","visX1","visY1","rect","chunkRect","_start","pct","NaN","isNaN","ligStartIndex","ligStartX","ligEndX","ligY","guessedAdvanceX","startIndex","textLineProps","ceil","flyweight","newLine","splice","obj","prop","measure","_result$blockBounds","createTypesetter","bidiFactory","threads","callNum","_thread","workerId","thread","getTransferables","requests","idleTimer","clearTimeout","setTimeout","typesetter","Thenable","thenable","resolve","transferables","GlyphsGeometry","templateGeometries","_InstancedBufferGeome","_super","_this","detail","curveRadius","materialIndex","boundingSphere","boundingBox","updateBufferAttr","_blockBounds","_chunkedBounds","setInstanceCount","_updateBounds","bbox","PI","sin","cos","halfPi","twoPi","absR","leftAngle","rightAngle","maxZ","getBoundingSphere","clipRect","getAttribute","chunks","_this2","_detail","tpl","geom","translate","getTemplateGeometry","attr","attributes","clone","setIndex","getIndex","_curveRadius","attrName","newArray","itemSize","array","setAttribute","_maxInstanceCount","dispose","deleteAttribute","attribute","VERTEX_TRANSFORM","FRAGMENT_DEFS","Text","defaultMaterial","color","side","transparent","tempMat4","tempVec3a","tempVec3b","tempArray","origin","first","Array","isArray","_getFlatRaycastMesh","mesh","_getCurvedRaycastMesh","syncStartEvent","syncCompleteEvent","SYNCABLE_PROPS","COPYABLE_PROPS","_Mesh","_super2","_this3","geometry","material","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","depthOffset","orientation","glyphGeometryDetail","debugSDF","_this4","_needsSync","_isSyncing","_queuedSyncs","dispatchEvent","textRenderInfo","_textRenderInfo","updateGlyphs","queued","sync","fn","renderer","scene","camera","group","isTroikaTextMaterial","_prepareForRender","isOutline","isTextOutlineMaterial","uniforms","textInfo","uTroikaSDFTexture","uTroikaSDFTextureSize","uTroikaSDFGlyphSize","uTroikaSDFExponent","uTroikaTotalBounds","fromArray","uTroikaUseGlyphColors","distanceOffset","blurRadius","offsetX","offsetY","_parsePercent","uTroikaStrokeColor","uTroikaDistanceOffset","uTroikaPositionOffset","uTroikaBlurRadius","uTroikaStrokeWidth","uTroikaStrokeOpacity","uTroikaFillOpacity","uTroikaCurveRadius","uTroikaClipRect","pad","applyClipRect","uTroikaSDFDebug","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","colorObj","_input","orient","_orientation","rotMat","uTroikaOrient","_match","hSign","hAxis","vSign","vAxis","lookAt","cross","setFromMatrix4","identity","position","target","copy","atan2","localPositionToTextCoords","worldToLocal","raycaster","intersects","raycastMesh","_geom$attributes","uv","getX","getY","setXYZ","matrixWorld","raycast","_i8","object","source","_this5","derivedMaterial","_derivedMaterial","baseMaterial","_baseMaterial","_defaultMaterial","textMaterial","chained","extensions","derivatives","uTroikaOutlineOpacity","vertexDefs","vertexTransform","fragmentDefs","fragmentColorTransform","customRewriter","_ref6","vertexShader","fragmentShader","uDiffuseRE","defineProperties","shadowSide","createTextDerivedMaterial","addEventListener","onDispose","removeEventListener","outlineMaterial","_outlineMtl","id","depthWrite","getDepthMaterial","getDistanceMaterial","privateKey","deprMsgShown","_deprecated_anchor","warn","WeakMap"],"mappings":"2FAAA,0fAyCA,SAASA,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAiF,OAA3EC,KAAKC,UAAUC,SAASC,KAAKP,QAAQC,UAAUG,KAAM,IAAI,iBAAyB,EAAQ,MAAOI,GAAK,OAAO,GAFzPC,GAA6B,OAAO,WAAc,IAAsCC,EAAlCC,EAAQ,YAAgBb,GAAkB,GAAIC,EAA2B,CAAE,IAAIa,EAAY,YAAgBC,MAAMC,YAAaJ,EAASV,QAAQC,UAAUU,EAAOI,UAAWH,QAAqBF,EAASC,EAAMK,MAAMH,KAAME,WAAc,OAAO,YAA2BF,KAAMH,IAoBxY,SAASO,EAAmBC,GAS1B,SAASC,EAAuBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtD,IAAIC,EAAK,EAAID,EACb,MAAO,CACLE,EAAGD,EAAKA,EAAKP,EAAK,EAAIO,EAAKD,EAAIJ,EAAKI,EAAIA,EAAIF,EAC5CK,EAAGF,EAAKA,EAAKN,EAAK,EAAIM,EAAKD,EAAIH,EAAKG,EAAIA,EAAID,GAQhD,SAASK,EAAmBV,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIM,EAAIC,EAAIN,GAC1D,IAAIC,EAAK,EAAID,EACb,MAAO,CACLE,EAAGD,EAAKA,EAAKA,EAAKP,EAAK,EAAIO,EAAKA,EAAKD,EAAIJ,EAAK,EAAIK,EAAKD,EAAIA,EAAIF,EAAKE,EAAIA,EAAIA,EAAIK,EAChFF,EAAGF,EAAKA,EAAKA,EAAKN,EAAK,EAAIM,EAAKA,EAAKD,EAAIH,EAAK,EAAII,EAAKD,EAAIA,EAAID,EAAKC,EAAIA,EAAIA,EAAIM,GAIpF,SAASC,IACP,OAAQC,KAAKC,aAAe/B,MAAM6B,MAqHpC,OAtGA,SAAqBG,EAAUC,EAAWC,EAAMC,EAASC,GAWvD,IAVA,IAQIC,EAAOC,EAAQC,EAAQC,EAAOC,EAR9BC,EAAc/B,UAAUgC,OAAS,QAAsBC,IAAjBjC,UAAU,GAAmBA,UAAU,GAAK,EAClFkC,EAAQhB,IACRiB,EAAc,IAAIC,WAAWf,EAAWC,GACxCe,EAAeb,EAAQ,GAAKA,EAAQ,GACpCc,EAAgBd,EAAQ,GAAKA,EAAQ,GAErCe,EAAoBpC,EAAyBqB,GAC7CgB,EAAY,wBAGTd,EAAQc,EAAUC,KAAKlB,IAAO,CACnC,IAAImB,EAAOhB,EAAM,GAAGiB,QAAQ,aAAc,IAAIC,MAAM,UAAUC,KAAI,SAAUC,GAC1E,OAAOC,WAAWD,MAGpB,OAAQpB,EAAM,IACZ,IAAK,IACHG,EAAQF,EAASe,EAAK,GACtBZ,EAAQF,EAASc,EAAK,GACtB,MAEF,IAAK,IACCA,EAAK,KAAOb,GAASa,EAAK,KAAOZ,GAEnCS,EAAkBS,eAAenB,EAAOC,EAAOD,EAAQa,EAAK,GAAIZ,EAAQY,EAAK,IAG/E,MAEF,IAAK,IAOD,IALA,IAAIO,EAAY,CACdpC,EAAGgB,EACHf,EAAGgB,GAGIoB,EAAI,EAAGA,EA9EP,GA8EyBA,IAAK,CACrC,IAAIC,EAAY/C,EAAuByB,EAAOC,EAAOY,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIQ,EAAI,IAC7FX,EAAkBS,eAAeC,EAAUpC,EAAGoC,EAAUnC,EAAGqC,EAAUtC,EAAGsC,EAAUrC,GAClFmC,EAAYE,EAGdtB,EAAQa,EAAK,GACbZ,EAAQY,EAAK,GACb,MAGJ,IAAK,IAOD,IALA,IAAIU,EAAa,CACfvC,EAAGgB,EACHf,EAAGgB,GAGIuB,EAAK,EAAGA,EAhGR,GAgG2BA,IAAM,CACxC,IAAIC,EAAavC,EAAmBc,EAAOC,EAAOY,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIW,EAAK,IAE7Gd,EAAkBS,eAAeI,EAAWvC,EAAGuC,EAAWtC,EAAGwC,EAAWzC,EAAGyC,EAAWxC,GACtFsC,EAAaE,EAGfzB,EAAQa,EAAK,GACbZ,EAAQY,EAAK,GACb,MAGJ,IAAK,IACCb,IAAUF,GAAUG,IAAUF,GAChCW,EAAkBS,eAAenB,EAAOC,EAAOH,EAAQC,IAS/D,IAAK,IAAI2B,EAAO,EAAGA,EAAOlC,EAAUkC,IAClC,IAAK,IAAIC,EAAO,EAAGA,EAAOlC,EAAWkC,IAAQ,CAC3C,IAAIC,EAAalB,EAAkBmB,0BAA0BlC,EAAQ,GAAKa,GAAgBkB,EAAO,IAAOlC,EAAUG,EAAQ,GAAKc,GAAiBkB,EAAO,IAAOlC,EAAWG,GAIrKkC,EAAQC,KAAKC,IAAI,EAAID,KAAKE,IAAIL,GAAchC,EAAaM,GAAe,EAExE0B,EAAa,IACfE,EAAQ,EAAIA,GAGdA,EAAQC,KAAKG,IAAI,EAAGH,KAAKI,IAAI,IAAKJ,KAAKK,MAAc,IAARN,KAE7CxB,EAAYqB,EAAOnC,EAAWkC,GAAQI,EAI1C,MAAO,CACLxB,YAAaA,EACb+B,OAAQhD,IAAQgB,IAysBtB,SAAS/B,EAAyBgE,GAChC,IAAIC,GAAY,EACZC,EAAW,GAEf,SAASC,IACHF,IAEFC,EAASE,MAAK,SAAUC,EAAGC,GACzB,OAAOD,EAAEE,KAAOD,EAAEC,QAEpBN,GAAY,GAqFhB,SAASO,EAA+B9D,EAAGC,EAAG8D,EAAQC,EAAQC,EAAQC,GACpE,IAAIC,EAAMF,EAASF,EACfK,EAAMF,EAASF,EACfK,EAAWF,EAAMA,EAAMC,EAAMA,EAC7BtE,EAAIuE,EAAWtB,KAAKG,IAAI,EAAGH,KAAKI,IAAI,IAAKnD,EAAI+D,GAAUI,GAAOlE,EAAI+D,GAAUI,GAAOC,IAAa,EAChGC,EAAKtE,GAAK+D,EAASjE,EAAIqE,GACvBI,EAAKtE,GAAK+D,EAASlE,EAAIsE,GAC3B,OAAOE,EAAKA,EAAKC,EAAKA,EAGxB,MAAO,CACLpC,eApFF,SAAwB3C,EAAIC,EAAIC,EAAIC,GAClC,IAAI6E,EAAU,CACZhF,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJ8E,KAAM1B,KAAKI,IAAI3D,EAAIE,GACnBgF,KAAM3B,KAAKI,IAAI1D,EAAIE,GACnBkE,KAAMd,KAAKG,IAAI1D,EAAIE,GACnBiF,KAAM5B,KAAKG,IAAIzD,EAAIE,IAErB6D,EAASoB,KAAKJ,GACdjB,GAAY,GAyEZV,0BA9DF,SAAmC7C,EAAGC,GACpCwD,IAIA,IAHA,IAAIoB,EAAgBC,IAChBC,EAAcD,IAETzC,EAAImB,EAASrC,OAAQkB,KAAM,CAClC,IAAI2C,EAAMxB,EAASnB,GACnB,GAAI2C,EAAInB,KAAOkB,GAAe/E,EAAG,MAEjC,GAAIA,EAAI+E,EAAcC,EAAIP,MAAQxE,EAAI8E,EAAcC,EAAIL,MAAQ1E,EAAI8E,EAAcC,EAAIN,KAAM,CAC1F,IAAIO,EAASnB,EAA+B9D,EAAGC,EAAG+E,EAAIxF,GAAIwF,EAAIvF,GAAIuF,EAAItF,GAAIsF,EAAIrF,IAE1EsF,EAASJ,IACXA,EAAgBI,EAChBF,EAAchC,KAAKmC,KAAKL,KAU9B,OAKF,SAAuB7E,EAAGC,GACxBwD,IAGA,IAFA,IAAI0B,GAAS,EAEJ9C,EAAImB,EAASrC,OAAQkB,KAAM,CAClC,IAAI2C,EAAMxB,EAASnB,GACnB,GAAI2C,EAAInB,MAAQ7D,EAAG,MAEnB,GAAIgF,EAAIN,KAAOzE,GAAK+E,EAAIL,KAAO1E,EACZ+E,EAAIvF,GAAKQ,GAAM+E,EAAIrF,GAAKM,GAAKD,GAAKgF,EAAItF,GAAKsF,EAAIxF,KAAOS,EAAI+E,EAAIvF,KAAOuF,EAAIrF,GAAKqF,EAAIvF,IAAMuF,EAAIxF,KAG3G2F,GAAUA,GAKhB,OAAOA,EA1BHC,CAAcpF,EAAGC,KACnB8E,GAAeA,GAGVA,IAumEX,IAAIM,EAA4B,YAAmB,CACjDC,KAAM,mBACNC,aAAc,CA1jEhB,WACE,MAAO,oBAAsBC,SAAWlF,KAAKkF,OAASlF,MAAO,SAAUmF,GACrE,IAAI7G,EAAI,CACN8G,MAAO,SAAeD,GACpB,IAAI3F,EAAIlB,EAAE+G,KACNhC,EAAI,IAAIpC,WAAWkE,GAEvB,GAAI,QAAU3F,EAAE8F,UAAUjC,EAAG,EAAG,GAAI,CAClC,IAAIkC,EAAI,EACR/F,EAAEgG,WAAWnC,EAAGkC,GAAIA,GAAK,EAAG/F,EAAEgG,WAAWnC,EAAGkC,GAAIA,GAAK,EACrD,IAAIE,EAAIjG,EAAEkG,SAASrC,EAAGkC,GACtBA,GAAK,EAEL,IAAK,IAAII,EAAI,GAAI5D,EAAI,EAAGA,EAAI0D,EAAG1D,IAAK,CAClC,IAAI6D,EAAIpG,EAAEkG,SAASrC,EAAGkC,GACtBA,GAAK,EAAGI,EAAErB,KAAKhG,EAAEuH,UAAUxC,EAAGuC,IAGhC,OAAOD,EAGT,MAAO,CAACrH,EAAEuH,UAAUxC,EAAG,KAEzBwC,UAAW,SAAmBV,EAAG3F,GAC/B,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACR6D,EAAEyC,UAAUX,EAAG3F,GAAIA,GAAK,EACxB,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAEzF,IAAK,IAAImG,EAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS5D,EAAI,CACzIgE,MAAOZ,EACPa,QAAST,GACRK,EAAI,GAAIK,EAAI,EAAGA,EAAIR,EAAGQ,IAAK,CAC5B,IAAIC,EAAI7C,EAAEiC,UAAUH,EAAG3F,EAAG,GAC1BA,GAAK,EAAG6D,EAAEqC,SAASP,EAAG3F,GAAIA,GAAK,EAC/B,IAAI2G,EAAI9C,EAAEqC,SAASP,EAAG3F,GACtBA,GAAK,EACL,IAAI4G,EAAI/C,EAAEqC,SAASP,EAAG3F,GACtBA,GAAK,EAAGoG,EAAEM,GAAK,CACbG,OAAQF,EACRtF,OAAQuF,GAIZ,IAAKH,EAAI,EAAGA,EAAIN,EAAE9E,OAAQoF,IAAK,CAC7B,IAAItE,EAAIgE,EAAEM,GACVL,EAAEjE,KAAOI,EAAEJ,EAAE2E,QAAUhI,EAAEqD,EAAE2E,QAAQlB,MAAMD,EAAGS,EAAEjE,GAAG0E,OAAQT,EAAEjE,GAAGd,OAAQkB,IAGxE,OAAOA,GAETwE,WAAY,SAAoBpB,EAAG3F,EAAG6D,GACpC,IAAK,IAAIkC,EAAIjH,EAAE+G,KAAMI,EAAIF,EAAEC,WAAWL,EAAG9B,EAAI,GAAIsC,EAAItC,EAAI,GAAItB,EAAI,EAAGA,EAAI0D,EAAG1D,IAAK,CAC9E,IAAI6D,EAAIL,EAAED,UAAUH,EAAGQ,EAAG,GAC1BA,GAAK,EAAGJ,EAAEG,SAASP,EAAGQ,GAAIA,GAAK,EAC/B,IAAIM,EAAIV,EAAEG,SAASP,EAAGQ,GACtB,GAAIA,GAAK,EAAGJ,EAAEG,SAASP,EAAGQ,GAAIA,GAAK,EAAGC,GAAKpG,EAAG,OAAOyG,EAGvD,OAAO,IAGX3H,EAAE+G,KAAO,CACPS,UAAW,SAAmBX,EAAG7G,GAC/B,OAAQ6G,EAAE7G,IAAM,EAAI6G,EAAE7G,EAAI,KAAO6G,EAAE7G,EAAI,IAAM,EAAI6G,EAAE7G,EAAI,IAAM,OAE/DkI,YAAa,SAAqBrB,EAAG3F,GACnC,OAAOlB,EAAE+G,KAAKoB,UAAUtB,EAAG3F,GAAK,OAElCkH,QAAS,SAAiBvB,EAAG3F,GAC3B,OAAOlB,EAAE+G,KAAKsB,MAAMxB,GAAGyB,SAASpH,IAElCqH,SAAU,SAAkB1B,EAAG3F,GAC7B,OAAOlB,EAAE+G,KAAKsB,MAAMxB,GAAG2B,QAAQtH,IAEjCiH,UAAW,SAAmBtB,EAAG3F,GAC/B,OAAOlB,EAAE+G,KAAKsB,MAAMxB,GAAG4B,SAASvH,IAElCgG,WAAY,SAAoBL,EAAG3F,GACjC,OAAOlB,EAAE+G,KAAKsB,MAAMxB,GAAG6B,UAAUxH,IAEnCyH,YAAa,SAAqB9B,EAAG3F,EAAG6D,GACtC,IAAK,IAAIkC,EAAI,GAAIE,EAAI,EAAGA,EAAIpC,EAAGoC,IAC7BF,EAAEjB,KAAKhG,EAAE+G,KAAKG,WAAWL,EAAG3F,EAAI,EAAIiG,IAGtC,OAAOF,GAETG,SAAU,SAAkBP,EAAG3F,GAC7B,OAAOlB,EAAE+G,KAAKsB,MAAMxB,GAAG+B,UAAU1H,IAEnC2H,WAAY,SAAoBhC,EAAG3F,GACjC,OAAO,WAAalB,EAAE+G,KAAKK,SAASP,EAAG3F,GAAKlB,EAAE+G,KAAKK,SAASP,EAAG3F,EAAI,IAErE8F,UAAW,SAAmBH,EAAG7G,EAAGkB,GAClC,IAAK,IAAI6D,EAAI,GAAIkC,EAAI,EAAGA,EAAI/F,EAAG+F,IAC7BlC,GAAK+D,OAAOC,aAAalC,EAAE7G,EAAIiH,IAGjC,OAAOlC,GAETiE,YAAa,SAAqBnC,EAAG7G,EAAGkB,GACtC,IAAK,IAAI6D,EAAI,GAAIkC,EAAI,EAAGA,EAAI/F,EAAG+F,IAAK,CAClC,IAAIE,EAAIN,EAAE7G,MAAQ,EAAI6G,EAAE7G,KACxB+E,GAAK+D,OAAOC,aAAa5B,GAG3B,OAAOpC,GAETkE,MAAO,oBAAsBrC,QAAUA,OAAOsC,YAAc,IAAItC,OAAOsC,YAAgB,KACvFC,SAAU,SAAkBtC,EAAG3F,EAAG6D,GAChC,IAAIkC,EAAIjH,EAAE+G,KAAKkC,MACf,OAAOhC,GAAK,GAAK/F,GAAK6D,GAAK8B,EAAEtE,OAAS0E,EAAEmC,OAAOvC,GAAK7G,EAAE+G,KAAKC,UAAUH,EAAG3F,EAAG6D,IAE7EsE,UAAW,SAAmBxC,EAAG7G,EAAGkB,GAClC,IAAK,IAAI6D,EAAI,GAAIkC,EAAI,EAAGA,EAAI/F,EAAG+F,IAC7BlC,EAAEiB,KAAKa,EAAE7G,EAAIiH,IAGf,OAAOlC,GAETuE,eAAgB,SAAwBzC,EAAG7G,EAAGkB,GAC5C,IAAK,IAAI6D,EAAI,GAAIkC,EAAI,EAAGA,EAAI/F,EAAG+F,IAC7BlC,EAAEiB,KAAK8C,OAAOC,aAAalC,EAAE7G,EAAIiH,KAGnC,OAAOlC,GAETsD,MAAO,SAAexB,GACpB,OAAOA,EAAE0C,YAAc1C,EAAE0C,UAAY1C,EAAE2C,OAAS,IAAIC,SAAS5C,EAAE2C,OAAQ3C,EAAE6C,WAAY7C,EAAE8C,YAAc,IAAIF,SAAS,IAAI9G,WAAWkE,GAAG2C,WAErIxJ,EAAE4J,MAAQ,GAAI5J,EAAE4J,MAAM9C,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,EAAGE,GACrD,IAAIE,EAAIrH,EAAE+G,KACNtD,EAAI,GACJ6D,EAAIpG,EACRmG,EAAEG,UAAUX,EAAG3F,GAAIA,GAAK,EACxB,IAAIyG,EAAIN,EAAEH,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI0G,EAAIP,EAAEH,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI2G,EAAIR,EAAEH,WAAWL,EAAG3F,GACxB,OAAOA,GAAK,EAAGuC,EAAEoG,WAAa7J,EAAE4J,MAAME,eAAejD,EAAGS,EAAIK,GAAIlE,EAAEsG,YAAc/J,EAAE4J,MAAMI,gBAAgBnD,EAAGS,EAAIM,GAAInE,EAAEwG,WAAajK,EAAE4J,MAAMM,eAAerD,EAAGS,EAAIO,EAAGV,GAAI1D,GACtKzD,EAAE4J,MAAMM,eAAiB,SAAUrD,EAAG3F,EAAG6D,GAC1C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAIjG,EACJmG,EAAI,GACJ5D,EAAIwD,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIoG,EAAI,EAAGA,EAAI7D,EAAG6D,IAAK,CAC1B,IAAIK,EAAIV,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAI0G,EAAI5H,EAAE4J,MAAMO,gBAAgBtD,EAAGM,EAAIQ,EAAG5C,GAE1CsC,EAAErB,KAAK4B,GAGT,OAAOP,GACNrH,EAAE4J,MAAMO,gBAAkB,SAAUtD,EAAG3F,EAAG6D,GAC3C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAIjG,EACJmG,EAAI,CACN+C,KAAM,IAER/C,EAAEgD,MAAQpD,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGmG,EAAEiD,KAAOrD,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EACxE,IAAIuC,EAAIwD,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIoG,EAAID,EAAEgD,MAAO1C,EAAI,EAAGA,EAAIlE,EAAGkE,IAAK,CACvC,IAAIC,EAAIX,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI2G,EAAI9C,EAAE8B,EAAGS,EAAGH,EAAIS,EAAGP,GACvBA,EAAE+C,KAAKpE,KAAK6B,GAGd,OAAOR,GACNrH,EAAE4J,MAAMW,UAAY,SAAU1D,GAC/B,IAAK,IAAI7G,EAAI,EAAGkB,EAAI,EAAGA,EAAI,GAAIA,IAC7B,IAAM2F,IAAM3F,EAAI,IAAMlB,IAGxB,OAAOA,GACNA,EAAE4J,MAAMY,aAAe,SAAU3D,EAAG3F,GACrC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACJE,EAAIpC,EAAEmC,WAAWL,EAAG3F,GAExB,GAAIA,GAAK,EAAG,GAAKiG,EAAG,CAClB,IAAIE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAIuC,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIoG,EAAI,EAAGA,EAAI7D,EAAG6D,IACrBL,EAAEjB,KAAKqB,EAAIC,GAAIL,EAAEjB,KAAKqB,EAAIC,GAAIL,EAAEjB,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAInE,GAAI,GAAKiG,EAAG,CACV,IAAIQ,EAAI5C,EAAEmC,WAAWL,EAAG3F,GAGxB,IAFAA,GAAK,EAEAoG,EAAI,EAAGA,EAAIK,EAAGL,IACjBL,EAAEjB,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAAG+F,EAAEjB,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAAG+F,EAAEjB,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAI7G,OAAO+F,GACNjH,EAAE4J,MAAMa,YAAc,SAAU5D,EAAG7G,GACpC,IAAK,IAAIkB,EAAI,EAAGA,EAAI2F,EAAEtE,OAAQrB,GAAK,EAAG,CACpC,IAAI6D,EAAI8B,EAAE3F,GACN+F,EAAIJ,EAAE3F,EAAI,GACd,GAAI2F,EAAE3F,EAAI,GAAI6D,GAAK/E,GAAKA,GAAKiH,EAAG,OAAO/F,EAGzC,OAAQ,GACPlB,EAAE4J,MAAMc,aAAe,SAAU7D,EAAG3F,GACrC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACRA,EAAE0D,IAAM5F,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACjC,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxB,OAAOA,GAAK,EAAG,GAAK+F,EAAE0D,MAAQ1D,EAAE2D,IAAM7F,EAAE4D,YAAY9B,EAAG3F,EAAGiG,IAAK,GAAKF,EAAE0D,MAAQ1D,EAAE2D,IAAM7F,EAAE4D,YAAY9B,EAAG3F,EAAG,EAAIiG,IAAKF,GAClHjH,EAAE4J,MAAMiB,cAAgB,SAAUhE,EAAG3F,GACtC,IAAI6D,EAAI8B,EAAE+D,IACV,GAAI,GAAK/D,EAAE8D,IAAK,OAAO5F,EAAE+F,QAAQ5J,GAEjC,GAAI,GAAK2F,EAAE8D,IAAK,CACd,IAAI1D,EAAIjH,EAAE4J,MAAMa,YAAY1F,EAAG7D,GAE/B,IAAK,GAAK+F,EAAG,OAAOlC,EAAEkC,EAAI,IAAM/F,EAAI6D,EAAEkC,IAGxC,OAAQ,GACPjH,EAAE4J,MAAMI,gBAAkB,SAAUnD,EAAG3F,GACxC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIvC,EAAEiC,UAAUH,EAAG3F,EAAG,GAC1BA,GAAK,EACL,IAAIyG,EAAI5C,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAI0G,EAAI5H,EAAE4J,MAAMmB,iBAAiBlE,EAAGI,EAAIU,GAExCC,EAAEoD,IAAM1D,EAAEU,OAAQb,EAAEnB,KAAK4B,GAG3B,OAAOT,GACNnH,EAAE4J,MAAMmB,iBAAmB,SAAUlE,EAAG3F,GACzC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGmG,EAAI,IAAMF,EAAE8D,cAAgBhE,EAAII,GACxC,IAAI5D,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEyD,IAAM,GAEhB,IAAK,IAAItD,EAAI,EAAGA,EAAI7D,EAAG6D,IACrBH,EAAEyD,IAAI5E,KAAKjB,EAAEmC,WAAWL,EAAG3F,EAAI,EAAIoG,IAGrC,OAAOH,GACNnH,EAAE4J,MAAME,eAAiB,SAAUjD,EAAG3F,GACvC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIvC,EAAEiC,UAAUH,EAAG3F,EAAG,GAC1BA,GAAK,EACL,IAAIyG,EAAI5C,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEG,EAAEU,QAAUhI,EAAE4J,MAAMsB,gBAAgBrE,EAAGI,EAAIU,GAGvD,OAAOR,GACNnH,EAAE4J,MAAMsB,gBAAkB,SAAUrE,EAAG3F,GACxC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAW,QAAInH,EAAE4J,MAAMuB,iBAAiBtE,EAAGI,EAAII,GACvD,IAAI5D,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIoG,EAAI,EAAGA,EAAI7D,EAAG6D,IAAK,CAC1B,IAAIK,EAAI5C,EAAEiC,UAAUH,EAAG3F,EAAG,GAC1BA,GAAK,EACL,IAAI0G,EAAI7C,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEQ,EAAEK,QAAUhI,EAAE4J,MAAMuB,iBAAiBtE,EAAGI,EAAIW,GAGxD,OAAOT,GACNnH,EAAE4J,MAAMuB,iBAAmB,SAAUtE,EAAG3F,GACzC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACRlC,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEmE,WAAarG,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACpE,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxB,OAAOA,GAAK,EAAG+F,EAAEoE,SAAWtG,EAAE4D,YAAY9B,EAAG3F,EAAGiG,GAAIF,GACnDjH,EAAEsL,IAAM,GAAItL,EAAEsL,IAAIxE,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC3C,IAAIkC,EAAIjH,EAAE+G,MACTF,EAAI,IAAIlE,WAAWkE,EAAE2C,OAAQtI,EAAG6D,IAAI7D,EAAI,GAAI2F,IAAI3F,GAAI2F,IAAI3F,GAAI2F,IAAI3F,GAAIA,IACrE,IAAIiG,EAAI,GACRjG,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAGiG,GAE1B,IAAK,IAAIE,EAAI,GAAI5D,EAAI,EAAGA,EAAI0D,EAAE5E,OAAS,EAAGkB,IACxC4D,EAAErB,KAAKiB,EAAED,UAAUH,EAAG3F,EAAIiG,EAAE1D,GAAI0D,EAAE1D,EAAI,GAAK0D,EAAE1D,KAG/CvC,GAAKiG,EAAEA,EAAE5E,OAAS,GAClB,IAAI+E,EAAI,GACRpG,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAGoG,GAC1B,IAAIK,EAAI,GAER,IAAKlE,EAAI,EAAGA,EAAI6D,EAAE/E,OAAS,EAAGkB,IAC5BkE,EAAE3B,KAAKhG,EAAEsL,IAAIE,SAAS3E,EAAG3F,EAAIoG,EAAE7D,GAAIvC,EAAIoG,EAAE7D,EAAI,KAG/CvC,GAAKoG,EAAEA,EAAE/E,OAAS,GAClB,IAAIqF,EAAID,EAAE,GACNE,EAAI,GACR3G,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAG2G,GAC1B,IAAIC,EAAI,GAER,IAAKrE,EAAI,EAAGA,EAAIoE,EAAEtF,OAAS,EAAGkB,IAC5BqE,EAAE9B,KAAKiB,EAAED,UAAUH,EAAG3F,EAAI2G,EAAEpE,GAAIoE,EAAEpE,EAAI,GAAKoE,EAAEpE,KAG/C,GAAIvC,GAAK2G,EAAEA,EAAEtF,OAAS,GAAIvC,EAAEsL,IAAIG,UAAU5E,EAAG3F,EAAG0G,GAAIA,EAAE8D,YAAa,CACjExK,EAAI0G,EAAE8D,YACN7D,EAAI,GACJ3G,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAG2G,GAC1B,IAAIxE,EAAI,GAER,IAAKI,EAAI,EAAGA,EAAIoE,EAAEtF,OAAS,EAAGkB,IAC5BJ,EAAE2C,KAAKiB,EAAEoC,UAAUxC,EAAG3F,EAAI2G,EAAEpE,GAAIoE,EAAEpE,EAAI,GAAKoE,EAAEpE,KAG/CmE,EAAE8D,YAAcrI,EAGlB,GAAIuE,EAAE+D,IAAK,CACTzK,EAAI0G,EAAEgE,QACN,IAAIC,EAAI,GAGR,IAFA3K,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAG2K,GAAIjE,EAAEgE,QAAU,GAErCnI,EAAI,EAAGA,EAAIoI,EAAEtJ,OAAS,EAAGkB,IAAK,CACjC,IAAIqI,EAAI9L,EAAEsL,IAAIE,SAAS3E,EAAG3F,EAAI2K,EAAEpI,GAAIvC,EAAI2K,EAAEpI,EAAI,IAC9CzD,EAAEsL,IAAIS,WAAWlF,EAAGiF,EAAGhE,GAAIF,EAAEgE,QAAQ5F,KAAK8F,GAG5C5K,GAAK2K,EAAEA,EAAEtJ,OAAS,GAAIrB,EAAI0G,EAAEoE,SAAUpE,EAAEoE,SAAW,GACnD,IAAIC,EAAIpF,EAAE3F,GACV,GAAIA,IAAK,GAAK+K,EAAG,MAAMA,EACvB,IAAIC,EAAIjF,EAAEC,WAAWL,EAAG3F,GAGxB,IAFAA,GAAK,EAEAuC,EAAI,EAAGA,EAAIyI,EAAI,EAAGzI,IACrBmE,EAAEoE,SAAShG,KAAKiB,EAAEC,WAAWL,EAAG3F,GAAI2F,EAAE3F,EAAI,IAAKA,GAAK,EAIxD,OAAO0G,EAAEuE,WAAavE,EAAEuE,SAAWnM,EAAEsL,IAAIc,aAAavF,EAAGe,EAAEuE,SAAUvE,EAAE8D,YAAYnJ,SAAUqF,EAAEyE,UAAYzE,EAAEyE,QAAUrM,EAAEsL,IAAIgB,YAAYzF,EAAGe,EAAEyE,QAASzE,EAAE8D,YAAYnJ,SAAUvC,EAAEsL,IAAIS,WAAWlF,EAAGe,EAAGE,GAAIF,GACzM5H,EAAEsL,IAAIS,WAAa,SAAUlF,EAAG3F,EAAG6D,GACpC,IAAIkC,EAEJ,IAAK,IAAIE,KAAKjG,EAAEqL,UAAYtF,EAAI/F,EAAEqL,QAAQ,GAAIrL,EAAEqL,QAAUvM,EAAEsL,IAAIE,SAAS3E,EAAGI,EAAGA,EAAI/F,EAAEqL,QAAQ,IAAKrL,EAAEqL,QAAQC,OAASxM,EAAEsL,IAAIG,UAAU5E,EAAGI,EAAI/F,EAAEqL,QAAQC,MAAOtL,EAAEqL,UAAWrL,GACvK,GAAK,CAAC,aAAc,WAAY,WAAY,SAAU,UAAW,aAAa4J,QAAQ3D,KAAOjG,EAAEiG,GAAKpC,EAAE7D,EAAEiG,GAAK,IAAM,MAErHnH,EAAEsL,IAAIG,UAAY,SAAU5E,EAAG3F,EAAG6D,GACnC,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACRjG,EAAIlB,EAAEsL,IAAIC,UAAU1E,EAAG3F,EAAGiG,GAC1B,IAAIE,EACA5D,EAAI0D,EAAE5E,OACV8E,EAAI5D,EAAI,KAAO,IAAMA,EAAI,MAAQ,KAAO,MAAOsB,EAAE0H,KAAOpF,EAAGtC,EAAEyH,MAAQ,GAErE,IAAK,IAAIlF,EAAI,EAAGA,EAAIH,EAAE5E,OAAS,EAAG+E,IAChCvC,EAAEyH,MAAMxG,KAAKiB,EAAEoC,UAAUxC,EAAG3F,EAAIiG,EAAEG,GAAIH,EAAEG,EAAI,GAAKH,EAAEG,MAEpDtH,EAAEsL,IAAIosL,IAAIqB,eAAiB,SAAU9F,EAAG7G,GACr/B,IAAK,IAAIkB,EAAI,EAAGA,EAAI2F,EAAEwF,QAAQ9J,OAAQrB,IACpC,GAAI2F,EAAEwF,QAAQnL,IAAMlB,EAAG,OAAOkB,EAGhC,OAAQ,GACPlB,EAAEsL,IAAIsB,UAAY,SAAU/F,EAAG3F,GAChC,OAAOA,EAAI,GAAKA,EAAI,KAAO,EAAIlB,EAAEsL,IAAIqB,eAAe9F,EAAG7G,EAAEsL,IAAIoB,QAAQxL,KACpElB,EAAEsL,IAAIc,aAAe,SAAUvF,EAAG3F,EAAG6D,GACtC/E,EAAE+G,KACF,IAAIE,EAAI,CAAC,WACLE,EAAIN,EAAE3F,GACV,GAAIA,IAAK,GAAKiG,EAAG,KAAM,mCAAqCA,EAC5D,IAAIE,EAAIR,EAAE3F,GACVA,IAEA,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IACrBwD,EAAEjB,KAAKa,EAAE3F,EAAIuC,IAGf,OAAOwD,GACNjH,EAAEsL,IAAIgB,YAAc,SAAUzF,EAAG3F,EAAG6D,GACrC,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,CAAC,WACLE,EAAIR,EAAE3F,GACV,GAAIA,IAAK,GAAKmG,EAAG,IAAK,IAAI5D,EAAI,EAAGA,EAAIsB,EAAGtB,IAAK,CAC3C,IAAI6D,EAAIL,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEnB,KAAKsB,OACV,CACL,GAAI,GAAKD,GAAK,GAAKA,EAAG,KAAM,kBAAoBA,EAEhD,KAAOF,EAAE5E,OAASwC,GAAI,CACpBuC,EAAIL,EAAEC,WAAWL,EAAG3F,GACpBA,GAAK,EACL,IAAIyG,EAAI,EAGR,IAFA,GAAKN,GAAKM,EAAId,EAAE3F,GAAIA,MAAQyG,EAAIV,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,GAEpDuC,EAAI,EAAGA,GAAKkE,EAAGlE,IAClB0D,EAAEnB,KAAKsB,GAAIA,KAIjB,OAAOH,GACNnH,EAAEsL,IAAIC,UAAY,SAAU1E,EAAG3F,EAAG6D,GACnC,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAIF,EAAEC,WAAWL,EAAG3F,GAAK,EACzBmG,EAAIR,EAAE3F,GAAK,GACf,GAAIA,IAAK,GAAKmG,EAAG,IAAK,IAAI5D,EAAI,EAAGA,EAAI0D,EAAG1D,IACtCsB,EAAEiB,KAAKa,EAAE3F,EAAIuC,SACR,GAAI,GAAK4D,EAAG,IAAK5D,EAAI,EAAGA,EAAI0D,EAAG1D,IACpCsB,EAAEiB,KAAKiB,EAAEC,WAAWL,EAAG3F,EAAI,EAAIuC,SAC1B,GAAI,GAAK4D,EAAG,IAAK5D,EAAI,EAAGA,EAAI0D,EAAG1D,IACpCsB,EAAEiB,KAAK,SAAWiB,EAAEG,SAASP,EAAG3F,EAAI,EAAIuC,EAAI,SACvC,GAAI,GAAK0D,EAAG,KAAM,4BAA8BE,EAAI,YAAcF,EACzE,OAAQjG,GAAKiG,EAAIE,GAAK,GACrBrH,EAAEsL,IAAIuB,cAAgB,SAAUhG,EAAG3F,EAAG6D,GACvC,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAIN,EAAE3F,GACNmG,EAAIR,EAAE3F,EAAI,GACd2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAC1B,IAAIuC,EAAI,EACJ6D,EAAI,KACJK,EAAI,KACRR,GAAK,KAAOG,EAAIH,EAAG1D,EAAI,GAAI,IAAM0D,IAAMG,EAAI,IAAMH,EAAIE,EAAG5D,EAAI,GAAI,IAAM0D,GAAKA,GAAK,KAAOG,EAAIH,EAAG1D,EAAI,GAAI,IAAM0D,IAAMQ,EAAIV,EAAEkB,UAAUtB,EAAG3F,EAAI,GAAIuC,EAAI,GAAI,IAAM0D,GAAKA,GAAK,KAAOG,EAAIH,EAAG1D,EAAI,GAAI,IAAM0D,GAAKA,GAAK,MAAQQ,EAAIR,EAAI,IAAK1D,EAAI,GAAI,KAAO0D,GAAKA,GAAK,MAAQQ,EAAI,KAAOR,EAAI,KAAOE,EAAI,IAAK5D,EAAI,GAAI,KAAO0D,GAAKA,GAAK,MAAQQ,EAAI,MAAQR,EAAI,KAAOE,EAAI,IAAK5D,EAAI,GAAI,KAAO0D,IAAMQ,EAAIV,EAAEmB,QAAQvB,EAAG3F,EAAI,GAAK,MAAOuC,EAAI,GAAIsB,EAAE+H,IAAM,MAAQnF,EAAIA,EAAI,IAAML,EAAGvC,EAAEgI,KAAOtJ,GACxczD,EAAEsL,IAAI0B,eAAiB,SAAUnG,EAAG3F,EAAG6D,GACxC,IAAK,IAAIkC,EAAI/F,EAAI6D,EAAGoC,EAAInH,EAAE+G,KAAMM,EAAI,GAAInG,EAAI+F,GAAI,CAC9C,IAAIxD,EAAIoD,EAAE3F,GACNoG,EAAIT,EAAE3F,EAAI,GACd2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAC1B,IAAIyG,EAAI,EACJC,EAAI,KACJC,EAAI,KACRpE,GAAK,KAAOmE,EAAInE,EAAGkE,EAAI,GAAI,IAAMlE,IAAMmE,EAAI,IAAMnE,EAAI6D,EAAGK,EAAI,GAAI,IAAMlE,GAAK,IAAMA,IAAMmE,EAAInE,EAAGkE,EAAI,GAAI,IAAMlE,GAAKA,GAAK,KAAOmE,EAAInE,EAAGkE,EAAI,GAAI,IAAMlE,IAAMoE,EAAIV,EAAEgB,UAAUtB,EAAG3F,EAAI,GAAIyG,EAAI,GAAI,IAAMlE,GAAKA,GAAK,KAAOmE,EAAInE,EAAGkE,EAAI,GAAI,IAAMlE,GAAKA,GAAK,MAAQoE,EAAIpE,EAAI,IAAKkE,EAAI,GAAI,KAAOlE,GAAKA,GAAK,MAAQoE,EAAI,KAAOpE,EAAI,KAAO6D,EAAI,IAAKK,EAAI,GAAI,KAAOlE,GAAKA,GAAK,MAAQoE,EAAI,MAAQpE,EAAI,KAAO6D,EAAI,IAAKK,EAAI,GAAI,KAAOlE,IAAMoE,EAAIV,EAAEiB,QAAQvB,EAAG3F,EAAI,GAAK,MAAOyG,EAAI,GAAIN,EAAErB,KAAK,MAAQ6B,EAAIA,EAAI,IAAMD,GAAI1G,GAAKyG,EAG7e,OAAON,GACNrH,EAAEsL,IAAIE,SAAW,SAAU3E,EAAG3F,EAAG6D,GAClC,IAAK,IAAIkC,EAAIjH,EAAE+G,KAAMI,EAAI,GAAIE,EAAI,GAAInG,EAAI6D,GAAI,CAC3C,IAAItB,EAAIoD,EAAE3F,GACNoG,EAAIT,EAAE3F,EAAI,GACd2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAAI2F,EAAE3F,EAAI,GAC1B,IAAIyG,EAAI,EACJC,EAAI,KACJC,EAAI,KACR,GAAI,IAAMpE,IAAMoE,EAAIZ,EAAEkB,UAAUtB,EAAG3F,EAAI,GAAIyG,EAAI,GAAI,IAAMlE,IAAMoE,EAAIZ,EAAEmB,QAAQvB,EAAG3F,EAAI,GAAIyG,EAAI,GAAI,IAAMlE,GAAKA,GAAK,MAAQoE,EAAIpE,EAAI,IAAKkE,EAAI,GAAI,KAAOlE,GAAKA,GAAK,MAAQoE,EAAI,KAAOpE,EAAI,KAAO6D,EAAI,IAAKK,EAAI,GAAI,KAAOlE,GAAKA,GAAK,MAAQoE,EAAI,MAAQpE,EAAI,KAAO6D,EAAI,IAAKK,EAAI,GAAI,KAAOlE,EAAG,MAAMoE,EAAIZ,EAAEmB,QAAQvB,EAAG3F,EAAI,GAAK,MAAOyG,EAAI,EAAG,iBAEtU,GAAI,IAAMlE,EAAG,CACX,IAAIqE,EAAI,GAER,IAAKH,EAAI,IAAK,CACZ,IAAItE,EAAIwD,EAAE3F,EAAIyG,GACdA,IACA,IAAIkE,EAAIxI,GAAK,EACTyI,EAAI,GAAKzI,EACb,GAAI,IAAMwI,GAAK/D,EAAE9B,KAAK6F,GAAI,IAAMC,GAAKhE,EAAE9B,KAAK8F,GAAI,IAAMA,EAAG,MAG3D,IAAK,IAAIG,EAAI,GAAIC,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,KAAM,WAAY,IAAK,eAAgBe,EAAI,EAAGA,EAAInF,EAAEvF,OAAQ0K,IACxHhB,GAAKC,EAAEpE,EAAEmF,IAGXpF,EAAIvE,WAAW2I,GAGbxI,GAAK,KAAQmE,EAAI,CAAC,UAAW,SAAU,WAAY,aAAc,SAAU,WAAY,aAAc,aAAc,cAAe,mBAAoB,QAAS,QAAS,SAAU,WAAY,OAAQ,UAAW,WAAY,cAAe,UAAW,QAAS,gBAAiB,iBAAiBnE,GAAIkE,EAAI,EAAG,IAAMlE,IAAGmE,EAAI,CAAC,YAAa,eAAgB,cAAe,oBAAqB,qBAAsB,YAAa,iBAAkB,aAAc,cAAe,YAAa,YAAa,WAAY,YAAa,YAAa,YAAa,EAAG,EAAG,gBAAiB,kBAAmB,oBAAqB,gBAAiB,aAAc,eAAgB,gBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAO,iBAAkB,kBAAmB,cAAe,WAAY,UAAW,UAAW,WAAY,YAAYN,GAAIK,EAAI,IAC7yB,MAAQC,GAAKT,EAAES,GAAK,GAAKP,EAAE9E,OAAS8E,EAAE,GAAKA,EAAGA,EAAI,IAAMA,EAAErB,KAAK6B,GAAI3G,GAAKyG,EAG1E,OAAOR,GACNnH,EAAEkN,KAAO,GAAIlN,EAAEkN,KAAKpG,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C8B,EAAI,IAAIlE,WAAWkE,EAAE2C,OAAQtI,EAAG6D,GAAI7D,EAAI,EACxC,IAAI+F,EAAIjH,EAAE+G,KACNI,EAAI,GACRF,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EACzB,IAAImG,EAAIJ,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAIuC,EAAI,GACR0D,EAAEgG,OAAS,GAEX,IAAK,IAAI7F,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAC1B,IAAIK,EAAIV,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI0G,EAAIX,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI2G,EAAIZ,EAAEG,SAASP,EAAG3F,GACtBA,GAAK,EACL,IAAI4G,EAAI,IAAMH,EAAI,IAAMC,EACpBvE,EAAII,EAAEqH,QAAQjD,GAElB,IAAK,GAAKxE,EAAG,CACX,IAAIwI,EACJxI,EAAI8D,EAAEgG,OAAO5K,OAAQkB,EAAEuC,KAAK6B,GAC5B,IAAIiE,EAAI7E,EAAEC,WAAWL,EAAGgB,GACxB,GAAKiE,EAAID,EAAI7L,EAAEkN,KAAKE,OAAOvG,EAAGgB,GAAK,GAAKiE,EAAID,EAAI7L,EAAEkN,KAAKG,OAAOxG,EAAGgB,GAAK,GAAKiE,EAAID,EAAI7L,EAAEkN,KAAKI,OAAOzG,EAAGgB,GAAK,IAAMiE,EAAID,EAAI7L,EAAEkN,KAAKK,QAAQ1G,EAAGgB,GAAK2F,QAAQC,MAAM,mBAAqB3B,EAAGnE,EAAGC,EAAGC,GAAIV,EAAEgG,OAAOnH,KAAK6F,GAG9M,GAAI,MAAQ1E,EAAEW,GAAI,KAAM,4CACxBX,EAAEW,GAAKzE,EAGT,OAAO8D,GACNnH,EAAEkN,KAAKE,OAAS,SAAUvG,EAAG3F,GAC9B,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACRA,EAAEyG,OAAS3I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACpC,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG+F,EAAE7D,IAAM,GAE5C,IAAK,IAAIiE,EAAI,EAAGA,EAAIF,EAAI,EAAGE,IACzBJ,EAAE7D,IAAI4C,KAAKa,EAAE3F,EAAImG,IAGnB,OAAOJ,GACNjH,EAAEkN,KAAKG,OAAS,SAAUxG,EAAG3F,GAC9B,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACRA,EAAEuG,OAAS3I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACpC,IAAImG,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACjC,IAAIuC,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAIoG,EAAI7D,EAAI,EACZ0D,EAAEwG,YAAc5I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEyG,cAAgB7I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE0G,WAAa9I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE2G,SAAW/I,EAAE4D,YAAY9B,EAAG3F,EAAGoG,GAAIpG,GAAK,EAAIoG,EAAGpG,GAAK,EAAGiG,EAAE4G,WAAahJ,EAAE4D,YAAY9B,EAAG3F,EAAGoG,GAAIpG,GAAK,EAAIoG,EAAGH,EAAE6G,QAAU,GAE7P,IAAK,IAAIrG,EAAI,EAAGA,EAAIL,EAAGK,IACrBR,EAAE6G,QAAQhI,KAAKjB,EAAEoD,UAAUtB,EAAG3F,IAAKA,GAAK,EAG1C,IAAKiG,EAAE8G,cAAgBlJ,EAAE4D,YAAY9B,EAAG3F,EAAGoG,GAAIpG,GAAK,EAAIoG,EAAGH,EAAE+G,aAAe,GAAIhN,EAAI+F,EAAII,GACtFF,EAAE+G,aAAalI,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAGhD,OAAOiG,GACNnH,EAAEkN,KAAKI,OAAS,SAAUzG,EAAG3F,GAC9B,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACRA,EAAEyG,OAAS3I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEkH,UAAYpJ,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACtI,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG+F,EAAEiH,aAAe,GAEzB,IAAK,IAAI7G,EAAI,EAAGA,EAAIF,EAAGE,IACrBJ,EAAEiH,aAAalI,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAGhD,OAAO+F,GACNjH,EAAEkN,KAAKK,QAAU,SAAU1G,EAAG3F,GAC/B,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,GACRA,EAAEyG,OAAS3I,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGA,GAAK,EAAG6D,EAAEqC,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEqC,SAASP,EAAG3F,GAAIA,GAAK,EAChG,IAAIiG,EAAIpC,EAAEqC,SAASP,EAAG3F,GACtBA,GAAK,EAAG+F,EAAEmH,OAAS,GAEnB,IAAK,IAAI/G,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CAC1B,IAAI5D,EAAIvC,EAAI,GAAKmG,EACbC,EAAIvC,EAAEqC,SAASP,EAAGpD,EAAI,GACtBkE,EAAI5C,EAAEqC,SAASP,EAAGpD,EAAI,GACtBmE,EAAI7C,EAAEqC,SAASP,EAAGpD,EAAI,GAC1BwD,EAAEmH,OAAOpI,KAAK,CAACsB,EAAGK,EAAGC,IAGvB,OAAOX,GACNjH,EAAEqO,KAAO,GAAIrO,EAAEqO,KAAKvH,MAAQ,SAAUD,EAAG7G,EAAGkB,EAAG6D,GAChD,IAAK,IAAIkC,EAAI,GAAIE,EAAI,EAAGA,EAAIpC,EAAEuJ,KAAKC,UAAWpH,IAC5CF,EAAEjB,KAAK,MAGT,OAAOiB,GACNjH,EAAEqO,KAAKG,WAAa,SAAU3H,EAAG3F,GAClC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAIJ,EAAEY,MACNN,EAAInH,EAAEiI,WAAWhB,EAAG,OAAQJ,EAAEa,SAAWb,EAAE4H,KAAKvN,GACpD,GAAI2F,EAAE4H,KAAKvN,IAAM2F,EAAE4H,KAAKvN,EAAI,GAAI,OAAO,KACvC,IAAImG,EAAI,GACR,GAAIA,EAAEqH,IAAM3J,EAAEoD,UAAUlB,EAAGE,GAAIA,GAAK,EAAGE,EAAEsH,KAAO5J,EAAEoD,UAAUlB,EAAGE,GAAIA,GAAK,EAAGE,EAAEuH,KAAO7J,EAAEoD,UAAUlB,EAAGE,GAAIA,GAAK,EAAGE,EAAEwH,KAAO9J,EAAEoD,UAAUlB,EAAGE,GAAIA,GAAK,EAAGE,EAAEyH,KAAO/J,EAAEoD,UAAUlB,EAAGE,GAAIA,GAAK,EAAGE,EAAEsH,MAAQtH,EAAEwH,MAAQxH,EAAEuH,MAAQvH,EAAEyH,KAAM,OAAO,KAEpO,GAAIzH,EAAEqH,IAAM,EAAG,CACbrH,EAAE0H,OAAS,GAEX,IAAK,IAAItL,EAAI,EAAGA,EAAI4D,EAAEqH,IAAKjL,IACzB4D,EAAE0H,OAAO/I,KAAKjB,EAAEmC,WAAWD,EAAGE,IAAKA,GAAK,EAG1C,IAAIG,EAAIvC,EAAEmC,WAAWD,EAAGE,GACxB,GAAIA,GAAK,EAAGF,EAAE1E,OAAS4E,EAAIG,EAAG,OAAO,KACrCD,EAAE2H,aAAejK,EAAEsE,UAAUpC,EAAGE,EAAGG,GAAIH,GAAKG,EAC5C,IAAIK,EAAIN,EAAE0H,OAAO1H,EAAEqH,IAAM,GAAK,EAG9B,IAFArH,EAAE4H,MAAQ,GAELxL,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,CACtB,IAAImE,EAAIX,EAAEE,GAEV,GAAIA,IAAKE,EAAE4H,MAAMjJ,KAAK4B,GAAI,IAAM,EAAIA,GAAI,CACtC,IAAIC,EAAIZ,EAAEE,GACVA,IAEA,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAGC,IACrBT,EAAE4H,MAAMjJ,KAAK4B,GAAInE,KAOvB,IAFA4D,EAAE6H,GAAK,GAEFzL,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,CACtB,IAAIJ,EAAI,IAAM,EAAIgE,EAAE4H,MAAMxL,IACtBoI,EAAI,IAAM,GAAKxE,EAAE4H,MAAMxL,IAC3BJ,GAAKgE,EAAE6H,GAAGlJ,KAAK6F,EAAI5E,EAAEE,IAAMF,EAAEE,IAAKA,KAAO0E,EAAIxE,EAAE6H,GAAGlJ,KAAK,IAAMqB,EAAE6H,GAAGlJ,KAAKjB,EAAEoD,UAAUlB,EAAGE,IAAKA,GAAK,GAKlG,IAFAE,EAAE8H,GAAK,GAEF1L,EAAI,EAAGA,EAAIkE,EAAGlE,IACjBJ,EAAI,IAAM,EAAIgE,EAAE4H,MAAMxL,IAAKoI,EAAI,IAAM,GAAKxE,EAAE4H,MAAMxL,IAClDJ,GAAKgE,EAAE8H,GAAGnJ,KAAK6F,EAAI5E,EAAEE,IAAMF,EAAEE,IAAKA,KAAO0E,EAAIxE,EAAE8H,GAAGnJ,KAAK,IAAMqB,EAAE8H,GAAGnJ,KAAKjB,EAAEoD,UAAUlB,EAAGE,IAAKA,GAAK,GAGlG,IAAI2E,EAAI,EACJG,EAAI,EAER,IAAKxI,EAAI,EAAGA,EAAIkE,EAAGlE,IACjBqI,GAAKzE,EAAE6H,GAAGzL,GAAIwI,GAAK5E,EAAE8H,GAAG1L,GAAI4D,EAAE6H,GAAGzL,GAAKqI,EAAGzE,EAAE8H,GAAG1L,GAAKwI,MAEhD,CACL,IAAIC,EACJ7E,EAAE+H,MAAQ,GAEV,EAAG,CACDlD,EAAInH,EAAEmC,WAAWD,EAAGE,GAAIA,GAAK,EAC7B,IAAI8F,EAAI,CACNoC,EAAG,CACDtK,EAAG,EACHC,EAAG,EACH6G,EAAG,EACHjE,EAAG,EACH0H,GAAI,EACJC,GAAI,GAENC,IAAK,EACLC,IAAK,GAGP,GAAIpI,EAAE+H,MAAMpJ,KAAKiH,GAAIA,EAAEyC,WAAa3K,EAAEmC,WAAWD,EAAGE,GAAIA,GAAK,EAAG,EAAI+E,EAAG,CACrE,IAAImD,EAAItK,EAAEoD,UAAUlB,EAAGE,GACvBA,GAAK,EACL,IAAInC,EAAID,EAAEoD,UAAUlB,EAAGE,GACvBA,GAAK,OAELkI,EAAItK,EAAEwD,SAAStB,EAAGE,GAClBA,IACAnC,EAAID,EAAEwD,SAAStB,EAAGE,GAClBA,IAGF,EAAI+E,GAAKe,EAAEoC,EAAEC,GAAKD,EAAGpC,EAAEoC,EAAEE,GAAKvK,IAAMiI,EAAEuC,GAAKH,EAAGpC,EAAEwC,GAAKzK,GAAI,EAAIkH,GAAKe,EAAEoC,EAAEtK,EAAIkI,EAAEoC,EAAEzH,EAAI7C,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,GAAK,GAAK+E,GAAKe,EAAEoC,EAAEtK,EAAIA,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,EAAG8F,EAAEoC,EAAEzH,EAAI7C,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,GAAK,IAAM+E,IAAMe,EAAEoC,EAAEtK,EAAIA,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,EAAG8F,EAAEoC,EAAErK,EAAID,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,EAAG8F,EAAEoC,EAAExD,EAAI9G,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,EAAG8F,EAAEoC,EAAEzH,EAAI7C,EAAEmD,YAAYjB,EAAGE,GAAIA,GAAK,SAC7V,GAAK+E,GAEd,GAAI,IAAMA,EAAG,CACX,IAAI7K,EAAI0D,EAAEmC,WAAWD,EAAGE,GAGxB,IAFAA,GAAK,EAAGE,EAAEsI,MAAQ,GAEblM,EAAI,EAAGA,EAAIpC,EAAGoC,IACjB4D,EAAEsI,MAAM3J,KAAKiB,EAAEE,IAAKA,KAK1B,OAAOE,GACNrH,EAAE4P,KAAO,GAAI5P,EAAE4P,KAAK9I,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,GAChD,OAAOjH,EAAE4J,MAAM9C,MAAMD,EAAG3F,EAAG6D,EAAGkC,EAAGjH,EAAE4P,KAAKC,OACvC7P,EAAE4P,KAAKC,KAAO,SAAUhJ,EAAG3F,EAAG6D,EAAGkC,GAClC,IAAIE,EAAInH,EAAE+G,KACNM,EAAItC,EACJtB,EAAI,GAER,GAAIA,EAAEkH,IAAMxD,EAAED,WAAWL,EAAG9B,GAAIA,GAAK,EAAG,GAAK7D,GAAK,GAAKA,GAAK,GAAKA,GAAK,GAAKA,GAAK,GAAKA,GAAKuC,EAAEkH,KAAO,EAAG,CACpG,IAAIrD,EAAIH,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAEqM,SAAW9P,EAAE4J,MAAMc,aAAa7D,EAAGS,EAAID,GAGnD,GAAI,GAAKnG,GAAK,GAAKuC,EAAEkH,IAAK,CACxB,IAAIhD,EAAIR,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAEL,IAAI6C,EAAI5H,EAAE4J,MAAMW,UAAU5C,GAE1B,GAAKA,IAAMlE,EAAEsM,IAAM/P,EAAE4P,KAAKI,gBAAgBnJ,EAAG9B,EAAG4C,SAC3C,GAAI,GAAKzG,GAAKuC,EAAEkH,KAAO,GAAKlH,EAAEkH,KAAO,EAAG,CAC7ChD,EAAIR,EAAED,WAAWL,EAAG9B,GACpBA,GAAK,EACL,IAAI8C,EAAIV,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EACL6C,EAAI5H,EAAE4J,MAAMW,UAAU5C,GAEtB,IAAIG,EAAI9H,EAAE4J,MAAMW,UAAU1C,GAE1B,GAAI,GAAKpE,EAAEkH,IAAK,CACdlH,EAAEwM,SAAW,GACb,IAAI5M,EAAI8D,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAEL,IAAK,IAAI8G,EAAI,EAAGA,EAAIxI,EAAGwI,IAAK,CAC1B,IAAIC,EAAIzE,EAAIF,EAAED,WAAWL,EAAG9B,GAC5BA,GAAK,EACL,IAAIkH,EAAI9E,EAAED,WAAWL,EAAGiF,GACxBA,GAAK,EAEL,IAAK,IAAII,EAAI,GAAIe,EAAI,EAAGA,EAAIhB,EAAGgB,IAAK,CAClC,IAAIoC,EAAIlI,EAAED,WAAWL,EAAGiF,GACxBA,GAAK,EAAG,GAAKnE,IAAMvG,EAAIpB,EAAE4P,KAAKI,gBAAgBnJ,EAAGiF,EAAGnE,GAAImE,GAAK,EAAIlE,GAAI,GAAKC,IAAMqI,EAAIlQ,EAAE4P,KAAKI,gBAAgBnJ,EAAGiF,EAAGjE,GAAIiE,GAAK,EAAIhE,GAAIoE,EAAElG,KAAK,CACvImK,KAAMd,EACNe,KAAMhP,EACNiP,KAAMH,IAIVzM,EAAEwM,SAASjK,KAAKkG,IAIpB,GAAI,GAAKzI,EAAEkH,IAAK,CACd,IAAI3F,EAAImC,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EACL,IAAI1D,EAAI8F,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EACL,IAAIuL,EAAInJ,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAEL,IAAIwL,EAAIpJ,EAAED,WAAWL,EAAG9B,GAIxB,IAFAA,GAAK,EAAGtB,EAAE+M,UAAYxQ,EAAE4J,MAAMY,aAAa3D,EAAGQ,EAAIrC,GAAIvB,EAAEgN,UAAYzQ,EAAE4J,MAAMY,aAAa3D,EAAGQ,EAAIhG,GAAIoC,EAAEiN,OAAS,GAE1G7E,EAAI,EAAGA,EAAIyE,EAAGzE,IAAK,CACtB,IAAI8E,EAAI,GAER,IAAK1D,EAAI,EAAGA,EAAIsD,EAAGtD,IAAK,CACtB,IAAI7L,EAAI,KACJ8O,EAAI,KACR,GAAKvI,IAAMvG,EAAIpB,EAAE4P,KAAKI,gBAAgBnJ,EAAG9B,EAAG4C,GAAI5C,GAAK,EAAI6C,GAAI,GAAKC,IAAMqI,EAAIlQ,EAAE4P,KAAKI,gBAAgBnJ,EAAG9B,EAAG8C,GAAI9C,GAAK,EAAI+C,GAAI6I,EAAE3K,KAAK,CAC/HoK,KAAMhP,EACNiP,KAAMH,IAIVzM,EAAEiN,OAAO1K,KAAK2K,SAGb,CACL,GAAI,GAAKzP,GAAK,GAAKuC,EAAEkH,IAAK,CACxB,IAAIiG,EAAIzJ,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EACL,IAAI8L,EAAI1J,EAAEC,SAASP,EAAG9B,GACtB,GAAIA,GAAK,EAAG,GAAKkC,EAAEoD,MAAOpD,EAAEoD,MAAQuG,OAAO,GAAI3J,EAAEoD,OAASuG,EAAG,KAAM,iCACnE,OAAO5Q,EAAE4P,KAAKC,KAAKhJ,EAAGI,EAAEoD,MAAOhD,EAAIwJ,GAGrCrD,QAAQC,MAAM,oCAAqCvM,EAAG,SAAUuC,EAAEkH,KAGpE,OAAOlH,GACNzD,EAAE4P,KAAKI,gBAAkB,SAAUnJ,EAAG3F,EAAG6D,GAC1C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACR,OAAOA,EAAEnB,KAAK,EAAIjB,EAAIkC,EAAEkB,UAAUtB,EAAG3F,GAAK,GAAIA,GAAK,EAAI6D,EAAI,EAAI,EAAGoC,EAAEnB,KAAK,EAAIjB,EAAIkC,EAAEkB,UAAUtB,EAAG3F,GAAK,GAAIA,GAAK,EAAI6D,EAAI,EAAI,EAAGoC,EAAEnB,KAAK,EAAIjB,EAAIkC,EAAEkB,UAAUtB,EAAG3F,GAAK,GAAIA,GAAK,EAAI6D,EAAI,EAAI,EAAGoC,EAAEnB,KAAK,EAAIjB,EAAIkC,EAAEkB,UAAUtB,EAAG3F,GAAK,GAAIA,GAAK,EAAI6D,EAAI,EAAI,EAAGoC,GAClPnH,EAAE8Q,KAAO,GAAI9Q,EAAE8Q,KAAKhK,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,GAChD,OAAOjH,EAAE4J,MAAM9C,MAAMD,EAAG3F,EAAG6D,EAAGkC,EAAGjH,EAAE8Q,KAAKjB,OACvC7P,EAAE8Q,KAAKjB,KAAO,SAAUhJ,EAAG3F,EAAG6D,EAAGkC,GAClC,IAAIE,EAAInH,EAAE+G,KACNM,EAAItC,EACJtB,EAAI,GACR,GAAIA,EAAEkH,IAAMxD,EAAED,WAAWL,EAAG9B,GAAIA,GAAK,EAAG,GAAK7D,GAAK,GAAKA,GAAK,GAAKA,GAAK,GAAKA,EAAG,OAAO,KAErF,GAAI,GAAKA,GAAK,GAAKA,GAAK,GAAKA,GAAKuC,EAAEkH,KAAO,GAAK,GAAKzJ,GAAKuC,EAAEkH,KAAO,EAAG,CACpE,IAAIrD,EAAIH,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAEqM,SAAW9P,EAAE4J,MAAMc,aAAa7D,EAAGQ,EAAIC,GAGnD,GAAI,GAAKpG,GAAKuC,EAAEkH,KAAO,GAAKlH,EAAEkH,KAAO,GACnC,GAAI,GAAKlH,EAAEkH,IAAKlH,EAAEsN,MAAQ5J,EAAEgB,UAAUtB,EAAG9B,GAAIA,GAAK,OAAO,GAAI,GAAKtB,EAAEkH,IAAK,CACvE,IAAIhD,EAAIR,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAEuN,KAAO7J,EAAEwB,YAAY9B,EAAG9B,EAAG4C,GAAI5C,GAAK,EAAItB,EAAEuN,KAAKzO,aAEtD,GAAI,GAAKrB,EAAG,CACjBuC,EAAEwN,KAAO,GACTtJ,EAAIR,EAAED,WAAWL,EAAG9B,GACpBA,GAAK,EAEL,IAAK,IAAI6C,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAC1B,IAAIC,EAAIV,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAEwN,KAAKjL,KAAKhG,EAAE8Q,KAAKI,gBAAgBrK,EAAGQ,EAAIQ,UAE/C,GAAI,GAAK3G,GAAK,GAAKuC,EAAEkH,KAC1B,GAAI,GAAKlH,EAAEkH,IAAK,CACd,IAAI7C,EAAIX,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAE0N,KAAOnR,EAAE4J,MAAMY,aAAa3D,EAAGQ,EAAIS,GAAIrE,EAAE2N,MAAQ,GAC3D,IAAI/N,EAAI8D,EAAED,WAAWL,EAAG9B,GAGxB,IAFAA,GAAK,EAEA6C,EAAI,EAAGA,EAAIvE,EAAGuE,IAAK,CACtB,IAAIiE,EAAI1E,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EAAGtB,EAAE2N,MAAMpL,KAAK,GAAK6F,EAAI,KAAO7L,EAAE8Q,KAAKO,gBAAgBxK,EAAGQ,EAAIwE,WAGlE,GAAI,GAAK3K,GAAK,GAAKuC,EAAEkH,KAC1B,GAAI,GAAKlH,EAAEkH,IAAK,CACd,IAAK/C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACtBD,EAAIR,EAAED,WAAWL,EAAG9B,GACpBA,GAAK,EAEL,IAAK,IAAI+G,EAAI,GAAIG,EAAI,EAAGA,EAAItE,EAAGsE,IAC7BH,EAAE9F,KAAKhG,EAAE4J,MAAMc,aAAa7D,EAAGQ,EAAIF,EAAED,WAAWL,EAAG9B,EAAI,EAAIkH,KAG7DlH,GAAK,EAAI4C,EAAG,GAAKC,IAAMnE,EAAE6N,QAAUxF,GAAI,GAAKlE,IAAMnE,EAAE8N,QAAUzF,GAAI,GAAKlE,IAAMnE,EAAE+N,QAAU1F,GAG3FnE,EAAIR,EAAED,WAAWL,EAAG9B,GACpBA,GAAK,EAAGtB,EAAEgO,UAAYzR,EAAE8Q,KAAKY,uBAAuB7K,EAAG9B,EAAG4C,QAEvD,CACL,GAAI,GAAKzG,GAAK,GAAKuC,EAAEkH,IAAK,CACxB,IAAIuB,EAAI/E,EAAED,WAAWL,EAAG9B,GACxBA,GAAK,EACL,IAAIkI,EAAI9F,EAAEC,SAASP,EAAG9B,GACtB,GAAIA,GAAK,EAAG,GAAKkC,EAAEoD,MAAOpD,EAAEoD,MAAQ6B,OAAO,GAAIjF,EAAEoD,OAAS6B,EAAG,KAAM,iCACnE,OAAOlM,EAAE8Q,KAAKjB,KAAKhJ,EAAGI,EAAEoD,MAAOhD,EAAI4F,GAGrCO,QAAQC,MAAM,oCAAqCvM,EAAG,SAAUuC,EAAEkH,KAGpE,OAAOlH,GACNzD,EAAE8Q,KAAKO,gBAAkB,SAAUxK,EAAG3F,GACvC,IAAI6D,EAAI/E,EAAE+G,KAAKG,WACXD,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAE8B,EAAG3F,GACbA,GAAK,EAEL,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIvC,EAAE8B,EAAG3F,GACbA,GAAK,EAAGiG,EAAEnB,KAAKhG,EAAE8Q,KAAKa,iBAAiB9K,EAAGI,EAAIK,IAGhD,OAAOH,GACNnH,EAAE8Q,KAAKa,iBAAmB,SAAU9K,EAAG3F,GACxC,IAAI6D,EAAI/E,EAAE+G,KAAKG,WACXD,EAAI,GACJE,EAAIpC,EAAE8B,EAAG3F,GACTmG,EAAItC,EAAE8B,EAAG3F,GAAK,GAClBA,GAAK,EAAG+F,EAAE2K,MAAQ,GAElB,IAAK,IAAInO,EAAI,EAAGA,EAAI0D,EAAI,EAAG1D,IACzBwD,EAAE2K,MAAM5L,KAAKjB,EAAE8B,EAAG3F,IAAKA,GAAK,EAG9B,OAAO+F,EAAE4K,mBAAqB7R,EAAE8Q,KAAKY,uBAAuB7K,EAAG3F,EAAGmG,GAAIJ,GACrEjH,EAAE8Q,KAAKY,uBAAyB,SAAU7K,EAAG3F,EAAG6D,GACjD,IAAK,IAAIkC,EAAIjH,EAAE+G,KAAKG,WAAYC,EAAI,GAAIE,EAAI,EAAGA,EAAItC,EAAGsC,IACpDF,EAAEnB,KAAKiB,EAAEJ,EAAG3F,GAAI+F,EAAEJ,EAAG3F,EAAI,IAAKA,GAAK,EAGrC,OAAOiG,GACNnH,EAAE8Q,KAAKgB,qBAAuB,SAAUjL,EAAG3F,GAC5C,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIvC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEnB,KAAKhG,EAAE8Q,KAAKiB,sBAAsBlL,EAAGI,EAAIK,IAGrD,OAAOH,GACNnH,EAAE8Q,KAAKiB,sBAAwB,SAAUlL,EAAG3F,GAC7C,IAAK,IAAI6D,EAAI/E,EAAE+G,KAAME,EAAI,GAAIE,EAAI,CAAC,YAAa,QAAS,aAAcE,EAAI,EAAGA,EAAIF,EAAE5E,OAAQ8E,IAAK,CAC9F,IAAI5D,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG,GAAKmG,GAAK5D,IAAKwD,EAAEE,EAAEE,IAAMtC,EAAE4D,YAAY9B,EAAG3F,EAAGuC,GAAIvC,GAAK,EAAI+F,EAAEE,EAAEE,IAAI9E,OAI5E,OADAkB,EAAIsB,EAAEmC,WAAWL,EAAG3F,GACbA,GAAK,EAAG+F,EAAE+K,MAAQjN,EAAE4D,YAAY9B,EAAG3F,EAAG,EAAIuC,GAAIvC,GAAK,EAAI+F,EAAE+K,MAAMzP,OAAQ0E,GAC7EjH,EAAE8Q,KAAKI,gBAAkB,SAAUrK,EAAG3F,GACvC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI/F,EACJiG,EAAI,GACJE,EAAItC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIvC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAEnB,KAAKhG,EAAE8Q,KAAKmB,aAAapL,EAAGI,EAAIK,IAG5C,OAAOH,GACNnH,EAAE8Q,KAAKmB,aAAe,SAAUpL,EAAG3F,GACpC,IAAI6D,EAAI/E,EAAE+G,KACNE,EAAI,CACNiL,MAAO,IAETjL,EAAEkL,OAASpN,EAAEmC,WAAWL,EAAG3F,GAAIA,GAAK,EACpC,IAAIiG,EAAIpC,EAAEmC,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAImG,EAAI,EAAGA,EAAIF,EAAI,EAAGE,IACzBJ,EAAEiL,MAAMlM,KAAKjB,EAAEmC,WAAWL,EAAG3F,IAAKA,GAAK,EAGzC,OAAO+F,GACNjH,EAAEoS,KAAO,GAAIpS,EAAEoS,KAAKtL,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACR,OAAOF,EAAEO,UAAUX,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEkL,aAAepL,EAAEO,UAAUX,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE8H,MAAQhI,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEmL,WAAarL,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEoL,QAAUtL,EAAE4B,WAAWhC,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEqL,SAAWvL,EAAE4B,WAAWhC,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEwH,KAAO1H,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEyH,KAAO3H,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE0H,KAAO5H,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE2H,KAAO7H,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEsL,SAAWxL,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEuL,cAAgBzL,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEwL,kBAAoB1L,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEyL,iBAAmB3L,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE0L,gBAAkB5L,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,GAC1pBnH,EAAE8S,KAAO,GAAI9S,EAAE8S,KAAKhM,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACR,OAAOF,EAAEO,UAAUX,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE4L,SAAW9L,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE6L,UAAY/L,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE8L,QAAUhM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE+L,gBAAkBjM,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEgM,mBAAqBlM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEiM,oBAAsBnM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEkM,WAAapM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEmM,eAAiBrM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEoM,cAAgBtM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEqM,YAAcvM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGA,GAAK,EAAGiG,EAAEsM,iBAAmBxM,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEuM,iBAAmBzM,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,GACvkBnH,EAAE2T,KAAO,GAAI3T,EAAE2T,KAAK7M,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,GAChD,IAAK,IAAIE,EAAInH,EAAE+G,KAAMM,EAAI,CACvBuM,OAAQ,GACRC,UAAW,IACVpQ,EAAI,EAAG6D,EAAI,EAAGK,EAAI,EAAGA,EAAIV,EAAEqH,KAAKC,UAAW5G,IAC5CA,EAAIV,EAAE6L,KAAKY,mBAAqBjQ,EAAI0D,EAAED,WAAWL,EAAG3F,GAAIA,GAAK,EAAGoG,EAAIH,EAAEgB,UAAUtB,EAAG3F,GAAIA,GAAK,GAAImG,EAAEuM,OAAO5N,KAAKvC,GAAI4D,EAAEwM,UAAU7N,KAAKsB,GAGrI,OAAOD,GACNrH,EAAE8T,KAAO,GAAI9T,EAAE8T,KAAKhN,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,GAChD,IAAIE,EAAInH,EAAE+G,KACNM,EAAIF,EAAED,WAAWL,EAAG3F,GACxB,GAAIA,GAAK,EAAG,GAAKmG,EAAG,OAAOrH,EAAE8T,KAAKC,QAAQlN,EAAG3F,EAAI,EAAG6D,EAAGkC,GACvD,IAAIxD,EAAI0D,EAAED,WAAWL,EAAG3F,GACxBA,GAAK,EAEL,IAAK,IAAIoG,EAAI,CACX0M,OAAQ,GACRC,KAAM,IACLtM,EAAI,EAAGA,EAAIlE,EAAGkE,IAAK,CACpBzG,GAAK,EACL6D,EAAIoC,EAAED,WAAWL,EAAG3F,GACpBA,GAAK,EACL,IAAI0G,EAAIT,EAAED,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI2G,EAAID,IAAM,EACd,GAAI,IAAMC,GAAK,IAAK,KAAM,8BAAgCA,EAC1D3G,EAAIlB,EAAE8T,KAAKI,YAAYrN,EAAG3F,EAAGoG,GAG/B,OAAOA,GACNtH,EAAE8T,KAAKC,QAAU,SAAUlN,EAAG3F,EAAG6D,EAAGkC,GACrC,IAAIE,EAAInH,EAAE+G,KACVI,EAAEK,UAAUX,EAAG3F,GAAIA,GAAK,EACxB,IAAImG,EAAIF,EAAEC,SAASP,EAAG3F,GACtBA,GAAK,EAEL,IAAK,IAAIuC,EAAI,CACXuQ,OAAQ,GACRC,KAAM,IACL3M,EAAI,EAAGA,EAAID,EAAGC,IAAK,CACpBH,EAAEC,SAASP,EAAG3F,GAAIA,GAAK,EACvB,IAAIyG,EAAIR,EAAED,WAAWL,EAAG3F,GACxBA,GAAK,EAAGiG,EAAED,WAAWL,EAAG3F,GAAIA,GAAK,EACjC,IAAI0G,EAAID,IAAM,EACd,GAAI,IAAMC,GAAK,IAAK,KAAM,8BAAgCA,EAC1D1G,EAAIlB,EAAE8T,KAAKI,YAAYrN,EAAG3F,EAAGuC,GAG/B,OAAOA,GACNzD,EAAE8T,KAAKI,YAAc,SAAUrN,EAAG3F,EAAG6D,GACtC,IAAIkC,EAAIjH,EAAE+G,KACNI,GAAK,EACLE,EAAIJ,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG+F,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG+F,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAEzF,IAAK,IAAIuC,EAAI,EAAGA,EAAI4D,EAAG5D,IAAK,CAC1B,IAAI6D,EAAIL,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAIyG,EAAIV,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI0G,EAAIX,EAAEkB,UAAUtB,EAAG3F,GACvBA,GAAK,EAAGoG,GAAKH,IAAMpC,EAAEiP,OAAOhO,KAAKsB,GAAIvC,EAAEkP,KAAKjO,KAAK,CAC/CmO,OAAQ,GACRlD,KAAM,MAER,IAAIpJ,EAAI9C,EAAEkP,KAAKlP,EAAEkP,KAAK1R,OAAS,GAC/BsF,EAAEsM,OAAOnO,KAAK2B,GAAIE,EAAEoJ,KAAKjL,KAAK4B,GAAIT,EAAIG,EAGxC,OAAOpG,GACNlB,EAAEyO,KAAO,GAAIzO,EAAEyO,KAAK3H,MAAQ,SAAUD,EAAG3F,EAAG6D,EAAGkC,GAChD,IAAIE,EAAInH,EAAE+G,KACNM,EAAI,GACJ5D,EAAIwD,EAAEmL,KAAKQ,iBACXtL,EAAIL,EAAEqH,KAAKC,UAAY,EAC3B,GAAI,GAAK9K,EAAG,IAAK,IAAIkE,EAAI,EAAGA,EAAIL,EAAGK,IACjCN,EAAErB,KAAKmB,EAAED,WAAWL,EAAG3F,GAAKyG,GAAK,KAAO,GAE1C,GAAI,GAAKlE,EAAG,IAAKkE,EAAI,EAAGA,EAAIL,EAAGK,IAC7BN,EAAErB,KAAKmB,EAAEC,SAASP,EAAG3F,GAAKyG,GAAK,KAEjC,OAAON,GACNrH,EAAEsO,KAAO,GAAItO,EAAEsO,KAAKxH,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACJE,EAAIJ,EAAEG,SAASP,EAAG3F,GACtB,OAAOA,GAAK,EAAGiG,EAAEoH,UAAYtH,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG,OAASmG,IAAMF,EAAEiN,UAAYnN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEkN,YAAcpN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEmN,mBAAqBrN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEoN,qBAAuBtN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEqN,SAAWvN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEsN,kBAAoBxN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEuN,WAAazN,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEwN,gBAAkB1N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAEyN,mBAAqB3N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE0N,iBAAmB5N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE2N,sBAAwB7N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE4N,qBAAuB9N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE6N,kBAAoB/N,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,GAAIiG,GAC7rBnH,EAAE0G,KAAO,GAAI1G,EAAE0G,KAAKI,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACRF,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EACzB,IAAImG,EAAIJ,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EAAG+F,EAAEC,WAAWL,EAAG3F,GAExB,IAAK,IAAIuC,EAAG6D,EAAI,CAAC,YAAa,aAAc,gBAAiB,KAAM,WAAY,UAAW,iBAAkB,YAAa,eAAgB,WAAY,cAAe,YAAa,cAAe,UAAW,aAAc,MAAO,iBAAkB,oBAAqB,iBAAkB,aAAc,gBAAiB,gBAAiB,mBAAoB,eAAgB,eAAgBK,EAAIzG,GAAK,EAAG0G,EAAI,EAAGA,EAAIP,EAAGO,IAAK,CAC1Z,IAAIC,EAAIZ,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI4G,EAAIb,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAImC,EAAI4D,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI2K,EAAI5E,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI4K,EAAI7E,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAI+K,EAAIhF,EAAEC,WAAWL,EAAG3F,GACxBA,GAAK,EACL,IAAIgL,EACAe,EAAI3F,EAAEuE,GACNwD,EAAI1H,EAAI,GAAKN,EAAI4E,EACrB,GAAI,GAAKpE,EAAGqE,EAAIjF,EAAE+B,YAAYnC,EAAGwI,EAAGvD,EAAI,QAAQ,GAAI,GAAKjE,GAAK,GAAKC,EAAGoE,EAAIjF,EAAE+B,YAAYnC,EAAGwI,EAAGvD,EAAI,QAAQ,GAAI,GAAKhE,EAAGoE,EAAIjF,EAAED,UAAUH,EAAGwI,EAAGvD,QAAQ,GAAI,GAAKhE,EAAGoE,EAAIjF,EAAE+B,YAAYnC,EAAGwI,EAAGvD,EAAI,QAAQ,GAAI,GAAKhE,EAAGoE,EAAIjF,EAAE+B,YAAYnC,EAAGwI,EAAGvD,EAAI,OAAQ,CAClP,GAAI,GAAKjE,EAAG,KAAM,oBAAsBC,EAAI,iBAAmBD,EAC/DqE,EAAIjF,EAAED,UAAUH,EAAGwI,EAAGvD,GAAI0B,QAAQC,MAAM,gCAAkC3F,EAAI,aAEhF,IAAI9C,EAAI,IAAM6C,EAAI,IAAMxE,EAAEvD,SAAS,IACnC,MAAQqH,EAAEnC,KAAOmC,EAAEnC,GAAK,IAAKmC,EAAEnC,QAAG,IAAWiI,EAAIA,EAAIpB,GAAKK,EAAG/E,EAAEnC,GAAGiQ,MAAQ5R,EAG5E,IAAK,IAAIhC,KAAK8F,EACZ,GAAI,MAAQA,EAAE9F,GAAG6T,gBAAkB,MAAQ/N,EAAE9F,GAAG4T,MAAO,OAAO9N,EAAE9F,GAGlE,IAAK,IAAIA,KAAK8F,EACZ,GAAI,MAAQA,EAAE9F,GAAG6T,gBAAkB,GAAK/N,EAAE9F,GAAG4T,MAAO,OAAO9N,EAAE9F,GAG/D,IAAK,IAAIA,KAAK8F,EACZ,GAAI,MAAQA,EAAE9F,GAAG6T,gBAAkB,MAAQ/N,EAAE9F,GAAG4T,MAAO,OAAO9N,EAAE9F,GAGlE,IAAK,IAAIA,KAAK8F,EACZ,GAAI,MAAQA,EAAE9F,GAAG6T,eAAgB,OAAO/N,EAAE9F,GAG5C,IAAK,IAAIA,KAAK8F,EAAG,CACf1D,EAAIpC,EACJ,MAGF,OAAOmM,QAAQC,MAAM,wCAA0CtG,EAAE1D,GAAGwR,OAAQ9N,EAAE1D,IAC7EzD,EAAE,QAAU,GAAIA,EAAE,QAAQ8G,MAAQ,SAAUD,EAAG3F,EAAG6D,GACnD,IAAIkC,EAAIjH,EAAE+G,KAAKG,WAAWL,EAAG3F,GAE7BA,GAAK,EACL,IAAIiG,EAAI,GACR,GAAI,GAAKF,EAAGjH,EAAE,QAAQmV,SAAStO,EAAG3F,EAAGiG,QAAQ,GAAI,GAAKF,EAAGjH,EAAE,QAAQoV,SAASvO,EAAG3F,EAAGiG,QAAQ,GAAI,GAAKF,GAAK,GAAKA,GAAK,GAAKA,EAAGjH,EAAE,QAAQqV,SAASxO,EAAG3F,EAAGiG,OAAQ,CACzJ,GAAI,GAAKF,EAAG,KAAM,+BAAiCA,EACnDjH,EAAE,QAAQsV,SAASzO,EAAG3F,EAAGiG,GAE3B,OAAOA,GACNnH,EAAE,QAAQmV,SAAW,SAAUtO,EAAG3F,EAAG6D,GACtC,IAAIkC,EAAIjH,EAAE+G,KACV,OAAOhC,EAAEwQ,cAAgBtO,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEyQ,cAAgBvO,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE0Q,aAAexO,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE2Q,OAASzO,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE4Q,gBAAkB1O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE6Q,gBAAkB3O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE8Q,kBAAoB5O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE+Q,kBAAoB7O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEgR,kBAAoB9O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEiR,kBAAoB/O,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEkR,oBAAsBhP,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmR,oBAAsBjP,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEoR,eAAiBlP,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEqR,mBAAqBnP,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEsR,aAAepP,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEuR,OAASrP,EAAEoC,UAAUxC,EAAG3F,EAAG,IAAKA,GAAK,GAAI6D,EAAEwR,gBAAkBtP,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEyR,gBAAkBvP,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE0R,gBAAkBxP,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE2R,gBAAkBzP,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE4R,UAAY,CAAC1P,EAAEsB,SAAS1B,EAAG3F,GAAI+F,EAAEsB,SAAS1B,EAAG3F,EAAI,GAAI+F,EAAEsB,SAAS1B,EAAG3F,EAAI,GAAI+F,EAAEsB,SAAS1B,EAAG3F,EAAI,IAAKA,GAAK,EAAG6D,EAAE6R,YAAc3P,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE8R,iBAAmB5P,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE+R,gBAAkB7P,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEgS,cAAgB9P,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEiS,eAAiB/P,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEkS,aAAehQ,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEmS,YAAcjQ,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEoS,aAAelQ,EAAEC,WAAWL,EAAG3F,GAAIA,EAAK,GACl4ClB,EAAE,QAAQoV,SAAW,SAAUvO,EAAG3F,EAAG6D,GACtC,IAAIkC,EAAIjH,EAAE+G,KACV,OAAO7F,EAAIlB,EAAE,QAAQmV,SAAStO,EAAG3F,EAAG6D,GAAIA,EAAEqS,iBAAmBnQ,EAAEG,SAASP,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEsS,iBAAmBpQ,EAAEG,SAASP,EAAG3F,GAAIA,EAAK,GAClIlB,EAAE,QAAQqV,SAAW,SAAUxO,EAAG3F,EAAG6D,GACtC,IAAIkC,EAAIjH,EAAE+G,KACV,OAAO7F,EAAIlB,EAAE,QAAQoV,SAASvO,EAAG3F,EAAG6D,GAAIA,EAAEuS,SAAWrQ,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEwS,WAAatQ,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAG6D,EAAEyS,UAAYvQ,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE0S,QAAUxQ,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE2S,aAAezQ,EAAEC,WAAWL,EAAG3F,GAAIA,EAAK,GACrPlB,EAAE,QAAQsV,SAAW,SAAUzO,EAAG3F,EAAG6D,GACtC,IAAIkC,EAAIjH,EAAE+G,KACV,OAAO7F,EAAIlB,EAAE,QAAQqV,SAASxO,EAAG3F,EAAG6D,GAAIA,EAAE4S,wBAA0B1Q,EAAEC,WAAWL,EAAG3F,GAAIA,GAAK,EAAG6D,EAAE6S,wBAA0B3Q,EAAEC,WAAWL,EAAG3F,GAAIA,EAAK,GACpJlB,EAAE6X,KAAO,GAAI7X,EAAE6X,KAAK/Q,MAAQ,SAAUD,EAAG3F,EAAG6D,GAC7C,IAAIkC,EAAIjH,EAAE+G,KACNI,EAAI,GACR,OAAOA,EAAE2Q,QAAU7Q,EAAEO,UAAUX,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE4Q,YAAc9Q,EAAEO,UAAUX,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE6Q,kBAAoB/Q,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,EAAE8Q,mBAAqBhR,EAAEkB,UAAUtB,EAAG3F,GAAIA,GAAK,EAAGiG,GAC3L,MAAQnH,IAAMA,EAAI,IAAK,MAAQA,EAAEiM,IAAMjM,EAAEiM,EAAI,IAAKjM,EAAEiM,EAAEiM,YAAc,SAAUrR,EAAG7G,GAClF,IAAIkB,EAAI2F,EAAEqG,KACNnI,GAAK,EACT,GAAI,MAAQ7D,EAAEiX,KAAOpT,EAAI7D,EAAEiX,KAAO,MAAQjX,EAAEkX,KAAOrT,EAAI7D,EAAEkX,KAAO,MAAQlX,EAAEmX,KAAOtT,EAAI7D,EAAEmX,KAAO,MAAQnX,EAAEoX,OAASvT,EAAI7D,EAAEoX,OAAQ,GAAKvT,EAAG,KAAM,qCAC7I,IAAIkC,EAAI/F,EAAEiM,OAAOpI,GACjB,GAAI,GAAKkC,EAAEyG,OAAQ,OAAO1N,GAAKiH,EAAE7D,IAAIb,OAAS,EAAI0E,EAAE7D,IAAIpD,GAExD,GAAI,GAAKiH,EAAEyG,OAAQ,CACjB,IAAK,IAAIvG,GAAK,EAAGE,EAAI,EAAGA,EAAIJ,EAAE6G,SAASvL,OAAQ8E,IAC7C,GAAIrH,GAAKiH,EAAE6G,SAASzG,GAAI,CACtBF,EAAIE,EACJ,MAIJ,OAAK,GAAKF,GACNF,EAAE8G,WAAW5G,GAAKnH,EADF,EAEb,OAAS,GAAKiH,EAAEgH,cAAc9G,GAAKF,EAAEiH,aAAalO,EAAIiH,EAAE8G,WAAW5G,IAAMF,EAAEgH,cAAc9G,IAAM,IAAMF,EAAEgH,cAAc1L,OAAS4E,IAAMnH,EAAIiH,EAAE+G,QAAQ7G,IAG3J,GAAI,IAAMF,EAAEyG,OAAQ,CAClB,GAAI1N,EAAIiH,EAAEmH,OAAOnH,EAAEmH,OAAO7L,OAAS,GAAG,GAAI,OAAO,EAEjD,IAAK8E,EAAI,EAAGA,EAAIJ,EAAEmH,OAAO7L,OAAQ8E,IAAK,CACpC,IAAI5D,EAAIwD,EAAEmH,OAAO/G,GACjB,GAAI5D,EAAE,IAAMzD,GAAKA,GAAKyD,EAAE,GAAI,OAAOA,EAAE,IAAMzD,EAAIyD,EAAE,IAGnD,OAAO,EAGT,KAAM,6BAA+BwD,EAAEyG,QACtC1N,EAAEiM,EAAEsM,YAAc,SAAU1R,EAAG3F,GAChC,IAAI6D,EAAI,CACNyT,KAAM,GACNC,KAAM,IAGR,GAAI5R,EAAE6R,KAAO7R,EAAE6R,IAAIC,QAAQzX,GAAI,CAC7B,IAAI+F,EAAIJ,EAAE6R,IAAIC,QAAQzX,GACtB,OAAO,MAAQ+F,EAAIlC,GAAK,iBAAmBkC,IAAMA,EAAIjH,EAAE0Y,IAAIE,OAAO3R,GAAIJ,EAAE6R,IAAIC,QAAQzX,GAAK+F,GAAIA,GAG/F,GAAIJ,EAAEyE,IAAK,CACT,IAAInE,EAAI,CACN/F,EAAG,EACHC,EAAG,EACHwX,MAAO,GACPC,OAAQ,EACRC,WAAW,EACXC,MAAOnS,EAAEyE,IAAIiB,QAAU1F,EAAEyE,IAAIiB,QAAQ0M,cAAgB,EACrDC,MAAM,GAEJ7R,EAAIR,EAAEyE,IACN7H,EAAIoD,EAAEyE,IAAIiB,QAEd,GAAIlF,EAAEsE,IAAK,CACT,IAAK,IAAIrE,EAAI,EAAGD,EAAE2E,SAAS1E,EAAI,IAAMpG,GACnCoG,GAAK,EAGP7D,EAAI4D,EAAEuE,QAAQvE,EAAE2E,SAAS1E,EAAI,IAAIiF,QAGnCvM,EAAEiM,EAAEkN,SAAStS,EAAEyE,IAAII,YAAYxK,GAAIiG,EAAGE,EAAG5D,EAAGsB,QACvC8B,EAAEwH,MAAQrO,EAAEiM,EAAEmN,UAAUlY,EAAG2F,EAAG9B,GAErC,OAAOA,GACN/E,EAAEiM,EAAEmN,UAAY,SAAUvS,EAAG3F,EAAG6D,GACjC,IAAIkC,EAAI/F,EAAEmN,KAAKxH,GACf,MAAQI,IAAMA,EAAI/F,EAAEmN,KAAKxH,GAAK7G,EAAEqO,KAAKG,WAAWtN,EAAG2F,IAAK,MAAQI,IAAMA,EAAEyH,KAAO,EAAI1O,EAAEiM,EAAEoN,aAAapS,EAAGlC,GAAK/E,EAAEiM,EAAEqN,YAAYrS,EAAG/F,EAAG6D,KACjI/E,EAAEiM,EAAEoN,aAAe,SAAUxS,EAAG3F,GACjC,IAAK,IAAI6D,EAAI,EAAGA,EAAI8B,EAAE6H,IAAK3J,IAAK,CAC9B,IAAK,IAAIkC,EAAI,GAAKlC,EAAI,EAAI8B,EAAEkI,OAAOhK,EAAI,GAAK,EAAGoC,EAAIN,EAAEkI,OAAOhK,GAAIsC,EAAIJ,EAAGI,GAAKF,EAAGE,IAAK,CAClF,IAAI5D,EAAI4D,GAAKJ,EAAIE,EAAIE,EAAI,EACrBC,EAAID,GAAKF,EAAIF,EAAII,EAAI,EACrBM,EAAI,EAAId,EAAEoI,MAAM5H,GAChBO,EAAI,EAAIf,EAAEoI,MAAMxL,GAChBoE,EAAI,EAAIhB,EAAEoI,MAAM3H,GAChBQ,EAAIjB,EAAEqI,GAAG7H,GACThE,EAAIwD,EAAEsI,GAAG9H,GACb,GAAIA,GAAKJ,EAAG,GAAIU,EAAG,CACjB,IAAKC,EAAG,CACN5H,EAAEiM,EAAEiE,EAAEqJ,OAAOrY,EAAG4G,EAAGzE,GACnB,SAGFrD,EAAEiM,EAAEiE,EAAEqJ,OAAOrY,EAAG2F,EAAEqI,GAAGzL,GAAIoD,EAAEsI,GAAG1L,SACzBmE,EAAI5H,EAAEiM,EAAEiE,EAAEqJ,OAAOrY,EAAG2F,EAAEqI,GAAGzL,GAAIoD,EAAEsI,GAAG1L,IAAMzD,EAAEiM,EAAEiE,EAAEqJ,OAAOrY,GAAI2F,EAAEqI,GAAGzL,GAAKqE,GAAK,GAAIjB,EAAEsI,GAAG1L,GAAKJ,GAAK,GAClGsE,EAAIC,GAAK5H,EAAEiM,EAAEiE,EAAEsJ,OAAOtY,EAAG4G,EAAGzE,GAAKwE,EAAI7H,EAAEiM,EAAEiE,EAAEuJ,SAASvY,EAAG4G,EAAGzE,EAAGwD,EAAEqI,GAAG5H,GAAIT,EAAEsI,GAAG7H,IAAMtH,EAAEiM,EAAEiE,EAAEuJ,SAASvY,EAAG4G,EAAGzE,GAAIyE,EAAIjB,EAAEqI,GAAG5H,IAAM,GAAIjE,EAAIwD,EAAEsI,GAAG7H,IAAM,GAG9ItH,EAAEiM,EAAEiE,EAAEwJ,UAAUxY,KAEjBlB,EAAEiM,EAAEqN,YAAc,SAAUzS,EAAG3F,EAAG6D,GACnC,IAAK,IAAIkC,EAAI,EAAGA,EAAIJ,EAAEuI,MAAM7M,OAAQ0E,IAAK,CACvC,IAAIE,EAAI,CACNqR,KAAM,GACNC,KAAM,IAEJpR,EAAIR,EAAEuI,MAAMnI,GAEhBjH,EAAEiM,EAAEmN,UAAU/R,EAAEqI,WAAYxO,EAAGiG,GAE/B,IAAK,IAAI1D,EAAI4D,EAAEgI,EAAG/H,EAAI,EAAGA,EAAIH,EAAEsR,KAAKlW,OAAQ+E,GAAK,EAAG,CAClD,IAAIK,EAAIR,EAAEsR,KAAKnR,GACXM,EAAIT,EAAEsR,KAAKnR,EAAI,GACnBvC,EAAE0T,KAAKzS,KAAK2B,EAAIlE,EAAEsB,EAAI6C,EAAInE,EAAEuB,EAAIvB,EAAE6L,IAAKvK,EAAE0T,KAAKzS,KAAK2B,EAAIlE,EAAEoI,EAAIjE,EAAInE,EAAEmE,EAAInE,EAAE8L,IAG3E,IAAKjI,EAAI,EAAGA,EAAIH,EAAEqR,KAAKjW,OAAQ+E,IAC7BvC,EAAEyT,KAAKxS,KAAKmB,EAAEqR,KAAKlR,MAGtBtH,EAAEiM,EAAE0N,eAAiB,SAAU9S,EAAG3F,GACnC,IAAI6D,EAAI/E,EAAE4J,MAAMa,YAAYvJ,EAAG2F,GAE/B,OAAQ,GAAK9B,EAAI,EAAI7D,EAAE6D,EAAI,IAC1B/E,EAAEiM,EAAE2N,kBAAoB,SAAU/S,EAAG3F,EAAG6D,GACzC,IAAIkC,EAAI,EACR,GAAIJ,EAAE+I,KAAM,IAAK,IAAIzI,EAAIN,EAAE+I,KAAMvI,EAAIF,EAAE8C,WAAYxG,EAAI0D,EAAE4C,YAAazC,EAAI,GAAIK,EAAI,EAAGA,EAAIlE,EAAElB,OAAQoF,IAAK,CACtG,IAAIC,EAAInE,EAAEkE,GACV,GAAI,QAAUC,EAAEoD,IAAK,IAAK,IAAInD,EAAI,EAAGA,EAAID,EAAEgD,IAAIrI,OAAQsF,IACrD,IAAKP,EAAEM,EAAEgD,IAAI/C,IAAK,CAChBP,EAAEM,EAAEgD,IAAI/C,KAAM,EAEd,IAAK,IAAIC,EAAIT,EAAEO,EAAEgD,IAAI/C,IAAKxE,EAAI,EAAGA,EAAIyE,EAAEsC,KAAK7H,OAAQc,IAClD,GAAI,MAAQyE,EAAEsC,KAAK/G,GAAI,CACrB,IAAIwI,EACAC,EAAIhE,EAAEsC,KAAK/G,GACf,IAAKyI,EAAEgE,WAAa,IAAMjE,EAAI7L,EAAE4J,MAAMiB,cAAciB,EAAEgE,SAAU5O,IAAK,GAAI,GAAK4G,EAAEuC,YAAa,GAAI,GAAKvC,EAAEuC,MAAO,CAC7G,IAAI4B,EAEJ,GAAI,GAAKH,EAAEnB,IAAK,CACd,IAAIuB,EAAIJ,EAAEmE,SAASpE,GAEnB,IAAKlE,EAAI,EAAGA,EAAIuE,EAAE3J,OAAQoF,IACxBuE,EAAEvE,GAAGwI,MAAQpL,IAAMkH,EAAIC,EAAEvE,SAEtB,GAAI,GAAKmE,EAAEnB,IAAK,CACrB,IAAIsC,EAAIjN,EAAEiM,EAAE0N,eAAezY,EAAG4K,EAAE0E,WAC5BnB,EAAIrP,EAAEiM,EAAE0N,eAAe5U,EAAG+G,EAAE2E,WAEhCxE,EAAIH,EAAE4E,OAAOzD,GAAGoC,GAGlBpD,GAAKA,EAAEmE,MAAQnE,EAAEmE,KAAK,KAAOnJ,GAAKgF,EAAEmE,KAAK,IAAKnE,GAAKA,EAAEoE,MAAQpE,EAAEoE,KAAK,KAAOpJ,GAAKgF,EAAEoE,KAAK,OAQnG,GAAIxJ,EAAEiN,KAAM,CACV,IAAI9O,EAAI6B,EAAEiN,KAAKE,OAAOlJ,QAAQ5J,GAE9B,IAAK,GAAK8D,EAAG,CACX,IAAI3D,EAAIwF,EAAEiN,KAAKG,KAAKjP,GAAGmP,OAAOrJ,QAAQ/F,IACrC,GAAK1D,IAAM4F,GAAKJ,EAAEiN,KAAKG,KAAKjP,GAAGiM,KAAK5P,KAIzC,OAAO4F,GACNjH,EAAEiM,EAAE4N,WAAa,SAAUhT,EAAG3F,EAAG6D,EAAGkC,GACrC,IAAK,IAAIE,EAAIN,EAAEtE,OAASrB,EAAI,EAAGmG,EAAI,EAAGA,EAAItC,EAAEqF,KAAK7H,OAAQ8E,IACvD,GAAI,MAAQtC,EAAEqF,KAAK/C,GAAI,CACrB,IAAI5D,EACA6D,EAAIvC,EAAEqF,KAAK/C,GACf,IAAKC,EAAEwI,WAAa,IAAMrM,EAAIzD,EAAE4J,MAAMiB,cAAcvD,EAAEwI,SAAUjJ,EAAE3F,KAAM,GAAI,GAAK6D,EAAEsF,MAAOxD,EAAE3F,GAAI,GAAKoG,EAAEqD,IAAM9D,EAAE3F,GAAK2F,EAAE3F,GAAKoG,EAAEyJ,MAAQlK,EAAE3F,GAAKoG,EAAE0J,KAAKvN,QAAQ,GAAI,GAAKsB,EAAEsF,MAAO,IAAK,IAAI1C,EAAIL,EAAE2J,KAAKxN,GAAImE,EAAI,EAAGA,EAAID,EAAEpF,OAAQqF,IAAK,CAC7N,IAAIC,EAAIF,EAAEC,GACNE,EAAID,EAAEqK,MAAM3P,OAEhB,KAAMuF,EAAIX,GAAI,CACZ,IAAK,IAAI9D,GAAI,EAAIwI,EAAI,EAAGC,EAAI,EAAGA,EAAIhE,EAAGgE,IAAK,CACzC,MAAQ,GAAKjF,EAAE3F,EAAI2K,GAAK,EAAIC,KAC1BD,IAGFhE,EAAEqK,MAAMpG,IAAMjF,EAAE3F,EAAI2K,GAAK,EAAIC,MAAQzI,GAAI,GAG3C,GAAIA,EAAG,CAGL,IAFAwD,EAAE3F,GAAK2G,EAAEsK,OAEJrG,EAAI,EAAGA,EAAIhE,EAAI+D,EAAGC,IACrBjF,EAAE3F,EAAI4K,EAAI,IAAM,EAGlB,aAGC,GAAI,GAAK/G,EAAEsF,OAAS,GAAK/C,EAAEqD,IAAK,IAAK,IAAIsB,EAAIjM,EAAE4J,MAAMa,YAAYnD,EAAE6J,KAAMtK,EAAE3F,IAAKgL,EAAI5E,EAAE6J,KAAKlF,EAAI,GAAIgB,EAAI3F,EAAE8J,MAAMlF,GAAImD,EAAI,EAAGA,EAAIpC,EAAE1K,OAAQ8M,IAAK,CAClJ,IAAIrK,EAAIiI,EAAEoC,GACNhO,EAAI2D,EAAE4M,MAEV,KAAMvQ,EAAEkB,OAAS4E,GAAI,CACnB,IAAK9D,GAAI,EAAIyI,EAAI,EAAGA,EAAIzK,EAAEkB,OAAQuJ,IAAK,CACrC,IAAIwE,EAAItQ,EAAE4J,MAAMa,YAAYnD,EAAE6J,KAAMtK,EAAE3F,EAAI,EAAI4K,IAE9C,IAAK,GAAKG,GAAK3E,EAAE6J,KAAKb,EAAI,IAAMjP,EAAEyK,GAAI,CACpCzI,GAAI,EACJ,OAIJ,GAAIA,EAAG,CACL,IAAIkN,EAAIvL,EAAE6M,mBAEV,IAAKjK,EAAI,EAAGA,EAAI2I,EAAEhO,OAAQqF,GAAK,EAC7B2I,EAAE3I,GAAI2I,EAAE3I,EAAI,UAIb,GAAI,GAAK7C,EAAEsF,OAAS,GAAK/C,EAAEqD,IAAK,CACrC,IAAK3K,EAAEiM,EAAE6N,YAAYjT,EAAGS,EAAEgK,QAASpQ,EAAIoG,EAAEgK,QAAQ/O,QAAS,SAC1D,IAAKvC,EAAEiM,EAAE6N,YAAYjT,EAAGS,EAAEiK,QAASrQ,GAAI,SACvC,IAAKlB,EAAEiM,EAAE6N,YAAYjT,EAAGS,EAAEkK,QAAStQ,EAAIoG,EAAEiK,QAAQhP,QAAS,SAC1D,IAAIoO,EAAIrJ,EAAEmK,UAEV,IAAKpC,EAAI,EAAGA,EAAIsB,EAAEpO,OAAQ8M,GAAK,EAAG,CAChCpD,EAAI0E,EAAEtB,GACN,IAAIjO,EAAI6F,EAAE0J,EAAEtB,EAAI,IAEhBrP,EAAEiM,EAAE4N,WAAWhT,EAAG3F,EAAI+K,EAAG7K,EAAG6F,OAKnCjH,EAAEiM,EAAE6N,YAAc,SAAUjT,EAAG3F,EAAG6D,GACnC,IAAK,IAAIkC,EAAI,EAAGA,EAAI/F,EAAEqB,OAAQ0E,IAC5B,IAAK,GAAKjH,EAAE4J,MAAMiB,cAAc3J,EAAE+F,GAAIJ,EAAE9B,EAAIkC,IAAK,OAAO,EAG1D,OAAO,GACNjH,EAAEiM,EAAE8N,aAAe,SAAUlT,EAAG3F,EAAG6D,GACpC,IAAK,IAAIkC,EAAI,CACXuR,KAAM,GACNC,KAAM,IACLtR,EAAI,EAAGE,EAAI,EAAGA,EAAInG,EAAEqB,OAAQ8E,IAAK,CAClC,IAAI5D,EAAIvC,EAAEmG,GAEV,IAAK,GAAK5D,EAAG,CACX,IAAK,IAAI6D,EAAID,EAAInG,EAAEqB,OAAS,IAAM,GAAKrB,EAAEmG,EAAI,GAAKnG,EAAEmG,EAAI,GAAK,EAAGM,EAAI3H,EAAEiM,EAAEsM,YAAY1R,EAAGpD,GAAImE,EAAI,EAAGA,EAAID,EAAE8Q,KAAKlW,OAAQqF,GAAK,EACxHX,EAAEwR,KAAKzS,KAAK2B,EAAE8Q,KAAK7Q,GAAKT,GAAIF,EAAEwR,KAAKzS,KAAK2B,EAAE8Q,KAAK7Q,EAAI,IAKrD,IAFA7C,GAAKkC,EAAEuR,KAAKxS,KAAKjB,GAEZ6C,EAAI,EAAGA,EAAID,EAAE6Q,KAAKjW,OAAQqF,IAC7BX,EAAEuR,KAAKxS,KAAK2B,EAAE6Q,KAAK5Q,IAGrB7C,GAAKkC,EAAEuR,KAAKxS,KAAK,KAAMmB,GAAKN,EAAE8M,KAAKC,OAAOnQ,GAAI4D,EAAInG,EAAEqB,OAAS,IAAM4E,GAAKnH,EAAEiM,EAAE2N,kBAAkB/S,EAAGpD,EAAG6D,KAIxG,OAAOL,GACNjH,EAAEiM,EAAEiE,EAAI,GAAIlQ,EAAEiM,EAAEiE,EAAEqJ,OAAS,SAAU1S,EAAG7G,EAAGkB,GAC5C2F,EAAE2R,KAAKxS,KAAK,KAAMa,EAAE4R,KAAKzS,KAAKhG,EAAGkB,IAChClB,EAAEiM,EAAEiE,EAAEsJ,OAAS,SAAU3S,EAAG7G,EAAGkB,GAChC2F,EAAE2R,KAAKxS,KAAK,KAAMa,EAAE4R,KAAKzS,KAAKhG,EAAGkB,IAChClB,EAAEiM,EAAEiE,EAAE8J,QAAU,SAAUnT,EAAG7G,EAAGkB,EAAG6D,EAAGkC,EAAGE,EAAGE,GAC7CR,EAAE2R,KAAKxS,KAAK,KAAMa,EAAE4R,KAAKzS,KAAKhG,EAAGkB,EAAG6D,EAAGkC,EAAGE,EAAGE,IAC5CrH,EAAEiM,EAAEiE,EAAEuJ,SAAW,SAAU5S,EAAG7G,EAAGkB,EAAG6D,EAAGkC,GACxCJ,EAAE2R,KAAKxS,KAAK,KAAMa,EAAE4R,KAAKzS,KAAKhG,EAAGkB,EAAG6D,EAAGkC,IACtCjH,EAAEiM,EAAEiE,EAAEwJ,UAAY,SAAU7S,GAC7BA,EAAE2R,KAAKxS,KAAK,MACXhG,EAAEiM,EAAEkN,SAAW,SAAUtS,EAAG3F,EAAG6D,EAAGkC,EAAGE,GACtC,IAAK,IAAIE,EAAInG,EAAE2X,MAAOpV,EAAIvC,EAAE4X,OAAQxR,EAAIpG,EAAE6X,UAAWpR,EAAIzG,EAAE8X,MAAOpR,EAAI1G,EAAEgY,KAAMrR,EAAI,EAAGC,EAAI5G,EAAEE,EAAGiC,EAAInC,EAAEG,EAAGwK,EAAI,EAAGC,EAAI,EAAGG,EAAI,EAAGC,EAAI,EAAGe,EAAI,EAAGoC,EAAI,EAAGrK,EAAI,EAAG3D,EAAI,EAAGiP,EAAI,EAAGC,EAAI,EAAGI,EAAI,CAC/K7D,IAAK,EACLC,KAAM,GACLlF,EAAIhB,EAAEtE,QAAS,CAChBvC,EAAEsL,IAAIuB,cAAchG,EAAGgB,EAAG8I,GAC1B,IAAIvP,EAAIuP,EAAE7D,IACV,GAAIjF,GAAK8I,EAAE5D,KAAM,MAAQ3L,GAAK,OAASA,EAAGiG,EAAE9E,OAAS,GAAK,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,eAAgBzW,GAAK4D,EAAE9E,QAAU,EAAG8E,EAAE9E,OAAS,EAAG+E,GAAI,OAAQ,GAAI,MAAQlG,GAAK,OAASA,EAC9KiG,EAAE9E,OAAS,GAAK,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,eAAgBzW,GAAK4D,EAAE9E,QAAU,EAAG8E,EAAE9E,OAAS,EAAG+E,GAAI,OAC/F,GAAI,MAAQlG,EAAGiG,EAAE9E,OAAS,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,cAAe5S,GAAI,GAAKM,GAAK5H,EAAEiM,EAAEiE,EAAEwJ,UAAUvS,GAAI9D,GAAKgE,EAAE8S,MAAOna,EAAEiM,EAAEiE,EAAEqJ,OAAOpS,EAAGW,EAAGzE,GAAIuE,GAAI,OAAQ,GAAI,MAAQxG,EAAG,KAAOiG,EAAE9E,OAAS,GAChMuF,GAAKT,EAAE4S,QAAS5W,GAAKgE,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAEsJ,OAAOrS,EAAGW,EAAGzE,QAC9C,GAAI,MAAQjC,GAAK,MAAQA,EAAG,IAAK,IAAI8O,EAAI7I,EAAE9E,OAAQqO,EAAI,MAAQxP,EAAGyP,EAAI,EAAGA,EAAIX,EAAGW,IAAK,CAC1F,IAAIuJ,EAAI/S,EAAE4S,QACVrJ,EAAI9I,GAAKsS,EAAI/W,GAAK+W,EAAGxJ,GAAKA,EAAG5Q,EAAEiM,EAAEiE,EAAEsJ,OAAOrS,EAAGW,EAAGzE,QAC3C,GAAI,MAAQjC,GAAK,OAASA,EAAG,CAClC8O,EAAI7I,EAAE9E,OAEN,IAAK,IAAI8X,EAAI,EAAGA,EAAI,GAAKnK,GACvBrE,EAAI/D,EAAIT,EAAE4S,QAASnO,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAASnS,EAAImE,EAAI5E,EAAE4S,QAAS5W,EAAI6I,EAAI7E,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGpE,EAAGzE,GAAIgX,GAAK,EAG7J,OAASjZ,IAAM0G,GAAKT,EAAE4S,QAAS5W,GAAKgE,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAEsJ,OAAOrS,EAAGW,EAAGzE,QAC7D,CACL,GAAI,OAASjC,EAAG,MAChB,GAAI,SAAWA,GAAK,SAAWA,GAAK,SAAWA,GAAK,SAAWA,EAAG,SAAWA,IAAM0K,EAAIzI,EAAG4I,GAAKJ,EAAI/D,EAAIT,EAAE4S,SAAW5S,EAAE4S,QAAS1J,EAAIrE,EAAIJ,EAAIzE,EAAE4S,QAAS5K,EAAInD,EAAG7K,EAAIgC,EAAGyE,GAAK9C,GAAKiI,GAAKqD,EAAIrE,EAAI5E,EAAE4S,SAAW5S,EAAE4S,SAAW5S,EAAE4S,SAAW5S,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGoE,EAAGC,GAAIvQ,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG8F,EAAGoC,EAAGrK,EAAG3D,EAAGyG,EAAGzE,IAAK,SAAWjC,IAAMyK,EAAI/D,EAAIT,EAAE4S,QAASnO,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAAS3J,EAAIrE,EAAI5E,EAAE4S,QAAS1J,EAAIrE,EAAI7E,EAAE4S,QAAShN,EAAIqD,EAAIjJ,EAAE4S,QAAS5K,EAAIkB,EAAIlJ,EAAE4S,QAASjV,EAAIiI,EAAI5F,EAAE4S,QAAS5Y,EAAIgO,EAAIhI,EAAE4S,QAASnS,EAAI9C,EAAIqC,EAAE4S,QAAS5W,EAAIhC,EAAIgG,EAAE4S,QAAS5S,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGoE,EAAGC,GAAIvQ,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG8F,EAAGoC,EAAGrK,EAAG3D,EAAGyG,EAAGzE,IAAK,SAAWjC,IAAMyK,EAAI/D,EAAIT,EAAE4S,QAASnO,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS1J,EAAIrE,EAAIJ,EAAIzE,EAAE4S,QAAS5K,EAAInD,EAAGlH,GAAKiI,GAAKqD,EAAIrE,EAAI5E,EAAE4S,SAAW5S,EAAE4S,SAAW5S,EAAE4S,QAAS5Y,EAAIgO,EAAIhI,EAAE4S,QAASnS,EAAI9C,EAAIqC,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGoE,EAAGC,GAAIvQ,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG8F,EAAGoC,EAAGrK,EAAG3D,EAAGyG,EAAGzE,IAAK,SAAWjC,IAAMyK,EAAI/D,EAAIT,EAAE4S,QAASnO,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAAS3J,EAAIrE,EAAI5E,EAAE4S,QAAS1J,EAAIrE,EAAI7E,EAAE4S,QAAShN,EAAIqD,EAAIjJ,EAAE4S,QAAS5K,EAAIkB,EAAIlJ,EAAE4S,QAASjV,EAAIiI,EAAI5F,EAAE4S,QAAS5Y,EAAIgO,EAAIhI,EAAE4S,QAAS9V,KAAKE,IAAIW,EAAI8C,GAAK3D,KAAKE,IAAIhD,EAAIgC,GAAKyE,EAAI9C,EAAIqC,EAAE4S,QAAU5W,EAAIhC,EAAIgG,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGoE,EAAGC,GAAIvQ,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG8F,EAAGoC,EAAGrK,EAAG3D,EAAGyG,EAAGzE,SAAS,GAAI,OAASjC,EAAG,CAClwC,GAAIiG,EAAE9E,OAAS,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUlV,EAAEmV,cAAe5S,GAAI,GAAK,GAAKD,EAAE9E,OAAQ,CAClF,IAAI+X,EAAIjT,EAAE4S,QACNM,EAAIlT,EAAE4S,QACNO,EAAInT,EAAE4S,QACNQ,EAAIpT,EAAE4S,QACNS,EAAI1a,EAAEsL,IAAIsB,UAAU7H,EAAGyV,GACvBG,EAAI3a,EAAEsL,IAAIsB,UAAU7H,EAAG0V,GAC3Bza,EAAEiM,EAAEkN,SAASpU,EAAE2G,YAAYgP,GAAIxZ,EAAG6D,EAAGkC,EAAGE,GAAIjG,EAAEE,EAAIkZ,EAAGpZ,EAAEG,EAAIkZ,EAAGva,EAAEiM,EAAEkN,SAASpU,EAAE2G,YAAYiP,GAAIzZ,EAAG6D,EAAGkC,EAAGE,GAGxGS,IAAM5H,EAAEiM,EAAEiE,EAAEwJ,UAAUvS,GAAIS,GAAI,QACzB,GAAI,OAASxG,GAAK,OAASA,EAChCiG,EAAE9E,OAAS,GAAK,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,eAAgBzW,GAAK4D,EAAE9E,QAAU,EAAG8E,EAAE9E,OAAS,EAAG+E,GAAI,EAAIO,GAAKpE,EAAI,GAAK,OACjH,GAAI,OAASrC,EAAGiG,EAAE9E,OAAS,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,cAAe5S,GAAI,GAAKjE,GAAKgE,EAAE8S,MAAOrS,GAAKT,EAAE8S,MAAOvS,GAAK5H,EAAEiM,EAAEiE,EAAEwJ,UAAUvS,GAAInH,EAAEiM,EAAEiE,EAAEqJ,OAAOpS,EAAGW,EAAGzE,GAAIuE,GAAI,OAAQ,GAAI,OAASxG,EAAGiG,EAAE9E,OAAS,IAAM+E,IAAMK,EAAIN,EAAE4S,QAAUhT,EAAEiT,cAAe5S,GAAI,GAAKQ,GAAKT,EAAE8S,MAAOvS,GAAK5H,EAAEiM,EAAEiE,EAAEwJ,UAAUvS,GAAInH,EAAEiM,EAAEiE,EAAEqJ,OAAOpS,EAAGW,EAAGzE,GAAIuE,GAAI,OAAQ,GAAI,OAASxG,EAAG,CACzV,KAAOiG,EAAE9E,OAAS,GAChBuF,GAAKT,EAAE4S,QAAS5W,GAAKgE,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAEsJ,OAAOrS,EAAGW,EAAGzE,GAGrDwI,EAAI/D,EAAIT,EAAE4S,QAASnO,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAASnS,EAAImE,EAAI5E,EAAE4S,QAAS5W,EAAI6I,EAAI7E,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGpE,EAAGzE,QAC7I,GAAI,OAASjC,EAAG,IAAKiG,EAAE9E,OAAS,IAAMuF,GAAKT,EAAE4S,SAAU5S,EAAE9E,OAAS,GACvEsJ,EAAI/D,EAAGgE,EAAIzI,EAAIgE,EAAE4S,QAASnS,EAAImE,EAAIJ,EAAIxE,EAAE4S,QAAS5W,GAAK6I,EAAIJ,EAAIzE,EAAE4S,SAAW5S,EAAE4S,QAASja,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGpE,EAAGzE,QACjH,GAAI,OAASjC,EAAG,IAAKiG,EAAE9E,OAAS,IAAMc,GAAKgE,EAAE4S,SAAU5S,EAAE9E,OAAS,GACvEuJ,EAAIzI,EAAG4I,GAAKJ,EAAI/D,EAAIT,EAAE4S,SAAW5S,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAASnS,EAAImE,EAAI5E,EAAE4S,QAAS5W,EAAI6I,EAAGlM,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGpE,EAAGzE,QACpH,GAAI,OAASjC,GAAK,OAASA,EAAG,CACnC,IAAIwZ,EAAI,OAASxZ,EAAI6F,EAAIlC,EACzB,GAAI,GAAKsC,EAAE9E,OAAQiL,QAAQC,MAAM,0BAA2B,CAC1D,IAAIoN,EAAIxT,EAAE8S,MACNW,EAAIF,EAAEpO,MAAMqO,EAAID,EAAEnO,MACtBvL,EAAEE,EAAI0G,EAAG5G,EAAEG,EAAIgC,EAAGnC,EAAE4X,OAASrV,EAAGvC,EAAE6X,UAAYzR,EAAGpG,EAAE8X,MAAQrR,EAAGzG,EAAEgY,KAAOtR,EAAG5H,EAAEiM,EAAEkN,SAAS2B,EAAG5Z,EAAG6D,EAAGkC,EAAGE,GAAIW,EAAI5G,EAAEE,EAAGiC,EAAInC,EAAEG,EAAGoC,EAAIvC,EAAE4X,OAAQxR,EAAIpG,EAAE6X,UAAWpR,EAAIzG,EAAE8X,MAAOpR,EAAI1G,EAAEgY,WAExK,GAAI,OAAS9X,GAAK,OAASA,EAAG,CACnC,IAAI2Z,EAAI1T,EAAE9E,OACNyY,GAAKX,EAAI,EAAG,OAASjZ,GAEzB,IAAKiZ,GAAKU,GAAK7K,GAAK,EAAI6K,GAAIV,EAAInK,GAC9B8K,GAAKlP,EAAIzI,EAAG4I,GAAKJ,EAAI/D,EAAIT,EAAE4S,SAAW5S,EAAE4S,QAAS5W,GAAK6I,EAAIJ,EAAIzE,EAAE4S,SAAW5S,EAAE4S,QAAS/J,EAAImK,GAAK,GAAKvS,EAAImE,EAAI5E,EAAE4S,QAASI,KAAOvS,EAAImE,EAAG+O,GAAI,IAAOnP,EAAI/D,EAAGgE,EAAIzI,EAAIgE,EAAE4S,QAAShO,EAAIJ,EAAIxE,EAAE4S,QAAS/N,EAAIJ,EAAIzE,EAAE4S,QAASnS,EAAImE,EAAI5E,EAAE4S,QAAS/J,EAAImK,GAAK,GAAKhX,EAAI6I,EAAI7E,EAAE4S,QAASI,KAAOhX,EAAI6I,EAAG8O,GAAI,GAAKhb,EAAEiM,EAAEiE,EAAE8J,QAAQ7S,EAAG0E,EAAGC,EAAGG,EAAGC,EAAGpE,EAAGzE,GAAIgX,GAAK,MAEjU,CACL,GAAI,MAAQjZ,EAAI,IAAI6Z,OAAO,GAAI,MAAMzN,QAAQC,MAAM,sBAAwBrM,EAAGyF,GAAIzF,EAClFiG,EAAErB,KAAK5E,KAKbF,EAAEE,EAAI0G,EAAG5G,EAAEG,EAAIgC,EAAGnC,EAAE4X,OAASrV,EAAGvC,EAAE6X,UAAYzR,EAAGpG,EAAE8X,MAAQrR,EAAGzG,EAAEgY,KAAOtR,GAEzE,IAAI1G,EAAIlB,EACJ+E,EAAI,CACNmW,KAAMha,GAER,OAAO2F,EAAEqU,KAAOha,EAAG2F,EAAW,QAAI9B,EAAGoW,OAAOC,eAAevU,EAAG,aAAc,CAC1EwU,OAAO,IACLxU,EAj7CuD,CAk7C3D,IAAIqU,MAWR,WACE,OAAO,SAAUrU,GACf,IAAI7G,EAAI2C,WACJsE,EAAIqU,YACJpa,EAAIqa,YACJxW,EAAI,IAAI/E,EAAE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxGyD,EAAI,IAAIzD,EAAE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAChHmH,EAAI,IAAInH,EAAE,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KACzE2H,EAAI,SAAWd,EAAG7G,GACpB,IAAK,IAAI+E,EAAI,IAAIkC,EAAE,IAAKxD,EAAI,EAAGA,EAAI,KAAMA,EACvCsB,EAAEtB,GAAKzD,GAAK,GAAK6G,EAAEpD,EAAI,GAGzB,IAAI0D,EAAI,IAAIjG,EAAE6D,EAAE,KAEhB,IAAKtB,EAAI,EAAGA,EAAI,KAAMA,EACpB,IAAK,IAAIkE,EAAI5C,EAAEtB,GAAIkE,EAAI5C,EAAEtB,EAAI,KAAMkE,EACjCR,EAAEQ,GAAKA,EAAI5C,EAAEtB,IAAM,EAAIA,EAI3B,MAAO,CAACsB,EAAGoC,IAETW,EAAIH,EAAE5C,EAAG,GACT1B,EAAIyE,EAAE,GACNT,EAAIS,EAAE,GAEVzE,EAAE,IAAM,IAAKgE,EAAE,KAAO,GAEtB,IAAK,IAAIQ,EAAIF,EAAElE,EAAG,GAAG,GAAIoI,EAAI,IAAI5E,EAAE,OAAQiF,EAAI,EAAGA,EAAI,QAASA,EAAG,CAChE,IAAI5E,GAAK,MAAQ4E,KAAO,GAAK,MAAQA,IAAM,EAC3C5E,GAAK,OAASA,GAAK,MAAQA,KAAO,GAAK,MAAQA,IAAM,MAAQ,GAAK,KAAOA,IAAM,EAAGuE,EAAEK,KAAO,MAAQ5E,KAAO,GAAK,IAAMA,IAAM,KAAO,EAGpI,IAAIuJ,EAAI,SAAWhK,EAAG7G,EAAGkB,GACvB,IAAK,IAAI6D,EAAI8B,EAAEtE,OAAQkB,EAAI,EAAG0D,EAAI,IAAIF,EAAEjH,GAAIyD,EAAIsB,IAAKtB,IACjD0D,EAAEN,EAAEpD,GAAK,GAGb,IAAIkE,EACAG,EAAI,IAAIb,EAAEjH,GAEd,IAAKyD,EAAI,EAAGA,EAAIzD,IAAKyD,EACnBqE,EAAErE,GAAKqE,EAAErE,EAAI,GAAK0D,EAAE1D,EAAI,IAAM,EAGhC,GAAIvC,EAAG,CACLyG,EAAI,IAAIV,EAAE,GAAKjH,GACf,IAAIqD,EAAI,GAAKrD,EAEb,IAAKyD,EAAI,EAAGA,EAAIsB,IAAKtB,EACnB,GAAIoD,EAAEpD,GAAI,IAAK,IAAI4D,EAAI5D,GAAK,EAAIoD,EAAEpD,GAAIoE,EAAI7H,EAAI6G,EAAEpD,GAAIyI,EAAIpE,EAAEjB,EAAEpD,GAAK,MAAQoE,EAAGP,EAAI4E,GAAK,GAAKrE,GAAK,EAAGqE,GAAK5E,IAAK4E,EAC1GvE,EAAEkE,EAAEK,KAAO7I,GAAKgE,OAGf,IAAKM,EAAI,IAAIV,EAAElC,GAAItB,EAAI,EAAGA,EAAIsB,IAAKtB,EACxCoD,EAAEpD,KAAOkE,EAAElE,GAAKoI,EAAE/D,EAAEjB,EAAEpD,GAAK,QAAU,GAAKoD,EAAEpD,IAG9C,OAAOkE,GAELC,EAAI,IAAI5H,EAAE,KAEd,IAAKkM,EAAI,EAAGA,EAAI,MAAOA,EACrBtE,EAAEsE,GAAK,EAGT,IAAKA,EAAI,IAAKA,EAAI,MAAOA,EACvBtE,EAAEsE,GAAK,EAGT,IAAKA,EAAI,IAAKA,EAAI,MAAOA,EACvBtE,EAAEsE,GAAK,EAGT,IAAKA,EAAI,IAAKA,EAAI,MAAOA,EACvBtE,EAAEsE,GAAK,EAGT,IAAImD,EAAI,IAAIrP,EAAE,IAEd,IAAKkM,EAAI,EAAGA,EAAI,KAAMA,EACpBmD,EAAEnD,GAAK,EAGT,IAAIlH,EAAI6L,EAAEjJ,EAAG,EAAG,GACZkE,EAAI+E,EAAExB,EAAG,EAAG,GACZhO,EAAI,SAAWwF,GACjB,IAAK,IAAI7G,EAAI6G,EAAE,GAAII,EAAI,EAAGA,EAAIJ,EAAEtE,SAAU0E,EACxCJ,EAAEI,GAAKjH,IAAMA,EAAI6G,EAAEI,IAGrB,OAAOjH,GAEL0a,EAAI,SAAW7T,EAAG7G,EAAGiH,GACvB,IAAI/F,EAAIlB,EAAI,EAAI,EAChB,OAAQ6G,EAAE3F,GAAK2F,EAAE3F,EAAI,IAAM,KAAO,EAAIlB,GAAKiH,GAEzCgF,EAAI,SAAWpF,EAAG7G,GACpB,IAAIiH,EAAIjH,EAAI,EAAI,EAChB,OAAQ6G,EAAEI,GAAKJ,EAAEI,EAAI,IAAM,EAAIJ,EAAEI,EAAI,IAAM,MAAQ,EAAIjH,IAErDsa,EAAI,CAAC,iBAAkB,qBAAsB,yBAA0B,mBAAoB,kBAAmB,oBAAoB,CAAE,cAAe,qBAAsB,uBAAwB,8BAA+B,oBAAqB,mBAAoB,oBACzQD,EAAI,SAASA,EAAExT,EAAG7G,EAAGiH,GACvB,IAAI/F,EAAI,IAAIsa,MAAMxb,GAAKsa,EAAEzT,IACzB,GAAI3F,EAAEua,KAAO5U,EAAG2U,MAAME,mBAAqBF,MAAME,kBAAkBxa,EAAGmZ,IAAKpT,EAAG,MAAM/F,EACpF,OAAOA,GAELkZ,EAAI,SAAWvT,EAAGc,EAAGG,GACvB,IAAIT,EAAIR,EAAEtE,OACV,IAAK8E,GAAKS,IAAMA,EAAED,GAAKR,EAAI,EAAG,OAAOM,GAAK,IAAI3H,EAAE,GAChD,IAAI6L,GAAKlE,GAAKG,EACVoE,GAAKpE,GAAKA,EAAErE,EAChBqE,IAAMA,EAAI,IAAKH,IAAMA,EAAI,IAAI3H,EAAE,EAAIqH,IAEnC,IAAIC,EACAM,EAAI,SAAWf,GACjB,IAAII,EAAIU,EAAEpF,OAEV,GAAIsE,EAAII,EAAG,CACT,IAAI/F,EAAI,IAAIlB,EAAEmE,KAAKG,IAAI,EAAI2C,EAAGJ,IAC9B3F,EAAEya,IAAIhU,GAAIA,EAAIzG,IAGdmO,EAAIvH,EAAEH,GAAK,EACX2S,EAAIxS,EAAEgE,GAAK,EACXsO,EAAItS,EAAE9C,GAAK,EACX4V,EAAI9S,EAAED,EACNzG,EAAI0G,EAAEF,EACNgU,EAAI9T,EAAEuH,EACNmL,EAAI1S,EAAEb,EACN6T,EAAI,EAAIzT,EAEZ,EAAG,CACD,IAAKuT,EAAG,CACN9S,EAAEH,EAAI0H,EAAIqL,EAAE7T,EAAGyT,EAAG,GAClB,IAAIrN,EAAIyN,EAAE7T,EAAGyT,EAAI,EAAG,GAEpB,GAAIA,GAAK,GAAIrN,EAAG,CACd,IAAI8N,EAAIlU,GAAG+J,IAAMtJ,EAAIgT,GAAK,EAAI,IAAM,EAAIhT,GAAK,GAAK,GAAK,GAAKT,EAAE+J,EAAI,IAAM,EACpEL,EAAIK,EAAImK,EAEZ,GAAIxK,EAAIlJ,EAAG,CACT6E,GAAKmO,EAAE,GACP,MAGFxO,GAAKjE,EAAEwS,EAAIW,GAAIpT,EAAEgU,IAAI9U,EAAEgV,SAASjL,EAAGL,GAAI6J,GAAItS,EAAE9C,EAAIoV,GAAKW,EAAGjT,EAAEgE,EAAIwO,EAAI,EAAI/J,EACvE,SAGF,GAAI,GAAKtD,EAAG2N,EAAI5V,EAAG5D,EAAI0K,EAAG8P,EAAI,EAAGpB,EAAI,OAAO,GAAI,GAAKvN,EAAG,CACtD,IAAI6O,EAAIpB,EAAE7T,EAAGyT,EAAG,IAAM,IAClByB,EAAIrB,EAAE7T,EAAGyT,EAAI,GAAI,IAAM,EACvB3J,EAAImL,EAAIpB,EAAE7T,EAAGyT,EAAI,EAAG,IAAM,EAC9BA,GAAK,GAEL,IAAK,IAAIhK,EAAI,IAAItQ,EAAE2Q,GAAIT,EAAI,IAAIlQ,EAAE,IAAKgc,EAAI,EAAGA,EAAID,IAAKC,EACpD9L,EAAE/I,EAAE6U,IAAMtB,EAAE7T,EAAGyT,EAAI,EAAI0B,EAAG,GAG5B1B,GAAK,EAAIyB,EACT,IAAItB,EAAIpZ,EAAE6O,GACNqK,GAAK,GAAKE,GAAK,EACfwB,EAAIpL,EAAEX,EAAGuK,EAAG,GAEhB,IAAKuB,EAAI,EAAGA,EAAIrL,GAAI,CAClB,IAAIC,EACAsL,EAAID,EAAEvB,EAAE7T,EAAGyT,EAAGC,IAClB,GAAID,GAAK,GAAK4B,GAAItL,EAAIsL,IAAM,GAAK,GAAI5L,EAAE0L,KAAOpL,MAAO,CACnD,IAAIuL,EAAI,EACJnB,EAAI,EAER,IAAK,IAAMpK,GAAKoK,EAAI,EAAIN,EAAE7T,EAAGyT,EAAG,GAAIA,GAAK,EAAG6B,EAAI7L,EAAE0L,EAAI,IAAM,IAAMpL,GAAKoK,EAAI,EAAIN,EAAE7T,EAAGyT,EAAG,GAAIA,GAAK,GAAK,IAAM1J,IAAMoK,EAAI,GAAKN,EAAE7T,EAAGyT,EAAG,KAAMA,GAAK,GAAIU,KAC/I1K,EAAE0L,KAAOG,GAKf,IAAIC,EAAI9L,EAAEuL,SAAS,EAAGC,GAClBnB,EAAIrK,EAAEuL,SAASC,GACnBF,EAAIva,EAAE+a,GAAI5B,EAAInZ,EAAEsZ,GAAIC,EAAI/J,EAAEuL,EAAGR,EAAG,GAAIxa,EAAIyP,EAAE8J,EAAGH,EAAG,QAC3CH,EAAE,GAET,GAAIC,EAAIQ,EAAG,CACT5O,GAAKmO,EAAE,GACP,OAIJxO,GAAKjE,EAAEwS,EAAI,QAEX,IAAK,IAAIS,GAAK,GAAKe,GAAK,EAAGS,GAAK,GAAK7B,GAAK,EAAG8B,EAAIhC,GAAIgC,EAAIhC,EAAG,CAC1D,IAAIiC,GAAKJ,EAAIvB,EAAE3O,EAAEpF,EAAGyT,GAAKO,MAAQ,EAEjC,IAAKP,GAAK,GAAK6B,GAAKrB,EAAG,CACrB5O,GAAKmO,EAAE,GACP,MAGF,GAAI8B,GAAK9B,EAAE,GAAIkC,EAAI,IAAK5U,EAAEyS,KAAOmC,MAAO,CACtC,GAAI,KAAOA,EAAG,CACZD,EAAIhC,EAAGM,EAAI,KACX,MAGF,IAAI4B,EAAID,EAAI,IAEZ,GAAIA,EAAI,IAAK,CACX,IAAIE,GAAK1X,EAAEiX,EAAIO,EAAI,KACnBC,EAAI9B,EAAE7T,EAAGyT,GAAI,GAAKmC,IAAM,GAAKpZ,EAAE2Y,GAAI1B,GAAKmC,GAG1C,IAAIC,GAAKtb,EAAE6K,EAAEpF,EAAGyT,GAAK+B,GACjBM,GAAKD,KAAO,EAShB,GARAA,IAAMrC,EAAE,GAAIC,GAAK,GAAKoC,GACtB/B,EAAI9S,EAAE8U,IAEFA,GAAK,IACPF,GAAKhZ,EAAEkZ,IACPhC,GAAK1O,EAAEpF,EAAGyT,IAAM,GAAKmC,IAAM,EAAGnC,GAAKmC,IAGjCnC,EAAIQ,EAAG,CACT5O,GAAKmO,EAAE,GACP,MAGFxO,GAAKjE,EAAEwS,EAAI,QAEX,IAAK,IAAIwC,GAAKxC,EAAIoC,EAAGpC,EAAIwC,GAAIxC,GAAK,EAChCzS,EAAEyS,GAAKzS,EAAEyS,EAAIO,GAAIhT,EAAEyS,EAAI,GAAKzS,EAAEyS,EAAI,EAAIO,GAAIhT,EAAEyS,EAAI,GAAKzS,EAAEyS,EAAI,EAAIO,GAAIhT,EAAEyS,EAAI,GAAKzS,EAAEyS,EAAI,EAAIO,GAG1FP,EAAIwC,IAIR9U,EAAED,EAAI+S,EAAG9S,EAAEgE,EAAIwQ,EAAGxU,EAAE9C,EAAIoV,EAAGQ,IAAMvL,EAAI,EAAGvH,EAAEuH,EAAIuM,EAAG9T,EAAEF,EAAIxG,EAAG0G,EAAEb,EAAIuT,UACxDnL,GAEV,OAAO+K,GAAKzS,EAAEpF,OAASoF,EAAI,SAAUd,EAAG9B,EAAGtB,IACxC,MAAQsB,GAAKA,EAAI,KAAOA,EAAI,IAAK,MAAQtB,GAAKA,EAAIoD,EAAEtE,UAAYkB,EAAIoD,EAAEtE,QACvE,IAAI4E,EAAI,IAAKN,aAAaI,EAAIA,EAAIJ,aAAa3F,EAAIA,EAAIlB,GAAGyD,EAAIsB,GAC9D,OAAOoC,EAAEwU,IAAI9U,EAAEgV,SAAS9W,EAAGtB,IAAK0D,EAHP,CAIzBQ,EAAG,EAAGyS,IAENQ,EAAI,IAAI5a,EAAE,GAEVoB,EAAI,oBAAsB8H,aAAe,IAAIA,YAEjD,IACE9H,EAAEgI,OAAOwR,EAAG,CACViC,QAAQ,IAEV,MAAOhW,IAET,OAAOA,EAAEiW,gBAAkB,SAAUjW,GACnC,IAAI7G,EAAI,IAAIyJ,SAAS5C,GACjBI,EAAI,EAER,SAAS/F,IACP,IAAI2F,EAAI7G,EAAE0I,UAAUzB,GACpB,OAAOA,GAAK,EAAGJ,EAGjB,SAAS9B,IACP,IAAI8B,EAAI7G,EAAE4I,UAAU3B,GACpB,OAAOA,GAAK,EAAGJ,EAGjB,SAASpD,EAAEoD,GACTwI,EAAE0N,UAAU/X,EAAG6B,GAAI7B,GAAK,EAG1B,SAASmC,EAAEN,GACTwI,EAAE2N,UAAUhY,EAAG6B,GAAI7B,GAAK,EAG1B,IAAK,IAAI2C,EAAI,CACXsV,UAAWlY,IACXmY,OAAQnY,IACRxC,OAAQwC,IACRoY,UAAWjc,IACXkc,SAAUlc,IACVmc,cAAetY,IACfuY,aAAcpc,IACdqc,aAAcrc,IACdsc,WAAYzY,IACZ0Y,WAAY1Y,IACZ2Y,eAAgB3Y,IAChB4Y,WAAY5Y,IACZ6Y,WAAY7Y,KACX+C,EAAI,EAAG3D,KAAKC,IAAI,EAAG0D,IAAMH,EAAEwV,WAC5BrV,IAGFA,IAEA,IAAK,IAAIzE,EAAI,GAAKc,KAAKC,IAAI,EAAG0D,GAAIT,EAAI,GAAKM,EAAEwV,UAAY9Z,EAAGwE,EAAI,GAAIgE,EAAI,GAAIK,EAAI,EAAGA,EAAIvE,EAAEwV,UAAWjR,IAClGL,EAAE7F,KAAK,CACLgF,IAAKjG,IACLgD,OAAQhD,IACR8Y,WAAY9Y,IACZ+Y,WAAY/Y,IACZgZ,aAAchZ,MACZ8C,GAAK,GAGX,IAAIP,EACAuJ,EAAI,IAAIlO,WAAW,GAAK,GAAKkJ,EAAEtJ,OAASsJ,EAAEmS,QAAO,SAAUnX,EAAG7G,GAChE,OAAO6G,EAAI7G,EAAE8d,WAAa,IACzB,IACClW,EAAIiJ,EAAErH,OACN6F,EAAI,IAAI5F,SAAS7B,GACjB5C,EAAI,EACR,OAAOmC,EAAEQ,EAAEuV,QAASzZ,EAAEkE,EAAEwV,WAAY1Z,EAAEJ,GAAII,EAAEqE,GAAIrE,EAAE4D,GAAIwE,EAAEoS,SAAQ,SAAUpX,GACxEM,EAAEN,EAAEmE,KAAM7D,EAAEN,EAAEkX,cAAe5W,EAAEU,GAAIV,EAAEN,EAAEiX,YAAajX,EAAEqX,UAAYrW,GAAIA,GAAKhB,EAAEiX,YAAc,GAAK,IAAMjW,GAAK,EAAIA,EAAI,MACjHgE,EAAEoS,SAAQ,SAAUje,GACtB,IAAIiH,EACA/F,EAAI2F,EAAEsX,MAAMne,EAAE+H,OAAQ/H,EAAE+H,OAAS/H,EAAE6d,YAEvC,GAAI7d,EAAE6d,YAAc7d,EAAE8d,WAAY,CAChC,IAAI/Y,EAAI,IAAIpC,WAAW3C,EAAE8d,YACzB7W,EAAI,IAAItE,WAAWzB,EAAG,GAAIkZ,EAAEnT,EAAGlC,QAC1BA,EAAI,IAAIpC,WAAWzB,GAE1B2P,EAAE8K,IAAI5W,EAAG/E,EAAEke,WACX,IAAIza,EAAI,GACPoE,EAAI7H,EAAEke,UAAYle,EAAE8d,YAAc,GAAK,IAAMra,EAAI,EAAIoE,EAAI,GAAIgJ,EAAE8K,IAAI,IAAIhZ,WAAWc,GAAG+F,OAAQxJ,EAAEke,UAAYle,EAAE8d,YAAaxW,EAAIO,EAAIpE,KACjImE,EAAEuW,MAAM,EAAG7W,IACd6T,OAAOC,eAAevU,EAAG,aAAc,CACxCwU,OAAO,IACLxU,EA5UC,CA6UL,IAAIiW,iBAQR,SAAuB5B,EAAMkD,GAC3B,IA2BIC,EA3BAC,EAAgB,CAClBxD,EAAG,EACHJ,EAAG,EACH0B,EAAG,EACHzL,EAAG,EACH4L,EAAG,GAGDgC,EAAqB,CACvB,EAAK,iBACL,EAAK,8QACL,EAAK,+LACL,EAAK,kBACL,EAAK,uxCA4DHC,EAAkB,CAAC,KAAM,OAAQ,OAAQ,OAAQ,QAErD,SAASC,EAAmBC,GAQ1B,IALA,IAjD0BC,EAiDtBC,EAAe,IAAIjc,WAAW+b,EAAInc,QAClCsc,EAtDW,GAuDXC,EAXK,EAYLC,GAAa,EAERtb,EAAI,EAAGA,EAAIib,EAAInc,OAAQkB,IAAK,CACnC,IAAIgY,EAAOiD,EAAIM,YAAYvb,GACvBwb,EAAyC,GAxDrBN,EAwDalD,EAvDlC4C,GACH,WACE,IAAIhP,EAAI,CACNsL,EAhBG,EAiBHD,EAnBM,EAoBNF,EAhBE,EAiBF7J,EAbU,GAcV1E,EAZS,GAaToO,EAjBS,GAmBXgE,EAAiB,IAAIa,IAErB,IAAIC,EAAQ,SAAeC,GACzB,IAAIC,EAAW,EACfd,EAAmBa,GAAMjc,MAAM,KAAK8a,SAAQ,SAAUqB,GACpD,IAAIC,EAAeD,EAAMnc,MAAM,KAC3Bqc,EAAgB,YAAeD,EAAc,GAC7CE,EAAOD,EAAc,GACrBE,EAAOF,EAAc,GAEzBC,EAAOE,SAASF,EAAM,IACtBC,EAAOA,EAAOC,SAASD,EAAM,IAAM,EACnCrB,EAAe1C,IAAI0D,GAAYI,EAAMpQ,EAAE+P,IAEvC,IAAK,IAAI3b,EAAIic,EAAMjc,KACjB4a,EAAe1C,MAAM0D,EAAUhQ,EAAE+P,QAKvC,IAAK,IAAIA,KAAQb,EACfY,EAAMC,GA9BV,GAmCKf,EAAeuB,IAAIjB,IAzCX,IA6DTkB,EAjBG,EAhDM,EAmETZ,IAIkB,GAAlBJ,EACgB,GAAdI,GACFY,EAvBG,EAFA,IA2BCf,GAzBD,IAyBsBA,GACvBF,EAAaG,MAEQ,GAAdE,IA7BN,IA+BCH,GA7BD,IA6BsBA,GACvBF,EAAaG,MAGU,GAAlBF,IAnCJ,IAqCDC,GAnCC,IAmCoBA,GACvBF,EAAaG,MAIjBD,EAAWF,EAAanb,GAAKoc,EAC7BhB,EAAkBI,EAClBF,EAAYtb,EACRgY,EAAO,OAAQhY,KAMrB,OAAOmb,EA8CT,SAASkB,EAAYC,GACnB,IAAIC,EAAW7E,OAAO8E,OAAO,MACzBC,EAAU,CACZ5N,WAAYyN,EAAS3N,KAAKE,WAC1BS,SAAUgN,EAASjN,KAAKC,SACxBC,UAAW+M,EAASjN,KAAKE,UACzBmN,aAAc,SAAsBC,EAAMC,EAAUC,EAAeC,GACjE,IAAIC,EAAS,EACTC,EAAY,EAAIP,EAAQ5N,WAAa+N,EACrCK,EApDV,SAAwBC,EAAMjC,GAG5B,IAFA,IAAIkC,EAAW,GAENnd,EAAI,EAAGA,EAAIib,EAAInc,OAAQkB,IAAK,CACnC,IAAIod,EAAKnC,EAAIM,YAAYvb,GACrBod,EAAK,OAAQpd,IACjBmd,EAAS5a,KAAKkV,EAAKjP,EAAEiM,YAAYyI,EAAME,IAGzC,IAAIC,EAAOH,EAAW,KAEtB,GAAIG,EAAM,CACR,IAEIlC,EAFA3U,EAAa6W,EAAK7W,WAClBF,EAAc+W,EAAK/W,YAEnBgX,EAAoB,wDACpBC,EAAc,GAClBjX,EAAYkU,SAAQ,SAAUgD,GAC5B,GAAIF,EAAkBG,KAAKD,EAAQjW,KACjC,IAAK,IAAImW,EAAK,EAAGA,EAAKF,EAAQrW,IAAIrI,OAAQ4e,IACxC,IAAIH,EAAYC,EAAQrW,IAAIuW,IAA5B,CACAH,EAAYC,EAAQrW,IAAIuW,KAAO,EAC/B,IAAIvW,EAAMX,EAAWgX,EAAQrW,IAAIuW,IAC7BC,EAAmB,0BAA0BF,KAAKD,EAAQjW,KAE1DoW,IAAqBxC,IAEvBA,EAAeH,EAAmBC,IAGpC,IAAK,IAAI2C,EAAK,EAAGA,EAAKT,EAASre,OAAQ8e,IAChCzC,GAAiBwC,GAAoB5C,EAAgBI,EAAayC,MAASJ,EAAQjW,KACtFkQ,EAAKjP,EAAE4N,WAAW+G,EAAUS,EAAIzW,EAAKX,OAQjD,OAAO2W,EAYgBU,CAAevB,EAAUK,GACxCmB,EAAY,EACZC,GAAkB,EA2FtB,OA1FAd,EAAazC,SAAQ,SAAUvO,EAAYjM,GAIzC,IAAoB,IAAhBiM,EAAmB,CACrB,IAAI+R,EAAWzB,EAAStQ,GAExB,IAAK+R,EAAU,CASb,IARA,IAmBI9S,EAAMC,EAAMC,EAAMC,EAnBlB4S,EAAsBxG,EAAKjP,EAAEsM,YAAYwH,EAAUrQ,GACnD8I,EAAOkJ,EAAoBlJ,KAC3BC,EAAOiJ,EAAoBjJ,KAG3B3W,EAAO,GACP6f,EAAU,EAELC,EAAM,EAAGC,EAAMrJ,EAAKjW,OAAQqf,EAAMC,EAAKD,IAAO,CACrD,IAAIE,EAAUxD,EAAc9F,EAAKoJ,IACjC9f,GAAQ0W,EAAKoJ,GAEb,IAAK,IAAI9F,EAAI,EAAGA,GAAKgG,EAAShG,IAC5Bha,IAASga,EAAI,EAAI,IAAM,IAAMrD,EAAKkJ,KAQtC,GAAIlJ,EAAKlW,OAAQ,CACfoM,EAAOC,EAAO1I,IACd2I,EAAOC,GAAQ5I,IAEf,IAAK,IAAI6b,EAAM,EAAGC,EAAOvJ,EAAKlW,OAAQwf,EAAMC,EAAMD,GAAO,EAAG,CAC1D,IAAI3gB,EAAIqX,EAAKsJ,GACT1gB,EAAIoX,EAAKsJ,EAAM,GACf3gB,EAAIuN,IAAMA,EAAOvN,GACjBC,EAAIuN,IAAMA,EAAOvN,GACjBD,EAAIyN,IAAMA,EAAOzN,GACjBC,EAAIyN,IAAMA,EAAOzN,SAGvBsN,EAAOE,EAAOD,EAAOE,EAAO,EAG9B2S,EAAWzB,EAAStQ,GAAc,CAChCuS,MAAOvS,EACPwS,aAAcnC,EAASpM,KAAKC,OAAOlE,GACnCf,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNhN,KAAMA,EACNqgB,iBAAkB3J,EAAKjW,SAkBH,IAApBif,IACFhB,GAAUtF,EAAKjP,EAAE2N,kBAAkBmG,EAAUyB,EAAgB9R,GAAc+Q,GAG7EF,EAASxgB,KAAK,KAAM0hB,EAAUjB,EAAQe,GAElCE,EAASS,eACX1B,GAAUiB,EAASS,aAAezB,GAGhCH,IACFE,GAAUF,EAAgBD,GAG5BmB,EAAiB9R,EAGnB6R,GAAanB,EAAKpB,YAAYuC,GAAa,MAAS,EAAI,KAEnDf,IAGX,OAAON,EAGT,OAAO,SAAe1W,GAEpB,IAAI4Y,EAAO,IAAIzf,WAAW6G,EAAQ,EAAG,GAEjCwB,EAAMkQ,EAAKnU,KAAKC,UAAUob,EAAM,EAAG,GAEvC,GAAY,SAARpX,EACFxB,EAAS4U,EAAS5U,QACb,GAAY,SAARwB,EACT,MAAM,IAAIwQ,MAAM,6BAGlB,OAAOsE,EAAY5E,EAAKpU,MAAM0C,GAAQ,OAOxC6Y,KAAM,SAAcC,EAAaC,EAAiBC,GAGhD,OAAOA,EAFIF,IACIC,QAKfE,EAAS,CACXC,eAAgB,mEAEhBC,aAAc,GACdC,UAAW,EAAI,GACftgB,YAAa,EACbugB,aAAc,MAEZC,EAAyB,IAAI,QAGjC,SAASrhB,IACP,OAAQC,KAAKC,aAAe/B,MAAM6B,MAiDpC,IAuRIshB,EAvRAC,EAAU7H,OAAO8E,OAAO,MA2C5B,SAASgD,EAAkBhgB,EAAMsd,IAChB,EACftd,EAAOigB,EAAO,GAAIjgB,GAClB,IAAIkgB,EAAa1hB,IAQjB,GALAwB,EAAK0d,KAwOP,SAAuB7e,GAChBihB,IACHA,EAA6B,oBAAbK,SAA2B,GAAKA,SAASC,cAAc,MAIzE,OADAN,EAAOO,KAAOxhB,EACPihB,EAAOO,KA9OFC,CAActgB,EAAK0d,MAAQ8B,EAAOC,gBAE9Czf,EAAKmd,KAAO,GAAKnd,EAAKmd,KACtBnd,EAAK0f,aAAe1f,EAAK0f,cAAgBF,EAAOE,aAExB,MAApB1f,EAAKugB,YAAqB,CAC5B,IAAIC,EAAS,GAEb,IAAK,IAAIC,KAAOzgB,EAAKugB,YACnB,GAAIvgB,EAAKugB,YAAYG,eAAeD,GAAM,CACxC,IAAI5W,EAAM7J,EAAKugB,YAAYE,GAER,iBAAR5W,IACTA,EAAMgW,EAAUnH,IAAI7O,GAAK8W,UAG3BH,EAAOC,GAAO5W,EAIlB7J,EAAKugB,YAAcC,EAGrBtI,OAAO0I,OAAO5gB,GAEd,IAAI4f,EAAeJ,EAAOI,aACtBvgB,EAAcmgB,EAAOngB,YAErBqgB,EADQ1f,EACa0f,aACrBmB,EAAW,GAAGC,OAAO9gB,EAAK0d,KAAM,KAAKoD,OAAOpB,GAC5CqB,EAAQhB,EAAQc,GAEfE,KACHA,EAAQhB,EAAQc,GAAY,CAC1BG,MAAO,EACPC,OAAQ,IAAIhF,IAEZiF,WAAY,IAAI,cAAY,IAAIxhB,WAAWggB,EAAeE,EAAe,GAAIA,EAAcF,EAAc,kBAAYngB,OAAWA,OAAWA,OAAWA,EAAW,eAAc,kBAE3K2hB,WAAWxD,KAAO1d,EAAK0d,MAI/ByD,EAAgBnhB,GAAMohB,MAAK,SAAUnkB,GACnC,IAAI0gB,EAAW1gB,EAAO0gB,SAClB0D,EAAiBpkB,EAAOokB,eACxBjE,EAAWngB,EAAOmgB,SAClB/N,EAAapS,EAAOoS,WACpBiS,EAAUrkB,EAAOqkB,QACjBC,EAAa,GACbC,EAAc,IAAIC,aAA+B,EAAlB9D,EAASre,QACxCoiB,EAAetE,EAAW/N,EAC1BsS,EAAY,EACZC,EAAe,EACfC,EAAarjB,IACjBmf,EAAS3C,SAAQ,SAAU8G,EAASthB,GAClC,IAAIuhB,EAAYhB,EAAME,OAAOtE,IAAImF,GAEjC,IAAKC,EAAW,CACd,IAAIC,EAAwB/kB,EAAOglB,UAAUH,GACzCjjB,EAAOmjB,EAAsBnjB,KAC7BqjB,EAAaF,EAAsBE,WAInCC,EAAkBjhB,KAAKG,IAAI6gB,EAAW,GAAKA,EAAW,GAAIA,EAAW,GAAKA,EAAW,IAAMxC,GAAgBF,EAAOG,UAAYD,EAAe,IAC7I0C,EAAarB,EAAMC,QACnBqB,EAAc,CAACH,EAAW,GAAKC,EAAiBD,EAAW,GAAKC,EAAiBD,EAAW,GAAKC,EAAiBD,EAAW,GAAKC,GACtIpB,EAAME,OAAOvI,IAAIoJ,EAASC,EAAY,CACpCljB,KAAMA,EACNujB,WAAYA,EACZE,WAAYD,IAGdd,EAAWxe,KAAKgf,GAKlB,IACIO,EADcP,EACWO,WACzBC,EAAOlB,EAAeO,KACtBY,EAAOnB,EAAeO,KAC1BJ,EAAYG,KAAeY,EAAOD,EAAW,GAAKZ,EAClDF,EAAYG,KAAea,EAAOF,EAAW,GAAKZ,EAClDF,EAAYG,KAAeY,EAAOD,EAAW,GAAKZ,EAClDF,EAAYG,KAAea,EAAOF,EAAW,GAAKZ,EAElD/D,EAASnd,GAAKuhB,EAAUK,cAE1Bd,EAAQmB,OAASnB,EAAQmB,OAAS,IAAMjkB,IAAQqjB,GAChD,IAAIa,EAAWlkB,IACf8iB,EAAQqB,IAAM,GACd,IAASC,IAAIrB,EAAWphB,KAAI,SAAU0iB,GACpC,IAAIhkB,EAAOgkB,EAAMhkB,KACbujB,EAAaS,EAAMT,WACnBE,EAAaO,EAAMP,WACnBQ,EAAU5hB,KAAKG,IAAIihB,EAAW,GAAKA,EAAW,GAAIA,EAAW,GAAKA,EAAW,IACjF,OAAOS,EAAoBrD,EAAcA,EAAc7gB,EAAMyjB,EAAYQ,EAAStD,EAAOngB,aAAa+hB,MAAK,SAAU4B,GACnH,IAAIvjB,EAAcujB,EAAMvjB,YACpB+B,EAASwhB,EAAMxhB,OAEnB,OADA8f,EAAQqB,IAAIP,GAAc5gB,EACnB,CACL4gB,WAAYA,EACZ3iB,YAAaA,EACb+B,OAAQA,UAGV4f,MAAK,SAAU6B,GAEbA,EAAW3jB,SACb2jB,EAAWjI,SAAQ,SAAUkI,GAM3B,IALA,IAAId,EAAac,EAAMd,WACnB3iB,EAAcyjB,EAAMzjB,YAEpB0jB,GADSD,EAAM1hB,OACNuf,EAAMG,WAAWkC,OAEvBD,EAAOE,KAAK/jB,QAAU8iB,EAAa,GAAK1C,EAAeA,GAAc,CAC1E,IAAI4D,EAAc,IAAI5jB,WAAgC,EAArByjB,EAAOE,KAAK/jB,QAC7CgkB,EAAY5K,IAAIyK,EAAOE,MACvBF,EAAOE,KAAOC,EACdH,EAAOI,QAAU,EAYnB,IANA,IAAIC,EAActiB,KAAKuiB,MAAMrB,EAAa,GACtCsB,EAAOP,EAAOpN,MAAQ2J,EACtBiE,EAAiBziB,KAAKuiB,MAAMD,EAAcE,GAAQP,EAAOpN,MAAQ2J,EAAe,EAClF8D,EAAcE,EAAOhE,EAAe,EACpC0C,EAAa,EAENhkB,EAAI,EAAGA,EAAIshB,EAActhB,IAIhC,IAHA,IAAIwlB,EAAgBxlB,EAAIshB,EACpBmE,EAAgBF,EAAiBvlB,EAAI+kB,EAAOpN,MAAQ,EAE/C5X,EAAI,EAAGA,EAAIuhB,EAAcvhB,IAChCglB,EAAOE,KAAKQ,EAAoB,EAAJ1lB,GAASsB,EAAYmkB,EAAgBzlB,MAIvE4iB,EAAMG,WAAW4C,aAAc,GAGjCxC,EAAQyC,SAAWvlB,IAAQkkB,EAC3BpB,EAAQ0C,MAAQxlB,IAAQ0hB,EAExB5C,EAASpF,OAAO0I,OAAO,CACrBqD,WAAYjkB,EACZkhB,WAAYH,EAAMG,WAClBxB,aAAcA,EACdrgB,YAAaA,EACbmiB,YAAaA,EACb0C,kBAAmBvG,EACnBwG,YAAalnB,EAAOknB,YACpBC,eAAgBnnB,EAAOmnB,eACvBC,YAAapnB,EAAOonB,YACpBC,cAAernB,EAAOqnB,cACtBxU,SAAU7S,EAAO6S,SACjBC,UAAW9S,EAAO8S,UAClBwU,WAAYtnB,EAAOsnB,WACnBC,YAAavnB,EAAOunB,YACpBC,YAAaxnB,EAAOwnB,YACpBC,cAAeznB,EAAOynB,cACtBpD,QAASrkB,EAAOqkB,QAEhB,kBAEE,OADA/W,QAAQoa,IAAI,mDACL1nB,EAAOwnB,aAGhB,qBACEla,QAAQoa,IAAI,sDAEZ,IAAIC,EAAuB,YAAe3nB,EAAOwnB,YAAa,GAC1D9mB,EAAKinB,EAAqB,GAC1BhnB,EAAKgnB,EAAqB,GAI9B,MAAO,CAHEA,EAAqB,GAGjBjnB,EAFJinB,EAAqB,GAERhnB,aAsChC,SAASqiB,EAAO4E,EAAOC,GACrB,IAAK,IAAIrE,KAAOqE,EACVA,EAAQpE,eAAeD,KACzBoE,EAAMpE,GAAOqE,EAAQrE,IAIzB,OAAOoE,EAeT,IAAIE,EAAsC,YAAmB,CAC3DthB,KAAM,aACNC,aAAc,CAAC8b,EAAQhc,EAnrGzB,SAA0BwhB,EAAYC,EAAMC,GAC1C,IAAIzF,EAAiByF,EAAOzF,eAKxB0F,EAAQjN,OAAO8E,OAAO,MAGtBoI,EAA0B,iJAG1BC,EAAoB,gEAiDxB,SAASC,EAASC,EAASjI,GACpBiI,IAASA,EAAU9F,GACxB,IAAI/B,EAAOyH,EAAMI,GAEb7H,EAEEA,EAAK8H,QACP9H,EAAK8H,QAAQziB,KAAKua,GAElBA,EAASI,IAGXyH,EAAMI,GAAW,CACfC,QAAS,CAAClI,IAzDhB,SAAoBmI,EAAKnI,IACvB,SAASoI,IACP,IAAIC,EAAU,SAAiBC,GAC7Brb,QAAQsb,MAAM,wBAAwB/E,OAAO2E,GAAK3E,OAAO2E,IAAQhG,EAAiB,GAAK,qBAAsBmG,GAEzGH,IAAQhG,IACVgG,EAAMhG,EACNiG,MAIJ,IACE,IAAII,EAAU,IAAIC,eAClBD,EAAQ7P,KAAK,MAAOwP,GAAK,GACzBK,EAAQE,aAAe,cAEvBF,EAAQG,OAAS,WACf,GAAIH,EAAQI,QAAU,IACpBP,EAAQ,IAAIpN,MAAMuN,EAAQK,kBACrB,GAAIL,EAAQI,OAAS,EAC1B,IACE,IAAIjJ,EAAU+H,EAAWc,EAAQM,UACjC9I,EAASL,GACT,MAAOlgB,GACP4oB,EAAQ5oB,KAKd+oB,EAAQO,QAAUV,EAClBG,EAAQQ,OACR,MAAOV,GACPD,EAAQC,IAIZF,GAuBEa,CAAWhB,GAAS,SAAUtI,GAC5B,IAAIuJ,EAAYrB,EAAMI,GAASC,QAC/BL,EAAMI,GAAWtI,EACjBuJ,EAAUxL,SAAQ,SAAUyL,GAC1B,OAAOA,EAAGxJ,UAYlB,SAASyJ,EAAQC,EAAMrJ,GACrB,IAAIsJ,EAAYD,EAAKxJ,KACjBA,OAAqB,IAAdyJ,EAAuB,GAAKA,EACnCC,EAAYF,EAAKjJ,KACjBA,OAAqB,IAAdmJ,EAAuBpH,EAAiBoH,EAG/CC,GAFoBH,EAAKjH,aAETiH,EAAKvJ,UACrBA,OAA6B,IAAlB0J,EAA2B,EAAIA,EAC1CC,EAAqBJ,EAAKtJ,cAC1BA,OAAuC,IAAvB0J,EAAgC,EAAIA,EACpDC,EAAkBL,EAAKpC,WACvBA,OAAiC,IAApByC,EAA6B,SAAWA,EACrDC,EAAgBN,EAAKO,SACrBA,OAA6B,IAAlBD,EAnGPhkB,IAmGwCgkB,EAC5CE,EAAYR,EAAKQ,UACjBC,EAAiBT,EAAKU,UACtBA,OAA+B,IAAnBD,EAA4B,OAASA,EACjDE,EAAkBX,EAAKY,WACvBA,OAAiC,IAApBD,EAA6B,EAAIA,EAC9CE,EAAkBb,EAAKc,WACvBA,OAAiC,IAApBD,EAA6B,SAAWA,EACrDE,EAAoBf,EAAKgB,aACzBA,OAAqC,IAAtBD,EAA+B,SAAWA,EACzDE,EAAejB,EAAKkB,QACpBA,OAA2B,IAAjBD,EAA0B,EAAIA,EACxCE,EAAenB,EAAKoB,QACpBA,OAA2B,IAAjBD,EAA0B,EAAIA,EACxCE,EAAwBrB,EAAKsB,sBAC7BA,OAAkD,IAA1BD,GAA2CA,EACnEE,EAAwBvB,EAAKwB,kBAC7BA,OAA8C,IAA1BD,EAAmC,KAAOA,EAC9DE,EAAmBzB,EAAKpG,YACxBA,OAAmC,IAArB6H,EAA8B,KAAOA,EACnDC,EAAc/qB,UAAUgC,OAAS,QAAsBC,IAAjBjC,UAAU,IAAmBA,UAAU,GAC7EgrB,EAAY9pB,IACZ8iB,EAAU,CACZiH,SAAU,EACVC,YAAa,GAGXrL,EAAKtV,QAAQ,OAAS,IACxB0C,QAAQke,KAAK,2DACbtL,EAAOA,EAAKld,QAAQ,QAAS,MAAMA,QAAQ,MAAO,OAIpDmd,GAAYA,EACZC,GAAiBA,EACjB6J,GAAYA,EACZ3C,EAAaA,GAAc,SAC3BgD,GAAcA,EACdjC,EAAS5H,GAAM,SAAUT,GACvB,IAAIyL,EAAcC,SAASzB,GACvBvJ,EAAW,KACX0D,EAAiB,KACjBY,EAAY,KACZkC,EAAc,KACdC,EAAiB,KACjBM,EAAgB,KAChBJ,EAAgB,KAChBsE,EAAe,EACfC,EAAuB,EACvBC,EAAyB,WAAfrB,EACV3X,EAAWmN,EAAQnN,SACnBC,EAAYkN,EAAQlN,UACpBV,EAAa4N,EAAQ5N,WACzBiS,EAAQiH,SAAW/pB,IAAQ8pB,EAC3B,IAAIS,EAAevqB,IAGfkjB,EAAetE,EAAW/N,EAGX,WAAfkV,IACFA,GAAczU,EAAWC,GAAaV,GAKxC,IAAI2Z,IADJzE,GAA0BnH,IACOtN,EAAWC,GAAa2R,GAAgB,EACrE8C,IAAgB1U,EAAW4R,EAAesH,GAC1C3E,EAAcnjB,KAAKI,IAAIijB,GAAazU,EAAWC,GAAa2R,GAC5DuH,GAAqBnZ,EAAWC,GAAa,EAAI2R,EAAe2C,EAAc,EAE9E6E,EAAc3B,EACd4B,EAAc,IAAIC,EAClBC,EAAQ,CAACF,GACblM,EAAQC,aAAaC,EAAMC,EAAUC,GAAe,SAAUmB,EAAUjB,EAAQe,GAC9E,IAIIgL,EAJAC,EAAQpM,EAAKnF,OAAOsG,GAEpBkL,EAAahL,EAASS,aAAeyC,EACrC+H,EAAeN,EAAYnI,MAc/B,GAXM,YAAaxC,IACjBA,EAASkL,eAAiBH,GAAS,KAAKtL,KAAKsL,GAC7C/K,EAASmL,gBAAkBJ,GAASlE,EAAkBpH,KAAKsL,GAC3D/K,EAASoL,QAAUpL,EAAS9S,OAAS8S,EAAS5S,MAAQ4S,EAAS7S,OAAS6S,EAAS3S,MAAQuZ,EAAwBnH,KAAKsL,IAGnH/K,EAASkL,cAAiBlL,EAASoL,SACtCf,IAIEC,GAAWJ,IAAgBlK,EAASkL,cAAgBnM,EAASiM,EAAaN,EAAchC,GAAYuC,EAAc,CAEpH,GAAIN,EAAYU,QAAQJ,EAAe,GAAGjL,SAASmL,cACjDL,EAAW,IAAIF,EACfF,GAAe3L,OAGf,IAAK,IAAI/c,EAAIipB,EAAcjpB,KAAM,CAE/B,GAAU,IAANA,GAA4B,eAAjBmnB,EAA+B,CAC5C2B,EAAW,IAAIF,EACfF,GAAe3L,EACf,MAEG,GAAI4L,EAAYU,QAAQrpB,GAAGge,SAASmL,cAAe,CAEpD,IAAIG,GADJR,EAAWH,EAAYY,QAAQvpB,EAAI,IACZqpB,QAAQ,GAAG1rB,EAClC+qB,GAAeY,EAEf,IAAK,IAAIjR,EAAIyQ,EAAStI,MAAOnI,KAC3ByQ,EAASO,QAAQhR,GAAG1a,GAAK2rB,EAG3B,OAKJR,IACFH,EAAYa,eAAgB,EAC5Bb,EAAcG,EACdD,EAAMtmB,KAAKomB,GACXP,EAAe1B,GAInB,IAAI+C,EAAMd,EAAYU,QAAQV,EAAYnI,OAC1CiJ,EAAIzL,SAAWA,EACfyL,EAAI9rB,EAAIof,EAAS2L,EACjBe,EAAIlU,MAAQyT,EACZS,EAAI3L,UAAYA,EAEF,OAAViL,IACFJ,EAAc,IAAIC,EAClBC,EAAMtmB,KAAKomB,GACXD,IAAgB3L,EAASiM,EAAanM,EAAgBD,GAAYmK,MAItE8B,EAAMrO,SAAQ,SAAUkP,GACtB,IAAK,IAAI1pB,EAAI0pB,EAAKlJ,MAAOxgB,KAAM,CAC7B,IAAI2pB,EAAgBD,EAAKL,QAAQrpB,GAC7Bge,EAAW2L,EAAc3L,SACzBrgB,EAAIgsB,EAAchsB,EAClB4X,EAAQoU,EAAcpU,MAE1B,IAAKyI,EAASkL,aAOZ,OANAQ,EAAKnU,MAAQ5X,EAAI4X,OAEbmU,EAAKnU,MAAQ6S,IACfA,EAAesB,EAAKnU,YAQ5B,IAAIqU,EAAgB,EAChBC,EAAgB,EAUpB,GARIxC,IACqB,iBAAZA,EACTuC,GAAiBvC,EACW,iBAAZA,IAChBuC,GAAiBxB,GAA4B,SAAZf,EAAqB,EAAgB,WAAZA,EAAuB,GAAkB,UAAZA,EAAsB,EAAIyC,EAAazC,MAI9HE,EACF,GAAuB,iBAAZA,EACTsC,GAAiBtC,OACZ,GAAuB,iBAAZA,EAAsB,CACtC,IAAIxE,EAAS8F,EAAM/pB,OAASilB,EAC5B8F,EAA4B,QAAZtC,EAAoB,EAAgB,iBAAZA,GAA8BvD,EAA0B,WAAZuD,EAAuBxE,EAAS,EAAgB,WAAZwE,EAAuBxE,EAAqB,oBAAZwE,EAAgCxE,EAASyF,EAAcjZ,EAAY2R,EAAe4I,EAAavC,GAAWxE,EAItQ,IAAK8E,EAAa,CAEhB,IAAIkC,GAAmBtF,EAAKuF,mBAAmBrN,EAAMgK,GAGrDxJ,EAAW,IAAItF,YAAYwQ,GAC3BxH,EAAiB,IAAII,aAAoC,EAAvBoH,GAClC5G,EAAY,GACZyC,EAAgB,CA/RZzhB,mBAgSJqhB,EAAgB,GAChB,IAAImG,GAAcjG,EAEdyD,IACF7D,EAAiB,IAAI3C,aAA2B,EAAdtE,EAAK7d,SAGrCihB,IACF4D,EAAc,IAAIzkB,WAAkC,EAAvBmpB,IAG/B,IAGI6B,GACAC,GAJAC,GAAuB,EACvBC,IAAiB,EACjBC,IAAkB,EAqNtB,GAlNAzB,EAAMrO,SAAQ,SAAUkP,EAAMa,GAC5B,IAAIC,EAAiBd,EAAKlJ,MACtBiK,EAAYf,EAAKnU,MAErB,GAAIiV,EAAiB,EAAG,CAItB,IAFA,IAAIE,EAA0B,EAErB1qB,EAAIwqB,EAAgBxqB,KAAO0pB,EAAKL,QAAQrpB,GAAGge,SAASkL,cAC3DwB,IAIF,IAAIC,EAAe,EACfC,EAAgB,EAEpB,GAAkB,WAAd/D,EACF8D,GAAgBvC,EAAeqC,GAAa,OACvC,GAAkB,UAAd5D,EACT8D,EAAevC,EAAeqC,OACzB,GAAkB,YAAd5D,GAA2B6C,EAAKF,cAAe,CAIxD,IAFA,IAAIqB,EAAkB,EAEbC,EAAMN,EAAiBE,EAAyBI,KACnDpB,EAAKL,QAAQyB,GAAK9M,SAASkL,cAC7B2B,IAIJD,GAAiBxC,EAAeqC,GAAaI,EAG/C,GAAID,GAAiBD,EAGnB,IAFA,IAAII,EAAgB,EAEXC,EAAM,EAAGA,EAAMR,EAAgBQ,IAAO,CAC7C,IAAIzJ,EAAYmI,EAAKL,QAAQ2B,GACzBC,EAAY1J,EAAUvD,SAC1BuD,EAAU5jB,GAAKgtB,EAAeI,EAER,IAAlBH,GAAuBK,EAAU/B,cAAgB8B,EAAMR,EAAiBE,IAC1EK,GAAiBH,EACjBrJ,EAAUhM,OAASqV,GAQzB,IAFA,IA2CI5M,EA3CAkN,EAAQzG,EAAK0G,mBAAmBxO,EAAMoN,GAAkBL,EAAKL,QAAQ,GAAGvL,UAAW4L,EAAKL,QAAQK,EAAKlJ,MAAQ,GAAG1C,WAE3GsN,EAAK,EAAGA,EAAKF,EAAMpsB,OAAQssB,IASlC,IARA,IAAIC,EAAY,YAAeH,EAAME,GAAK,GACtCpsB,EAAQqsB,EAAU,GAClBC,EAAMD,EAAU,GAGhBE,EAAO9oB,IACP+oB,GAAS/oB,IAEJgpB,EAAM,EAAGA,EAAMjB,EAAgBiB,IACtC,GAAI/B,EAAKL,QAAQoC,GAAK3N,WAAa9e,EAAO,CAKxC,IAHA,IAAI0sB,EAAcD,EACdE,EAAYF,EAETE,EAAYnB,EAAgBmB,IAAa,CAC9C,IAAI1D,EAAOyB,EAAKL,QAAQsC,GAExB,GAAI1D,EAAKnK,UAAYwN,EACnB,MAGEK,EAAYnB,EAAiBE,IAE/Ba,EAAO7qB,KAAKI,IAAIyqB,EAAMtD,EAAKtqB,GAC3B6tB,EAAQ9qB,KAAKG,IAAI2qB,EAAOvD,EAAKtqB,EAAIsqB,EAAK1S,QAI1C,IAAK,IAAI8C,EAAIqT,EAAarT,EAAIsT,EAAWtT,IAAK,CAC5C,IAAIuT,EAAalC,EAAKL,QAAQhR,GAE9BuT,EAAWjuB,EAAI6tB,GAASI,EAAWjuB,EAAIiuB,EAAWrW,MAAQgW,GAG5D,MAYN,IAJA,IAAIM,EAAc,SAAqBpjB,GACrC,OAAOuV,EAAWvV,GAGXqjB,EAAM,EAAGA,EAAMtB,EAAgBsB,IAAO,CAC7C,IAAIC,EAAcrC,EAAKL,QAAQyC,GAG3BxK,GADJtD,EAAW+N,EAAY/N,UACAQ,MAEnBwN,GAAuD,EAAjDjC,GAAiBkC,OAAOF,EAAYjO,WAE9C,GAAIkO,GAAK,CACP,IAAIE,GAAWzH,EAAK0H,qBAAqBxP,EAAKoP,EAAYjO,YAEtDoO,IACFzP,EAAQC,aAAawP,GAAU,EAAG,EAAGL,GAKzC,GAAIpE,EAAuB,CACzB,IAAI3J,GAAYiO,EAAYjO,UACxBsO,GAAYL,EAAYpuB,EAAIisB,EAC5ByC,GAAaN,EAAYpuB,EAAIouB,EAAYxW,MAAQqU,EACrDhG,EAA2B,EAAZ9F,IAAiBkO,GAAMK,GAAaD,GAEnDxI,EAA2B,EAAZ9F,GAAgB,GAAKkO,GAAMI,GAAYC,GAEtDzI,EAA2B,EAAZ9F,GAAgB,GAAKmM,GAAcxB,EAAoBoB,EAMtE,IAAIyC,GAAWxO,GAAYuM,GAEvBiC,GAAW,GACbC,EAA2B3I,EAAgByG,GAAeiC,IAG5DjC,GAAgBvM,GAIlB,GAAIiC,EAGF,IAFA,IAAIyM,GAAaT,EAAYjO,UAEtB0O,GAAalC,IAClBA,KAEIvK,EAAYG,eAAeoK,MAC7BH,GAAepK,EAAYuK,KAMjC,IAAKtM,EAASkL,eAAiBlL,EAASoL,QAAS,CAC/C,IAAIqD,GAAMrC,KAEL3I,EAAUH,KACbG,EAAUH,GAAW,CACnBjjB,KAAM2f,EAAS3f,KACfqjB,WAAY,CAAC1D,EAAS9S,KAAM8S,EAAS7S,KAAM6S,EAAS5S,KAAM4S,EAAS3S,QAKvE,IAAI0R,GAASgP,EAAYpuB,EAAIisB,EACzB8C,GAASzC,GAAcJ,EAC3BhJ,EAAqB,EAAN4L,IAAW1P,GAC1B8D,EAAqB,EAAN4L,GAAU,GAAKC,GAE9B,IAAIC,GAAQ5P,GAASiB,EAAS9S,KAAOgW,EACjC0L,GAAQF,GAAS1O,EAAS7S,KAAO+V,EACjC2L,GAAQ9P,GAASiB,EAAS5S,KAAO8V,EACjC4L,GAAQJ,GAAS1O,EAAS3S,KAAO6V,EACjCyL,GAAQzI,EAAc,KAAIA,EAAc,GAAKyI,IAC7CC,GAAQ1I,EAAc,KAAIA,EAAc,GAAK0I,IAC7CC,GAAQ3I,EAAc,KAAIA,EAAc,GAAK2I,IAC7CC,GAAQ5I,EAAc,KAAIA,EAAc,GAAK4I,IAE7CL,GAAM9E,GAAsB,IAC9BuC,GAAQ,CACNlrB,MAAOytB,GACPnB,IAAKmB,GACLM,KAAM,CAredtqB,oBAueMqhB,EAAcvhB,KAAK2nB,KAGrBA,GAAMoB,MACN,IAAI0B,GAAY9C,GAAM6C,KAQtB,GAPIJ,GAAQK,GAAU,KAAIA,GAAU,GAAKL,IACrCC,GAAQI,GAAU,KAAIA,GAAU,GAAKJ,IACrCC,GAAQG,GAAU,KAAIA,GAAU,GAAKH,IACrCC,GAAQE,GAAU,KAAIA,GAAU,GAAKF,IAEzC3P,EAASsP,IAAOnL,EAEZvB,EAAa,CACf,IAAIkN,GAAe,EAANR,GAEb9I,EAAYsJ,IAAU9C,IAAgB,GAAK,IAC3CxG,EAAYsJ,GAAS,GAAK9C,IAAgB,EAAI,IAC9CxG,EAAYsJ,GAAS,GAAoB,IAAf9C,MAOlCF,IAAelG,KAGbH,EAAgB,CAClB,IAAI0I,GAAW3P,EAAK7d,OAASurB,GAEzBiC,GAAW,GACbC,EAA2B3I,EAAgByG,GAAeiC,KAMhExL,EAAQkH,YAAchqB,IAAQuqB,EAC9BzL,EAAS,CACPK,SAAUA,EAEV0D,eAAgBA,EAEhBY,UAAWA,EAEXmC,eAAgBA,EAEhBC,YAAaA,EAEbF,YAAaA,EAEbG,cAAeA,EAEflH,SAAUA,EAEV/N,WAAYA,EAEZS,SAAUA,EAAW4R,EAErB3R,UAAWA,EAAY2R,EAEvB6C,WAAYA,EAEZC,YAAaA,EAEbC,YAAa,CACb2F,EAAeC,EAAgBhB,EAAM/pB,OAASilB,EAAY6F,EAAgBxB,EAAcyB,GACxF3F,cAAeA,EAEfpD,QAASA,OA6Bf,SAASgJ,EAAa7O,GACpB,IAAIzc,EAAQyc,EAAIzc,MAAM,eAClB0uB,EAAM1uB,EAAQqB,WAAWrB,EAAM,IAAM2uB,IACzC,OAAOC,MAAMF,GAAO,EAAIA,EAAM,IAGhC,SAASX,EAA2B3I,EAAgByJ,EAAef,GAMjE,IALA,IAAIgB,EAAY1J,EAA+B,EAAhByJ,GAC3BE,EAAU3J,EAA+B,EAAhByJ,EAAoB,GAC7CG,EAAO5J,EAA+B,EAAhByJ,EAAoB,GAC1CI,GAAmBF,EAAUD,GAAahB,EAErCtsB,EAAI,EAAGA,EAAIssB,EAAUtsB,IAAK,CACjC,IAAI0tB,EAAmC,GAArBL,EAAgBrtB,GAClC4jB,EAAe8J,GAAcJ,EAAYG,EAAkBztB,EAC3D4jB,EAAe8J,EAAa,GAAKJ,EAAYG,GAAmBztB,EAAI,GACpE4jB,EAAe8J,EAAa,GAAKF,GAIrC,SAASxvB,IACP,OAAQC,KAAKC,aAAe/B,MAAM6B,MAIpC,SAAS4qB,IACPhsB,KAAKimB,KAAO,GAGd,IAAI8K,EAAgB,CAAC,WAAY,IAAK,QAAS,aAmC/C,OAlCA/E,EAASxsB,UAAY,CACnBmZ,MAAO,EACPiU,eAAe,EAEf,YACE,OAAO9oB,KAAKktB,KAAKhxB,KAAKimB,KAAK/jB,OAAS6uB,EAAc7uB,SAGpDuqB,QAAS,SAAiBrpB,GACxB,IAAIypB,EAAMb,EAASiF,UAGnB,OAFApE,EAAI5G,KAAOjmB,KAAKimB,KAChB4G,EAAIjL,MAAQxe,EACLypB,GAETF,QAAS,SAAiBvpB,GACxB,IAAI8tB,EAAU,IAAIlF,EAElB,OADAkF,EAAQjL,KAAOjmB,KAAKimB,KAAKkL,OAAO/tB,EAAI2tB,EAAc7uB,QAC3CgvB,IAGXlF,EAASiF,UAAYF,EAAcpT,QAAO,SAAUyT,EAAKC,EAAMjuB,EAAGoiB,GAShE,OARA1K,OAAOC,eAAeqW,EAAKC,EAAM,CAC/B9R,IAAK,WACH,OAAOvf,KAAKimB,KAAKjmB,KAAK4hB,MAAQmP,EAAc7uB,OAASkB,IAEvDkY,IAAK,SAAa7O,GAChBzM,KAAKimB,KAAKjmB,KAAK4hB,MAAQmP,EAAc7uB,OAASkB,GAAKqJ,KAGhD2kB,IACN,CACDnL,KAAM,KACNrE,MAAO,IAEF,CACL0H,QAASA,EACTgI,QAnFF,SAAiB1uB,EAAMsd,GACrBoJ,EAAQ1mB,GAAM,SAAU/C,GACtB,IAAI0xB,EAAsB,YAAe1xB,EAAOwnB,YAAa,GACzD9mB,EAAKgxB,EAAoB,GACzB/wB,EAAK+wB,EAAoB,GACzB9wB,EAAK8wB,EAAoB,GACzB7wB,EAAK6wB,EAAoB,GAE7BrR,EAAS,CACPvH,MAAOlY,EAAKF,EACZ4lB,OAAQzlB,EAAKF,MAEd,CACDyqB,aAAa,KAuEf/C,SAAUA,IAgiF2C,KACvDlG,KAAM,SAAc8F,EAAQF,EAAY4J,EAAkBC,GACxD,IAAIpP,EAAiByF,EAAOzF,eAC5B,OAAOmP,EAAiB5J,EAAY6J,IAAe,CACjDpP,eAAgBA,OASlBsD,EAAmC,WACrC,IAII+L,EAAU,GACVC,EAAU,EACd,OAAO,WACL,IAAIC,EAEAC,EAAW,0BAA4BF,IAT3B,EAUZG,EAASJ,EAAQG,GA2BrB,OAzBKC,IACHA,EAASJ,EAAQG,GAAY,CAC3BzrB,aAAc,YAAmB,CAC/BC,KAAMwrB,EACNA,SAAUA,EACVvrB,aAAc,CAAC8b,EAAQ/hB,EAA0BD,GACjD4hB,KAAM,SAAc8F,EAAQznB,EAA0BD,GAGpD,OAAOA,EAAmBC,EAA0B,CAClD4B,YAHgB6lB,EAAO7lB,YAIvBsgB,UAHcuF,EAAOvF,aAMzBwP,iBAAkB,SAA0BlyB,GAC1C,MAAO,CAACA,EAAOwC,YAAY8G,WAG/B6oB,SAAU,EACVC,UAAW,OAIfH,EAAOE,WACPE,aAAaJ,EAAOG,YACZL,EAAUE,GAAQ1rB,aAAajG,MAAMyxB,EAAS1xB,WAAW8jB,MAAK,SAAUnkB,GAO9E,OAN0B,KAApBiyB,EAAOE,WACXF,EAAOG,UAAYE,YAAW,WAC5B,YAAgBN,KAtCN,MA0CPhyB,MA7C0B,GAkDnCkkB,EAA+B,YAAmB,CACpD1d,KAAM,aACNC,aAAc,CAACqhB,EAAwB,KACvC3F,KAAM,SAAcoQ,EAAYC,GAC9B,OAAO,SAAUzvB,GACf,IAAI0vB,EAAW,IAAID,EAEnB,OADAD,EAAW9I,QAAQ1mB,EAAM0vB,EAASC,SAC3BD,IAGXP,iBAAkB,SAA0BlyB,GAE1C,IAAI2yB,EAAgB,CAAC3yB,EAAOokB,eAAe9a,OAAQtJ,EAAO0gB,SAASpX,QAMnE,OAJItJ,EAAOmnB,gBACTwL,EAAc7sB,KAAK9F,EAAOmnB,eAAe7d,QAGpCqpB,KAsBX,IAAIC,EAA8B,WAChC,IAAIC,EAAqB,GAYzB,IAAI,UACJ,IA4BID,EAA8B,SAAUE,GAC1C,YAAUF,EAAgBE,GAE1B,IAAIC,EAAS5zB,EAAayzB,GAE1B,SAASA,IACP,IAAII,EAqBJ,OAnBA,YAAgB7yB,KAAMyyB,IAEtBI,EAAQD,EAAOlzB,KAAKM,OACd8yB,OAAS,EACfD,EAAME,YAAc,EAGpBF,EAAM9kB,OAAS,CAAC,CACd3L,MAAO,EACPwhB,MAAO/d,IACPmtB,cAAe,GACd,CACD5wB,MAAO,EACPwhB,MAAO/d,IACPmtB,cAAe,IAGjBH,EAAMI,eAAiB,IAAI,SAC3BJ,EAAMK,YAAc,IAAI,OACjBL,EA4IT,OAzIA,YAAaJ,EAAgB,CAAC,CAC5BpP,IAAK,wBACLrI,MAAO,cAEN,CACDqI,IAAK,qBACLrI,MAAO,cAEN,CACDqI,IAAK,eAcLrI,MAAO,SAAsBoJ,EAAa0C,EAAmBO,EAAaH,EAAeH,GAEvFoM,EAAiBnzB,KAnFG,qBAmFwBokB,EAAa,GACzD+O,EAAiBnzB,KAnFE,oBAmFwB8mB,EAAmB,GAC9DqM,EAAiBnzB,KAnFE,oBAmFwB+mB,EAAa,GACxD/mB,KAAKozB,aAAe/L,EACpBrnB,KAAKqzB,eAAiBnM,EACtBoM,EAAiBtzB,KAAM8mB,EAAkB5kB,QAEzClC,KAAKuzB,kBAEN,CACDlQ,IAAK,gBACLrI,MAAO,WACL,IAAI3W,EAASrE,KAAKozB,aAElB,GAAI/uB,EAAQ,CACV,IAAI0uB,EAAc/yB,KAAK+yB,YACnBS,EAAOxzB,KAAKkzB,YAEhB,GAAIH,EAAa,CACf,IAAIU,EAAK3vB,KAAK2vB,GACVpN,EAAQviB,KAAKuiB,MACbniB,EAAMJ,KAAKI,IACXD,EAAMH,KAAKG,IACXyvB,EAAM5vB,KAAK4vB,IACXC,EAAM7vB,KAAK6vB,IACXC,EAASH,EAAK,EACdI,EAAa,EAALJ,EACRK,EAAOhwB,KAAKE,IAAI+uB,GAChBgB,EAAY1vB,EAAO,GAAKyvB,EACxBE,EAAa3vB,EAAO,GAAKyvB,EACzBtuB,EAAO6gB,GAAO0N,EAAYH,GAAUC,KAAWxN,GAAO2N,EAAaJ,GAAUC,IAAUC,EAAO5vB,EAAIwvB,EAAIK,GAAaD,EAAMJ,EAAIM,GAAcF,GAC3IlvB,EAAOyhB,GAAO0N,EAAYH,GAAUC,KAAWxN,GAAO2N,EAAaJ,GAAUC,GAASC,EAAO7vB,EAAIyvB,EAAIK,GAAaD,EAAMJ,EAAIM,GAAcF,GAC1IG,EAAO5N,GAAO0N,EAAYN,GAAMI,KAAWxN,GAAO2N,EAAaP,GAAMI,GAAgB,EAAPC,EAAW7vB,EAAI6vB,EAAOH,EAAII,GAAaD,EAAMA,EAAOH,EAAIK,GAAcF,GACxJN,EAAKtvB,IAAIoX,IAAI9V,EAAMnB,EAAO,GAAI0uB,EAAc,GAAKkB,EAAO,GACxDT,EAAKvvB,IAAIqX,IAAI1W,EAAMP,EAAO,GAAI0uB,EAAc,EAAI,EAAIkB,QAEpDT,EAAKtvB,IAAIoX,IAAIjX,EAAO,GAAIA,EAAO,GAAI,GACnCmvB,EAAKvvB,IAAIqX,IAAIjX,EAAO,GAAIA,EAAO,GAAI,GAGrCmvB,EAAKU,kBAAkBl0B,KAAKizB,mBAiB/B,CACD5P,IAAK,gBACLrI,MAAO,SAAuBmZ,GAC5B,IAAIvQ,EAAQ5jB,KAAKo0B,aA9IE,qBA8I+BxQ,MAC9CyQ,EAASr0B,KAAKqzB,eAElB,GAAIgB,EACF,IAAK,IAAIjxB,EAAIixB,EAAOnyB,OAAQkB,KAAM,CAChCwgB,EAAQyQ,EAAOjxB,GAAGsrB,IAClB,IAAIyB,EAAOkE,EAAOjxB,GAAG+sB,KAErB,GAAIA,EAAK,GAAKgE,EAAS3jB,GAAK2f,EAAK,GAAKgE,EAASnzB,GAAKmvB,EAAK,GAAKgE,EAASzY,GAAKyU,EAAK,GAAKgE,EAASpzB,EAC7F,MAKNuyB,EAAiBtzB,KAAM4jB,KAExB,CACDP,IAAK,SACL/H,IAAK,SAAawX,GAChB,IAAIwB,EAASt0B,KAEb,GAAI8yB,IAAW9yB,KAAKu0B,QAAS,CAC3Bv0B,KAAKu0B,QAAUzB,GAEO,iBAAXA,GAAuBA,EAAS,KACzCA,EAAS,GAGX,IAAI0B,EAtLZ,SAA6B1B,GAC3B,IAAI2B,EAAO/B,EAAmBI,GAM9B,OAJK2B,IACHA,EAAO/B,EAAmBI,GAAU,IAAI,sBAAoB,EAAG,EAAGA,EAAQA,GAAQ4B,UAAU,GAAK,GAAK,IAGjGD,EA+KSE,CAAoB7B,GAC9B,CAAC,WAAY,SAAU,MAAMlV,SAAQ,SAAUgX,GAC7CN,EAAOO,WAAWD,GAAQJ,EAAIK,WAAWD,GAAME,WAEjD90B,KAAK+0B,SAASP,EAAIQ,WAAWF,WAGjCvV,IAAK,WACH,OAAOvf,KAAKu0B,UAEb,CACDlR,IAAK,cACL/H,IAAK,SAAa9U,GACZA,IAAMxG,KAAKi1B,eACbj1B,KAAKi1B,aAAezuB,EAEpBxG,KAAKuzB,kBAGThU,IAAK,WACH,OAAOvf,KAAKi1B,iBAITxC,EAvKyB,CAwKhC,2BAUF,SAASU,EAAiBsB,EAAMS,EAAUC,EAAUC,GAClD,IAAIR,EAAOH,EAAKL,aAAac,GAEzBC,EAEEP,GAAQA,EAAKS,MAAMnzB,SAAWizB,EAASjzB,QACzC0yB,EAAKS,MAAM/Z,IAAI6Z,GACfP,EAAKlO,aAAc,IAEnB+N,EAAKa,aAAaJ,EAAU,IAAI,2BAAyBC,EAAUC,WAO5DX,EAAKc,kBAEZd,EAAKe,WAEEZ,GACTH,EAAKgB,gBAAgBP,GAKzB,SAAS5B,EAAiBmB,EAAM7Q,GAC9B6Q,EAAKA,EAAKnR,eAAe,iBAAmB,gBAAkB,qBAAuBM,EAGvF,OArCK6O,EAAejzB,UAAU81B,eAC5B7C,EAAejzB,UAAU81B,aAAe,SAAUjvB,EAAMqvB,GAEtD,OADA11B,KAAK60B,WAAWxuB,GAAQqvB,EACjB11B,OAkCJyyB,EA1PyB,GAgQ9BkD,EAAmB,okCAAokCjS,OAAO,wZAE9lCkS,EAAgB,uqBAAuqBlS,OAAO,+xBAAgyB,ulBAAwlB,+XAgH1jE,IAAImS,EAAoB,WACtB,IAAIC,EAAkB,IAAI,oBAAkB,CAC1CC,MAAO,SACPC,KAAM,aACNC,aAAa,IAGXC,EAAW,IAAI,UACfC,EAAY,IAAI,UAChBC,EAAY,IAAI,UAChBC,EAAY,GACZC,EAAS,IAAI,UAGjB,SAASC,EAAMzvB,GACb,OAAO0vB,MAAMC,QAAQ3vB,GAAKA,EAAE,GAAKA,EAGnC,IAAI4vB,EAAsB,WACxB,IAAIC,EAAO,IAAI,OAAK,IAAI,sBAAoB,EAAG,GAAIb,GAMnD,OAJAY,EAAsB,WACpB,OAAOC,GAGFA,GAGLC,EAAwB,WAC1B,IAAID,EAAO,IAAI,OAAK,IAAI,sBAAoB,EAAG,EAAG,GAAI,GAAIb,GAM1D,OAJAc,EAAwB,WACtB,OAAOD,GAGFA,GAGLE,EAAiB,CACnB9X,KAAM,aAEJ+X,EAAoB,CACtB/X,KAAM,gBAEJgY,EAAiB,CAAC,OAAQ,WAAY,gBAAiB,aAAc,WAAY,eAAgB,OAAQ,YAAa,YAAa,aAAc,aAAc,UAAW,UAAW,cAAe,gBACpMC,EAAiBD,EAAerT,OAAO,WAAY,QAAS,cAAe,WAAY,cAAe,cAAe,uBAQrHmS,EAAoB,SAAUoB,GAChC,YAAUpB,EAAMoB,GAEhB,IAAIC,EAAUl4B,EAAa62B,GAE3B,SAASA,IACP,IAAIsB,EAEJ,YAAgBn3B,KAAM61B,GAEtB,IAAIuB,EAAW,IAAI3E,EA+RnB,OA9RA0E,EAASD,EAAQx3B,KAAKM,KAAMo3B,EAAU,OAO/BrX,KAAO,GAmBdoX,EAAO1M,QAAU,EASjB0M,EAAOxM,QAAU,EAYjBwM,EAAOpE,YAAc,EAOrBoE,EAAOpN,UAAY,OAQnBoN,EAAO7W,KAAO,KAQd6W,EAAOnX,SAAW,GAOlBmX,EAAOlX,cAAgB,EAOvBkX,EAAOhQ,WAAa,SAOpBgQ,EAAOrN,SAAWjkB,IAQlBsxB,EAAO5M,aAAe,SAMtB4M,EAAOlN,UAAY,OAMnBkN,EAAOhN,WAAa,EASpBgN,EAAO9M,WAAa,SAapB8M,EAAOE,SAAW,KASlBF,EAAOpB,MAAQ,KAWfoB,EAAOhU,YAAc,KAUrBgU,EAAOG,aAAe,EAQtBH,EAAOI,aAAe,EAQtBJ,EAAOK,eAAiB,EAUxBL,EAAOM,YAAc,EASrBN,EAAOO,eAAiB,EASxBP,EAAOQ,eAAiB,EASxBR,EAAOS,YAAc,EAOrBT,EAAOU,YAzRc,QAgSrBV,EAAOW,cAAgB,EASvBX,EAAOY,YAAc,EAQrBZ,EAAOa,YAAc,EAQrBb,EAAOhD,SAAW,KAWlBgD,EAAOc,YA9TS,OAsUhBd,EAAOe,oBAAsB,EAU7Bf,EAAO7U,aAAe,KACtB6U,EAAOgB,UAAW,EACXhB,EA+ZT,OArZA,YAAatB,EAAM,CAAC,CAClBxS,IAAK,OACLrI,MAAO,SAAckF,GACnB,IAAIkY,EAASp4B,KAETA,KAAKq4B,aACPr4B,KAAKq4B,YAAa,EAEdr4B,KAAKs4B,YACNt4B,KAAKu4B,eAAiBv4B,KAAKu4B,aAAe,KAAK5yB,KAAKua,IAErDlgB,KAAKs4B,YAAa,EAClBt4B,KAAKw4B,cAAc3B,GACnBjU,EAAkB,CAChB7C,KAAM/f,KAAK+f,KACXO,KAAMtgB,KAAKsgB,KACXN,SAAUhgB,KAAKggB,UAAY,GAC3BC,cAAejgB,KAAKigB,eAAiB,EACrCkH,WAAYnnB,KAAKmnB,YAAc,SAC/B2C,SAAU9pB,KAAK8pB,SACfC,UAAW/pB,KAAK+pB,WAAa,OAC7BE,UAAWjqB,KAAKiqB,UAChBE,WAAYnqB,KAAKmqB,WACjBE,WAAYrqB,KAAKqqB,WACjBE,aAAcvqB,KAAKuqB,aACnBE,QAASzqB,KAAKyqB,QACdE,QAAS3qB,KAAK2qB,QACdxH,YAAanjB,KAAKmjB,YAClB0H,uBAAuB,EAEvBvI,aAActiB,KAAKsiB,eAClB,SAAUmW,GACXL,EAAOE,YAAa,EAEpBF,EAAOM,gBAAkBD,EAEzBL,EAAOhB,SAASuB,aAAaF,EAAerU,YAAaqU,EAAe3R,kBAAmB2R,EAAepR,YAAaoR,EAAevR,cAAeuR,EAAe1R,aAGpK,IAAI6R,EAASR,EAAOG,aAEhBK,IACFR,EAAOG,aAAe,KACtBH,EAAOC,YAAa,EAEpBD,EAAOS,MAAK,WACVD,EAAOhb,SAAQ,SAAUkb,GACvB,OAAOA,GAAMA,WAKnBV,EAAOI,cAAc1B,GAEjB5W,GACFA,WAaT,CACDmD,IAAK,iBACLrI,MAAO,SAAwB+d,EAAUC,EAAOC,EAAQ7B,EAAUC,EAAU6B,GAC1El5B,KAAK64B,OAEDxB,EAAS8B,sBACXn5B,KAAKo5B,kBAAkB/B,KAW1B,CACDhU,IAAK,UACLrI,MAAO,WACLhb,KAAKo3B,SAAS5B,YAUf,CACDnS,IAAK,oBACLrI,MAAO,SAA2Bqc,GAChC,IAAIgC,EAAYhC,EAASiC,sBACrBC,EAAWlC,EAASkC,SACpBC,EAAWx5B,KAAKy4B,eAEpB,GAAIe,EAAU,CACZ,IAAI1V,EAAa0V,EAAS1V,WACtBuD,EAAcmS,EAASnS,YAC3BkS,EAASE,kBAAkBze,MAAQ8I,EACnCyV,EAASG,sBAAsB1e,MAAMM,IAAIwI,EAAWkC,MAAMrN,MAAOmL,EAAWkC,MAAMG,QAClFoT,EAASI,oBAAoB3e,MAAQwe,EAASlX,aAC9CiX,EAASK,mBAAmB5e,MAAQwe,EAASv3B,YAC7Cs3B,EAASM,mBAAmB7e,MAAM8e,UAAUzS,GAC5CkS,EAASQ,sBAAsB/e,OAASqe,KAAeG,EAASzS,YAChE,IAGIgR,EACAD,EACAD,EALAmC,EAAiB,EACjBC,EAAa,EACbrC,EAAc,EAIdsC,EAAU,EACVC,EAAU,EAEd,GAAId,EAAW,CACb,IAAI/B,EAAet3B,KAAKs3B,aACpBI,EAAiB13B,KAAK03B,eACtBC,EAAiB33B,KAAK23B,eACtBF,EAAcz3B,KAAKy3B,YACnBD,EAAiBx3B,KAAKw3B,eAC1BwC,EAAiBh6B,KAAKo6B,cAAc9C,IAAiB,EACrD2C,EAAan2B,KAAKG,IAAI,EAAGjE,KAAKo6B,cAAc3C,IAAgB,GAC5DM,EAAcP,EACd0C,EAAUl6B,KAAKo6B,cAAc1C,IAAmB,EAChDyC,EAAUn6B,KAAKo6B,cAAczC,IAAmB,OAEhDC,EAAc9zB,KAAKG,IAAI,EAAGjE,KAAKo6B,cAAcp6B,KAAK43B,cAAgB,MAGhEC,EAAc73B,KAAK63B,YACnB0B,EAASc,mBAAmBrf,MAAMM,IAAmB,MAAfuc,EA7ezB,QA6eoEA,GAE5D,OADrBC,EAAgB93B,KAAK83B,iBACMA,EAAgB,IAG7CC,EAAc/3B,KAAK+3B,YAGrBwB,EAASe,sBAAsBtf,MAAQgf,EACvCT,EAASgB,sBAAsBvf,MAAMM,IAAI4e,EAASC,GAClDZ,EAASiB,kBAAkBxf,MAAQif,EACnCV,EAASkB,mBAAmBzf,MAAQ4c,EACpC2B,EAASmB,qBAAqB1f,MAAQ8c,EACtCyB,EAASoB,mBAAmB3f,MAAuB,MAAf+c,EAAsB,EAAIA,EAC9DwB,EAASqB,mBAAmB5f,MAAQhb,KAAK+yB,aAAe,EACxD,IAAIoB,EAAWn0B,KAAKm0B,SAEpB,GAAIA,GAAYqC,MAAMC,QAAQtC,IAAiC,IAApBA,EAASjyB,OAClDq3B,EAASsB,gBAAgB7f,MAAM8e,UAAU3F,OACpC,CAEL,IAAI2G,EAA+B,KAAxB96B,KAAKggB,UAAY,IAC5BuZ,EAASsB,gBAAgB7f,MAAMM,IAAI+L,EAAY,GAAKyT,EAAKzT,EAAY,GAAKyT,EAAKzT,EAAY,GAAKyT,EAAKzT,EAAY,GAAKyT,GAGxH96B,KAAKo3B,SAAS2D,cAAcxB,EAASsB,gBAAgB7f,OAGvDue,EAASyB,gBAAgBhgB,QAAUhb,KAAKm4B,SACxCd,EAAS4D,gBAAkBj7B,KAAKg4B,YAChCX,EAAS6D,oBAAsB7D,EAAS8D,mBAAqBn7B,KAAKg4B,aAAe,EAGjF,IAAIjC,EAAQsD,EAAYr5B,KAAKu3B,cAAgB,EAAIv3B,KAAK+1B,MAEtD,GAAa,MAATA,SACKsB,EAAStB,UACX,CACL,IAAIqF,EAAW/D,EAAS/T,eAAe,SAAW+T,EAAStB,MAAQsB,EAAStB,MAAQ,IAAI,QAEpFA,IAAUqF,EAASC,QAA2B,iBAAVtF,GACtCqF,EAAS9f,IAAI8f,EAASC,OAAStF,GAKnC,IAAIuF,EAASt7B,KAAKi4B,aArhBJ,OAuhBd,GAAIqD,IAAWjE,EAASkE,aAAc,CACpC,IAAIC,EAASjC,EAASkC,cAAczgB,MAEhCpZ,EA1hBQ,UAyhBZ05B,EAASA,EAAOz4B,QAAQ,YAAa,MACGy4B,EAAO15B,MAAM,gCAErD,GAAIA,EAAO,CACT,IAAI85B,EAAS,YAAe95B,EAAO,GAC/B+5B,EAAQD,EAAO,GACfE,EAAQF,EAAO,GACfG,EAAQH,EAAO,GACfI,EAAQJ,EAAO,GAEnBvF,EAAU7a,IAAI,EAAG,EAAG,GAAGsgB,GAAmB,MAAVD,EAAgB,GAAK,EACrDvF,EAAU9a,IAAI,EAAG,EAAG,GAAGwgB,GAAmB,MAAVD,GAAiB,EAAI,EACrD3F,EAAS6F,OAAOzF,EAAQH,EAAU6F,MAAM5F,GAAYA,GACpDoF,EAAOS,eAAe/F,QAEtBsF,EAAOU,WAGT7E,EAASkE,aAAeD,KAG3B,CACDjY,IAAK,gBACLrI,MAAO,SAAuBA,GAC5B,GAAqB,iBAAVA,EAAoB,CAC7B,IAAIpZ,EAAQoZ,EAAMpZ,MAAM,iBACpB0uB,EAAM1uB,EAAQqB,WAAWrB,EAAM,IAAM2uB,IACzCvV,GAASwV,MAAMF,GAAO,EAAIA,EAAM,KAAOtwB,KAAKggB,SAG9C,OAAOhF,IAMR,CACDqI,IAAK,4BACLrI,MAAO,SAAmCmhB,GACxC,IAAIC,EAASl8B,UAAUgC,OAAS,QAAsBC,IAAjBjC,UAAU,GAAmBA,UAAU,GAAK,IAAI,UACrFk8B,EAAOC,KAAKF,GAEZ,IAAI31B,EAAIxG,KAAK+yB,YAOb,OALIvsB,IAEF41B,EAAOr7B,EAAI+C,KAAKw4B,MAAMH,EAASp7B,EAAG+C,KAAKE,IAAIwC,GAAK1C,KAAKE,IAAIm4B,EAASzgB,IAAM5X,KAAKE,IAAIwC,IAG5E41B,IAMR,CACD/Y,IAAK,4BACLrI,MAAO,SAAmCmhB,GACxC,IAAIC,EAASl8B,UAAUgC,OAAS,QAAsBC,IAAjBjC,UAAU,GAAmBA,UAAU,GAAK,IAAI,UAErF,OADAi2B,EAAUkG,KAAKF,GACRn8B,KAAKu8B,0BAA0Bv8B,KAAKw8B,aAAarG,GAAYiG,KAOrE,CACD/Y,IAAK,UACLrI,MAAO,SAAiByhB,EAAWC,GACjC,IAAIjE,EAAiBz4B,KAAKy4B,eACtB1F,EAAc/yB,KAAK+yB,YAEvB,GAAI0F,EAAgB,CAQlB,IAPA,IAAIp0B,EAASo0B,EAAepR,YACxBsV,EAAc5J,EAAc6D,IAA0BF,IACtDjC,EAAOkI,EAAYvF,SACnBwF,EAAmBnI,EAAKI,WACxBsH,EAAWS,EAAiBT,SAC5BU,EAAKD,EAAiBC,GAEjBz5B,EAAI,EAAGA,EAAIy5B,EAAGjZ,MAAOxgB,IAAK,CACjC,IAAIrC,EAAIsD,EAAO,GAAKw4B,EAAGC,KAAK15B,IAAMiB,EAAO,GAAKA,EAAO,IACjDrD,EAAIqD,EAAO,GAAKw4B,EAAGE,KAAK35B,IAAMiB,EAAO,GAAKA,EAAO,IACjDqX,EAAI,EAEJqX,IACFrX,EAAIqX,EAAcjvB,KAAK6vB,IAAI5yB,EAAIgyB,GAAeA,EAC9ChyB,EAAI+C,KAAK4vB,IAAI3yB,EAAIgyB,GAAeA,GAGlCoJ,EAASa,OAAO55B,EAAGrC,EAAGC,EAAG0a,GAG3B+Y,EAAKxB,eAAiBjzB,KAAKo3B,SAASnE,eACpCwB,EAAKvB,YAAclzB,KAAKo3B,SAASlE,YACjCyJ,EAAYM,YAAcj9B,KAAKi9B,YAC/BN,EAAYtF,SAASrB,KAAOh2B,KAAKq3B,SAASrB,KAC1CK,EAAUn0B,OAAS,EACnBy6B,EAAYO,QAAQT,EAAWpG,GAE/B,IAAK,IAAI8G,EAAM,EAAGA,EAAM9G,EAAUn0B,OAAQi7B,IACxC9G,EAAU8G,GAAKC,OAASp9B,KACxB08B,EAAW/2B,KAAK0wB,EAAU8G,OAI/B,CACD9Z,IAAK,OACLrI,MAAO,SAAcqiB,GACnB,IAAIC,EAASt9B,KAGTy0B,EAAOz0B,KAAKo3B,SAQhB,OANA,YAAK,YAAgBvB,EAAKr2B,WAAY,OAAQQ,MAAMN,KAAKM,KAAMq9B,GAE/Dr9B,KAAKo3B,SAAW3C,EAChBuC,EAAepZ,SAAQ,SAAUyT,GAC/BiM,EAAOjM,GAAQgM,EAAOhM,MAEjBrxB,OAER,CACDqjB,IAAK,QACLrI,MAAO,WACL,OAAO,IAAIhb,KAAKC,aAAco8B,KAAKr8B,QAEpC,CACDqjB,IAAK,iBACL9D,IAAK,WACH,OAAOvf,KAAK04B,iBAAmB,OAIhC,CACDrV,IAAK,WACL9D,IAAK,WACH,IAAIge,EAAkBv9B,KAAKw9B,iBACvBC,EAAez9B,KAAK09B,eAAiB19B,KAAK29B,mBAAqB39B,KAAK29B,iBAAmB7H,EAAgBhB,SAe3G,GAbKyI,GAAmBA,EAAgBE,eAAiBA,IACvDF,EAAkBv9B,KAAKw9B,iBA5xBjC,SAAmCC,GACjC,IAAIG,EAAe,YAAsBH,EAAc,CACrDI,SAAS,EACTC,WAAY,CACVC,aAAa,GAEfxE,SAAU,CACRE,kBAAmB,CACjBze,MAAO,MAET0e,sBAAuB,CACrB1e,MAAO,IAAI,WAEb2e,oBAAqB,CACnB3e,MAAO,GAET4e,mBAAoB,CAClB5e,MAAO,GAET6e,mBAAoB,CAClB7e,MAAO,IAAI,UAAQ,EAAG,EAAG,EAAG,IAE9B6f,gBAAiB,CACf7f,MAAO,IAAI,UAAQ,EAAG,EAAG,EAAG,IAE9Bsf,sBAAuB,CACrBtf,MAAO,GAETgjB,sBAAuB,CACrBhjB,MAAO,GAET2f,mBAAoB,CAClB3f,MAAO,GAETuf,sBAAuB,CACrBvf,MAAO,IAAI,WAEb4f,mBAAoB,CAClB5f,MAAO,GAETwf,kBAAmB,CACjBxf,MAAO,GAETyf,mBAAoB,CAClBzf,MAAO,GAETqf,mBAAoB,CAClBrf,MAAO,IAAI,SAEb0f,qBAAsB,CACpB1f,MAAO,GAETygB,cAAe,CACbzgB,MAAO,IAAI,WAEb+e,sBAAuB,CACrB/e,OAAO,GAETggB,gBAAiB,CACfhgB,OAAO,IAGXijB,WAzEc,6nBA0EdC,gBAAiBvI,EACjBwI,aAAcvI,EACdwI,uBAtEqB,+vBAuErBC,eAAgB,SAAwBC,GACtC,IAAIC,EAAeD,EAAMC,aACrBC,EAAiBF,EAAME,eACvBC,EAAa,+BAWjB,OATIA,EAAW5d,KAAK2d,KAElBA,EAAiBA,EAAe37B,QAAQ47B,EAAY,kCAAkC57B,QAAQ,eAAgB,qBAEzG47B,EAAW5d,KAAK0d,KACnBA,EAAeA,EAAa17B,QAAQ,IAAgB,mHAIjD,CACL07B,aAAcA,EACdC,eAAgBA,MAoBtB,OAfAZ,EAAa3H,aAAc,EAC3Bnb,OAAO4jB,iBAAiBd,EAAc,CACpCzE,qBAAsB,CACpBne,OAAO,GAIT2jB,WAAY,CACVpf,IAAK,WACH,OAAOvf,KAAKg2B,MAEd1a,IAAK,gBAIFsiB,EAsrB2CgB,CAA0BnB,GAEpEA,EAAaoB,iBAAiB,WAAW,SAASC,IAChDrB,EAAasB,oBAAoB,UAAWD,GAC5CvB,EAAgB/H,cAQhBx1B,KAAKs3B,cAAgBt3B,KAAKy3B,aAAez3B,KAAK03B,gBAAkB13B,KAAK23B,eAAgB,CACvF,IAAIqH,EAAkBzB,EAAgB0B,YAkBtC,OAhBKD,KACHA,EAAkBzB,EAAgB0B,YAAcnkB,OAAO8E,OAAO2d,EAAiB,CAC7E2B,GAAI,CACFlkB,MAAOuiB,EAAgB2B,GAAK,OAGhB5F,uBAAwB,EACxC0F,EAAgBG,YAAa,EAC7BH,EAAgBj8B,IAAM,KAEtBw6B,EAAgBsB,iBAAiB,WAAW,SAASC,IACnDvB,EAAgBwB,oBAAoB,UAAWD,GAC/CE,EAAgBxJ,cAIb,CAACwJ,EAAiBzB,GAEzB,OAAOA,GAGXjiB,IAAK,SAAamiB,GACZA,GAAgBA,EAAatE,sBAE/Bn5B,KAAKw9B,iBAAmBC,EACxBz9B,KAAK09B,cAAgBD,EAAaA,cAElCz9B,KAAK09B,cAAgBD,IAGxB,CACDpa,IAAK,sBACL9D,IAAK,WACH,OAAOvf,KAAKo3B,SAAStE,QAEvBxX,IAAK,SAAawX,GAChB9yB,KAAKo3B,SAAStE,OAASA,IAExB,CACDzP,IAAK,cACL9D,IAAK,WACH,OAAOvf,KAAKo3B,SAASrE,aAEvBzX,IAAK,SAAa9U,GAChBxG,KAAKo3B,SAASrE,YAAcvsB,IAG7B,CACD6c,IAAK,sBACL9D,IAAK,WACH,OAAOgX,EAAMv2B,KAAKq3B,UAAU+H,qBAE7B,CACD/b,IAAK,yBACL9D,IAAK,WACH,OAAOgX,EAAMv2B,KAAKq3B,UAAUgI,0BAIzBxJ,EAxsBe,CAysBtB,QAGFkB,EAAenZ,SAAQ,SAAUyT,GAC/B,IAAIiO,EAAa,YAAcjO,EAC/BvW,OAAOC,eAAe8a,EAAKr2B,UAAW6xB,EAAM,CAC1C9R,IAAK,WACH,OAAOvf,KAAKs/B,IAEdhkB,IAAK,SAAaN,GACZA,IAAUhb,KAAKs/B,KACjBt/B,KAAKs/B,GAActkB,EACnBhb,KAAKq4B,YAAa,SAM1B,IAAIkH,GAAe,EAqBnB,OApBAzkB,OAAOC,eAAe8a,EAAKr2B,UAAW,SAAU,CAC9C+f,IAAK,WACH,OAAOvf,KAAKw/B,oBAEdlkB,IAAK,SAAa7O,GAChBzM,KAAKw/B,mBAAqB/yB,EAErB8yB,IACHpyB,QAAQsyB,KAAK,gFACbF,GAAe,GAGb/I,MAAMC,QAAQhqB,IAChBzM,KAAKyqB,QAAU,GAAG/G,OAAwB,MAAfjX,EAAI,IAAM,GAAU,KAC/CzM,KAAK2qB,QAAU,GAAGjH,OAAwB,MAAfjX,EAAI,IAAM,GAAU,MAE/CzM,KAAKyqB,QAAUzqB,KAAK2qB,QAAU,KAI7BkL,EAryBe,GA80BN,IAAI6J,QAqFE,IAAIA","file":"4d99978a-5b46b58fb07b43763719.js","sourcesContent":["import \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/es6.weak-map\";\nimport _get from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/get\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport _classCallCheck from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport \"core-js/modules/es6.typed.uint8-clamped-array\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.object.freeze\";\nimport \"core-js/modules/es6.string.code-point-at\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.typed.uint32-array\";\nimport \"core-js/modules/es6.regexp.flags\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.typed.data-view\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.match\";\nimport _slicedToArray from \"/home/runner/work/cumatron/cumatron/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.typed.float32-array\";\nimport \"core-js/modules/es6.typed.uint16-array\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.typed.uint8-array\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DataTexture, RGBAFormat, LinearFilter, Color, Vector3, InstancedBufferGeometry, Sphere, Box3, InstancedBufferAttribute, PlaneBufferGeometry, Vector2, Vector4, Matrix3, MeshBasicMaterial, DoubleSide, Matrix4, Mesh } from 'three';\nimport { defineWorkerModule, Thenable, terminateWorker, ThenableWorkerModule } from 'troika-worker-utils';\nimport bidiFactory from 'bidi-js';\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\n/**\n * @typedef {object} SDFGeneratorResult\n * @property {Uint8Array} textureData\n * @property {number} timing\n */\n\n/**\n * Initializes and returns a function to generate an SDF texture for a given glyph.\n * @param {function} createGlyphSegmentsIndex - factory for a GlyphSegmentsIndex implementation.\n * @return {function(Object): SDFGeneratorResult}\n */\n\nfunction createSDFGenerator(createGlyphSegmentsIndex) {\n  /**\n   * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n   */\n  var CURVE_POINTS = 16;\n  /**\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n   */\n\n  function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n      y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n    };\n  }\n  /**\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n   */\n\n\n  function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n      y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n    };\n  }\n\n  function now() {\n    return (self.performance || Date).now();\n  }\n  /**\n   * Generate an SDF texture segment for a single glyph.\n   * @param {number} sdfWidth - width of the SDF texture in pixels\n   * @param {number} sdfHeight - height of the SDF texture in pixels\n   * @param {string} path - an SVG path string describing the glyph; should only contain commands: M/L/Q/C/Z.\n   * @param {number[]} viewBox - [minX, minY, maxX, maxY] in font units aligning with the texture's edges\n   * @param {number} maxDistance - the maximum distance from the glyph path in font units that will be encoded\n   * @param {number} [sdfExponent] - specifies an exponent for encoding the SDF's distance values; higher exponents\n   *        will give greater precision nearer the glyph's path.\n   * @return {SDFGeneratorResult}\n   */\n\n\n  function generateSDF(sdfWidth, sdfHeight, path, viewBox, maxDistance) {\n    var sdfExponent = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    var start = now();\n    var textureData = new Uint8Array(sdfWidth * sdfHeight);\n    var viewBoxWidth = viewBox[2] - viewBox[0];\n    var viewBoxHeight = viewBox[3] - viewBox[1]; // Decompose all paths into straight line segments and add them to an index\n\n    var lineSegmentsIndex = createGlyphSegmentsIndex(viewBox);\n    var segmentRE = /([MLQCZ])([^MLQCZ]*)/g;\n    var match, firstX, firstY, prevX, prevY;\n\n    while (match = segmentRE.exec(path)) {\n      var args = match[2].replace(/^\\s*|\\s*$/g, '').split(/[,\\s]+/).map(function (v) {\n        return parseFloat(v);\n      });\n\n      switch (match[1]) {\n        case 'M':\n          prevX = firstX = args[0];\n          prevY = firstY = args[1];\n          break;\n\n        case 'L':\n          if (args[0] !== prevX || args[1] !== prevY) {\n            //yup, some fonts have zero-length line commands\n            lineSegmentsIndex.addLineSegment(prevX, prevY, prevX = args[0], prevY = args[1]);\n          }\n\n          break;\n\n        case 'Q':\n          {\n            var prevPoint = {\n              x: prevX,\n              y: prevY\n            };\n\n            for (var i = 1; i < CURVE_POINTS; i++) {\n              var nextPoint = pointOnQuadraticBezier(prevX, prevY, args[0], args[1], args[2], args[3], i / (CURVE_POINTS - 1));\n              lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n              prevPoint = nextPoint;\n            }\n\n            prevX = args[2];\n            prevY = args[3];\n            break;\n          }\n\n        case 'C':\n          {\n            var _prevPoint = {\n              x: prevX,\n              y: prevY\n            };\n\n            for (var _i = 1; _i < CURVE_POINTS; _i++) {\n              var _nextPoint = pointOnCubicBezier(prevX, prevY, args[0], args[1], args[2], args[3], args[4], args[5], _i / (CURVE_POINTS - 1));\n\n              lineSegmentsIndex.addLineSegment(_prevPoint.x, _prevPoint.y, _nextPoint.x, _nextPoint.y);\n              _prevPoint = _nextPoint;\n            }\n\n            prevX = args[4];\n            prevY = args[5];\n            break;\n          }\n\n        case 'Z':\n          if (prevX !== firstX || prevY !== firstY) {\n            lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n          }\n\n          break;\n      }\n    } // For each target SDF texel, find the distance from its center to its nearest line segment,\n    // map that distance to an alpha value, and write that alpha to the texel\n\n\n    for (var sdfX = 0; sdfX < sdfWidth; sdfX++) {\n      for (var sdfY = 0; sdfY < sdfHeight; sdfY++) {\n        var signedDist = lineSegmentsIndex.findNearestSignedDistance(viewBox[0] + viewBoxWidth * (sdfX + 0.5) / sdfWidth, viewBox[1] + viewBoxHeight * (sdfY + 0.5) / sdfHeight, maxDistance); // Use an exponential scale to ensure the texels very near the glyph path have adequate\n        // precision, while allowing the distance field to cover the entire texture, given that\n        // there are only 8 bits available. Formula visualized: https://www.desmos.com/calculator/uiaq5aqiam\n\n        var alpha = Math.pow(1 - Math.abs(signedDist) / maxDistance, sdfExponent) / 2;\n\n        if (signedDist < 0) {\n          alpha = 1 - alpha;\n        }\n\n        alpha = Math.max(0, Math.min(255, Math.round(alpha * 255))); //clamp\n\n        textureData[sdfY * sdfWidth + sdfX] = alpha;\n      }\n    }\n\n    return {\n      textureData: textureData,\n      timing: now() - start\n    };\n  }\n\n  return generateSDF;\n}\n/**\n * Factory function that creates a self-contained environment for processing text typesetting requests.\n *\n * It is important that this function has no closure dependencies, so that it can be easily injected\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\n * dependencies must be passed in at initialization.\n *\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n * a standardized structure giving access to the font and its glyphs:\n *   {\n *     unitsPerEm: number,\n *     ascender: number,\n *     descender: number,\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n *       //invokes callback for each glyph to render, passing it an object:\n *       callback({\n *         index: number,\n *         advanceWidth: number,\n *         xMin: number,\n *         yMin: number,\n *         xMax: number,\n *         yMax: number,\n *         pathCommandCount: number,\n *         forEachPathCommand(callback) {\n *           //invokes callback for each path command, with args:\n *           callback(\n *             type: 'M|L|C|Q|Z',\n *             ...args //0 to 6 args depending on the type\n *           )\n *         }\n *       })\n *     }\n *   }\n * @param {object} bidi - the bidi.js implementation object\n * @param {Object} config\n * @return {Object}\n */\n\n\nfunction createTypesetter(fontParser, bidi, config) {\n  var defaultFontURL = config.defaultFontURL;\n  /**\n   * Holds parsed font objects by url\n   */\n\n  var fonts = Object.create(null);\n  var INF = Infinity; // Set of Unicode Default_Ignorable_Code_Point characters, these will not produce visible glyphs\n\n  var DEFAULT_IGNORABLE_CHARS = /[\\u00AD\\u034F\\u061C\\u115F-\\u1160\\u17B4-\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8]/; // Incomplete set of characters that allow line breaking after them\n  // In the future we may consider a full Unicode line breaking algorithm impl: https://www.unicode.org/reports/tr14\n\n  var BREAK_AFTER_CHARS = /[\\s\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]/;\n  /**\n   * Load a given font url\n   */\n\n  function doLoadFont(url, callback) {\n    function tryLoad() {\n      var onError = function onError(err) {\n        console.error(\"Failure loading font \".concat(url).concat(url === defaultFontURL ? '' : '; trying fallback'), err);\n\n        if (url !== defaultFontURL) {\n          url = defaultFontURL;\n          tryLoad();\n        }\n      };\n\n      try {\n        var request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n\n        request.onload = function () {\n          if (request.status >= 400) {\n            onError(new Error(request.statusText));\n          } else if (request.status > 0) {\n            try {\n              var fontObj = fontParser(request.response);\n              callback(fontObj);\n            } catch (e) {\n              onError(e);\n            }\n          }\n        };\n\n        request.onerror = onError;\n        request.send();\n      } catch (err) {\n        onError(err);\n      }\n    }\n\n    tryLoad();\n  }\n  /**\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\n   * loaded, the callback will be called synchronously.\n   */\n\n\n  function loadFont(fontUrl, callback) {\n    if (!fontUrl) fontUrl = defaultFontURL;\n    var font = fonts[fontUrl];\n\n    if (font) {\n      // if currently loading font, add to callbacks, otherwise execute immediately\n      if (font.pending) {\n        font.pending.push(callback);\n      } else {\n        callback(font);\n      }\n    } else {\n      fonts[fontUrl] = {\n        pending: [callback]\n      };\n      doLoadFont(fontUrl, function (fontObj) {\n        var callbacks = fonts[fontUrl].pending;\n        fonts[fontUrl] = fontObj;\n        callbacks.forEach(function (cb) {\n          return cb(fontObj);\n        });\n      });\n    }\n  }\n  /**\n   * Main entry point.\n   * Process a text string with given font and formatting parameters, and return all info\n   * necessary to render all its glyphs.\n   */\n\n\n  function typeset(_ref, callback) {\n    var _ref$text = _ref.text,\n        text = _ref$text === void 0 ? '' : _ref$text,\n        _ref$font = _ref.font,\n        font = _ref$font === void 0 ? defaultFontURL : _ref$font,\n        _ref$sdfGlyphSize = _ref.sdfGlyphSize,\n        sdfGlyphSize = _ref$sdfGlyphSize === void 0 ? 64 : _ref$sdfGlyphSize,\n        _ref$fontSize = _ref.fontSize,\n        fontSize = _ref$fontSize === void 0 ? 1 : _ref$fontSize,\n        _ref$letterSpacing = _ref.letterSpacing,\n        letterSpacing = _ref$letterSpacing === void 0 ? 0 : _ref$letterSpacing,\n        _ref$lineHeight = _ref.lineHeight,\n        lineHeight = _ref$lineHeight === void 0 ? 'normal' : _ref$lineHeight,\n        _ref$maxWidth = _ref.maxWidth,\n        maxWidth = _ref$maxWidth === void 0 ? INF : _ref$maxWidth,\n        direction = _ref.direction,\n        _ref$textAlign = _ref.textAlign,\n        textAlign = _ref$textAlign === void 0 ? 'left' : _ref$textAlign,\n        _ref$textIndent = _ref.textIndent,\n        textIndent = _ref$textIndent === void 0 ? 0 : _ref$textIndent,\n        _ref$whiteSpace = _ref.whiteSpace,\n        whiteSpace = _ref$whiteSpace === void 0 ? 'normal' : _ref$whiteSpace,\n        _ref$overflowWrap = _ref.overflowWrap,\n        overflowWrap = _ref$overflowWrap === void 0 ? 'normal' : _ref$overflowWrap,\n        _ref$anchorX = _ref.anchorX,\n        anchorX = _ref$anchorX === void 0 ? 0 : _ref$anchorX,\n        _ref$anchorY = _ref.anchorY,\n        anchorY = _ref$anchorY === void 0 ? 0 : _ref$anchorY,\n        _ref$includeCaretPosi = _ref.includeCaretPositions,\n        includeCaretPositions = _ref$includeCaretPosi === void 0 ? false : _ref$includeCaretPosi,\n        _ref$chunkedBoundsSiz = _ref.chunkedBoundsSize,\n        chunkedBoundsSize = _ref$chunkedBoundsSiz === void 0 ? 8192 : _ref$chunkedBoundsSiz,\n        _ref$colorRanges = _ref.colorRanges,\n        colorRanges = _ref$colorRanges === void 0 ? null : _ref$colorRanges;\n    var metricsOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var mainStart = now();\n    var timings = {\n      fontLoad: 0,\n      typesetting: 0\n    }; // Ensure newlines are normalized\n\n    if (text.indexOf('\\r') > -1) {\n      console.info('Typesetter: got text with \\\\r chars; normalizing to \\\\n');\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    } // Ensure we've got numbers not strings\n\n\n    fontSize = +fontSize;\n    letterSpacing = +letterSpacing;\n    maxWidth = +maxWidth;\n    lineHeight = lineHeight || 'normal';\n    textIndent = +textIndent;\n    loadFont(font, function (fontObj) {\n      var hasMaxWidth = isFinite(maxWidth);\n      var glyphIds = null;\n      var glyphPositions = null;\n      var glyphData = null;\n      var glyphColors = null;\n      var caretPositions = null;\n      var visibleBounds = null;\n      var chunkedBounds = null;\n      var maxLineWidth = 0;\n      var renderableGlyphCount = 0;\n      var canWrap = whiteSpace !== 'nowrap';\n      var ascender = fontObj.ascender,\n          descender = fontObj.descender,\n          unitsPerEm = fontObj.unitsPerEm;\n      timings.fontLoad = now() - mainStart;\n      var typesetStart = now(); // Find conversion between native font units and fontSize units; this will already be done\n      // for the gx/gy values below but everything else we'll need to convert\n\n      var fontSizeMult = fontSize / unitsPerEm; // Determine appropriate value for 'normal' line height based on the font's actual metrics\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n\n      if (lineHeight === 'normal') {\n        lineHeight = (ascender - descender) / unitsPerEm;\n      } // Determine line height and leading adjustments\n\n\n      lineHeight = lineHeight * fontSize;\n      var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n      var topBaseline = -(ascender * fontSizeMult + halfLeading);\n      var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n      var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2; // Distribute glyphs into lines based on wrapping\n\n      var lineXOffset = textIndent;\n      var currentLine = new TextLine();\n      var lines = [currentLine];\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n        var _char = text.charAt(charIndex);\n\n        var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n        var curLineCount = currentLine.count;\n        var nextLine; // Calc isWhitespace and isEmpty once per glyphObj\n\n        if (!('isEmpty' in glyphObj)) {\n          glyphObj.isWhitespace = !!_char && /\\s/.test(_char);\n          glyphObj.canBreakAfter = !!_char && BREAK_AFTER_CHARS.test(_char);\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax || DEFAULT_IGNORABLE_CHARS.test(_char);\n        }\n\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n          renderableGlyphCount++;\n        } // If a non-whitespace character overflows the max width, we need to soft-wrap\n\n\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n          // If it's the first char after a whitespace, start a new line\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.canBreakAfter) {\n            nextLine = new TextLine();\n            lineXOffset = -glyphX;\n          } else {\n            // Back up looking for a whitespace character to wrap at\n            for (var i = curLineCount; i--;) {\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n              if (i === 0 && overflowWrap === 'break-word') {\n                nextLine = new TextLine();\n                lineXOffset = -glyphX;\n                break;\n              } // Found a soft break point; move all chars since it to a new line\n              else if (currentLine.glyphAt(i).glyphObj.canBreakAfter) {\n                  nextLine = currentLine.splitAt(i + 1);\n                  var adjustX = nextLine.glyphAt(0).x;\n                  lineXOffset -= adjustX;\n\n                  for (var j = nextLine.count; j--;) {\n                    nextLine.glyphAt(j).x -= adjustX;\n                  }\n\n                  break;\n                }\n            }\n          }\n\n          if (nextLine) {\n            currentLine.isSoftWrapped = true;\n            currentLine = nextLine;\n            lines.push(currentLine);\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n          }\n        }\n\n        var fly = currentLine.glyphAt(currentLine.count);\n        fly.glyphObj = glyphObj;\n        fly.x = glyphX + lineXOffset;\n        fly.width = glyphWidth;\n        fly.charIndex = charIndex; // Handle hard line breaks\n\n        if (_char === '\\n') {\n          currentLine = new TextLine();\n          lines.push(currentLine);\n          lineXOffset = -(glyphX + glyphWidth + letterSpacing * fontSize) + textIndent;\n        }\n      }); // Calculate width of each line (excluding trailing whitespace) and maximum block width\n\n      lines.forEach(function (line) {\n        for (var i = line.count; i--;) {\n          var _line$glyphAt = line.glyphAt(i),\n              glyphObj = _line$glyphAt.glyphObj,\n              x = _line$glyphAt.x,\n              width = _line$glyphAt.width;\n\n          if (!glyphObj.isWhitespace) {\n            line.width = x + width;\n\n            if (line.width > maxLineWidth) {\n              maxLineWidth = line.width;\n            }\n\n            return;\n          }\n        }\n      }); // Find overall position adjustments for anchoring\n\n      var anchorXOffset = 0;\n      var anchorYOffset = 0;\n\n      if (anchorX) {\n        if (typeof anchorX === 'number') {\n          anchorXOffset = -anchorX;\n        } else if (typeof anchorX === 'string') {\n          anchorXOffset = -maxLineWidth * (anchorX === 'left' ? 0 : anchorX === 'center' ? 0.5 : anchorX === 'right' ? 1 : parsePercent(anchorX));\n        }\n      }\n\n      if (anchorY) {\n        if (typeof anchorY === 'number') {\n          anchorYOffset = -anchorY;\n        } else if (typeof anchorY === 'string') {\n          var height = lines.length * lineHeight;\n          anchorYOffset = anchorY === 'top' ? 0 : anchorY === 'top-baseline' ? -topBaseline : anchorY === 'middle' ? height / 2 : anchorY === 'bottom' ? height : anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult : parsePercent(anchorY) * height;\n        }\n      }\n\n      if (!metricsOnly) {\n        // Resolve bidi levels\n        var bidiLevelsResult = bidi.getEmbeddingLevels(text, direction); // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n        // collecting all renderable glyphs into a single collection.\n\n        glyphIds = new Uint16Array(renderableGlyphCount);\n        glyphPositions = new Float32Array(renderableGlyphCount * 2);\n        glyphData = {};\n        visibleBounds = [INF, INF, -INF, -INF];\n        chunkedBounds = [];\n        var lineYOffset = topBaseline;\n\n        if (includeCaretPositions) {\n          caretPositions = new Float32Array(text.length * 3);\n        }\n\n        if (colorRanges) {\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\n        }\n\n        var renderableGlyphIndex = 0;\n        var prevCharIndex = -1;\n        var colorCharIndex = -1;\n        var chunk;\n        var currentColor;\n        lines.forEach(function (line, lineIndex) {\n          var lineGlyphCount = line.count,\n              lineWidth = line.width; // Ignore empty lines\n\n          if (lineGlyphCount > 0) {\n            // Count trailing whitespaces, we want to ignore these for certain things\n            var trailingWhitespaceCount = 0;\n\n            for (var i = lineGlyphCount; i-- && line.glyphAt(i).glyphObj.isWhitespace;) {\n              trailingWhitespaceCount++;\n            } // Apply horizontal alignment adjustments\n\n\n            var _lineXOffset = 0;\n            var justifyAdjust = 0;\n\n            if (textAlign === 'center') {\n              _lineXOffset = (maxLineWidth - lineWidth) / 2;\n            } else if (textAlign === 'right') {\n              _lineXOffset = maxLineWidth - lineWidth;\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\n              // count non-trailing whitespace characters, and we'll adjust the offsets per character in the next loop\n              var whitespaceCount = 0;\n\n              for (var _i2 = lineGlyphCount - trailingWhitespaceCount; _i2--;) {\n                if (line.glyphAt(_i2).glyphObj.isWhitespace) {\n                  whitespaceCount++;\n                }\n              }\n\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n            }\n\n            if (justifyAdjust || _lineXOffset) {\n              var justifyOffset = 0;\n\n              for (var _i3 = 0; _i3 < lineGlyphCount; _i3++) {\n                var glyphInfo = line.glyphAt(_i3);\n                var _glyphObj = glyphInfo.glyphObj;\n                glyphInfo.x += _lineXOffset + justifyOffset; // Expand non-trailing whitespaces for justify alignment\n\n                if (justifyAdjust !== 0 && _glyphObj.isWhitespace && _i3 < lineGlyphCount - trailingWhitespaceCount) {\n                  justifyOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n              }\n            } // Perform bidi range flipping\n\n\n            var flips = bidi.getReorderSegments(text, bidiLevelsResult, line.glyphAt(0).charIndex, line.glyphAt(line.count - 1).charIndex);\n\n            for (var fi = 0; fi < flips.length; fi++) {\n              var _flips$fi = _slicedToArray(flips[fi], 2),\n                  start = _flips$fi[0],\n                  end = _flips$fi[1]; // Map start/end string indices to indices in the line\n\n\n              var left = Infinity,\n                  right = -Infinity;\n\n              for (var _i4 = 0; _i4 < lineGlyphCount; _i4++) {\n                if (line.glyphAt(_i4).charIndex >= start) {\n                  // gte to handle removed characters\n                  var startInLine = _i4,\n                      endInLine = _i4;\n\n                  for (; endInLine < lineGlyphCount; endInLine++) {\n                    var info = line.glyphAt(endInLine);\n\n                    if (info.charIndex > end) {\n                      break;\n                    }\n\n                    if (endInLine < lineGlyphCount - trailingWhitespaceCount) {\n                      //don't include trailing ws in flip width\n                      left = Math.min(left, info.x);\n                      right = Math.max(right, info.x + info.width);\n                    }\n                  }\n\n                  for (var j = startInLine; j < endInLine; j++) {\n                    var _glyphInfo = line.glyphAt(j);\n\n                    _glyphInfo.x = right - (_glyphInfo.x + _glyphInfo.width - left);\n                  }\n\n                  break;\n                }\n              }\n            } // Assemble final data arrays\n\n\n            var glyphObj;\n\n            var setGlyphObj = function setGlyphObj(g) {\n              return glyphObj = g;\n            };\n\n            for (var _i5 = 0; _i5 < lineGlyphCount; _i5++) {\n              var _glyphInfo2 = line.glyphAt(_i5);\n\n              glyphObj = _glyphInfo2.glyphObj;\n              var glyphId = glyphObj.index; // Replace mirrored characters in rtl\n\n              var rtl = bidiLevelsResult.levels[_glyphInfo2.charIndex] & 1; //odd level means rtl\n\n              if (rtl) {\n                var mirrored = bidi.getMirroredCharacter(text[_glyphInfo2.charIndex]);\n\n                if (mirrored) {\n                  fontObj.forEachGlyph(mirrored, 0, 0, setGlyphObj);\n                }\n              } // Add caret positions\n\n\n              if (includeCaretPositions) {\n                var charIndex = _glyphInfo2.charIndex;\n                var caretLeft = _glyphInfo2.x + anchorXOffset;\n                var caretRight = _glyphInfo2.x + _glyphInfo2.width + anchorXOffset;\n                caretPositions[charIndex * 3] = rtl ? caretRight : caretLeft; //start edge x\n\n                caretPositions[charIndex * 3 + 1] = rtl ? caretLeft : caretRight; //end edge x\n\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n                // If we skipped any chars from the previous glyph (due to ligature subs), fill in caret\n                // positions for those missing char indices; currently this uses a best-guess by dividing\n                // the ligature's width evenly. In the future we may try to use the font's LigatureCaretList\n                // table to get better interior caret positions.\n\n                var ligCount = charIndex - prevCharIndex;\n\n                if (ligCount > 1) {\n                  fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n                }\n\n                prevCharIndex = charIndex;\n              } // Track current color range\n\n\n              if (colorRanges) {\n                var _charIndex = _glyphInfo2.charIndex;\n\n                while (_charIndex > colorCharIndex) {\n                  colorCharIndex++;\n\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                    currentColor = colorRanges[colorCharIndex];\n                  }\n                }\n              } // Get atlas data for renderable glyphs\n\n\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                var idx = renderableGlyphIndex++; // Add this glyph's path data\n\n                if (!glyphData[glyphId]) {\n                  glyphData[glyphId] = {\n                    path: glyphObj.path,\n                    pathBounds: [glyphObj.xMin, glyphObj.yMin, glyphObj.xMax, glyphObj.yMax]\n                  };\n                } // Determine final glyph position and add to glyphPositions array\n\n\n                var glyphX = _glyphInfo2.x + anchorXOffset;\n                var glyphY = lineYOffset + anchorYOffset;\n                glyphPositions[idx * 2] = glyphX;\n                glyphPositions[idx * 2 + 1] = glyphY; // Track total visible bounds\n\n                var visX0 = glyphX + glyphObj.xMin * fontSizeMult;\n                var visY0 = glyphY + glyphObj.yMin * fontSizeMult;\n                var visX1 = glyphX + glyphObj.xMax * fontSizeMult;\n                var visY1 = glyphY + glyphObj.yMax * fontSizeMult;\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1; // Track bounding rects for each chunk of N glyphs\n\n                if (idx % chunkedBoundsSize === 0) {\n                  chunk = {\n                    start: idx,\n                    end: idx,\n                    rect: [INF, INF, -INF, -INF]\n                  };\n                  chunkedBounds.push(chunk);\n                }\n\n                chunk.end++;\n                var chunkRect = chunk.rect;\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1; // Add to glyph ids array\n\n                glyphIds[idx] = glyphId; // Add colors\n\n                if (colorRanges) {\n                  var _start = idx * 3;\n\n                  glyphColors[_start] = currentColor >> 16 & 255;\n                  glyphColors[_start + 1] = currentColor >> 8 & 255;\n                  glyphColors[_start + 2] = currentColor & 255;\n                }\n              }\n            }\n          } // Increment y offset for next line\n\n\n          lineYOffset -= lineHeight;\n        }); // Fill in remaining caret positions in case the final character was a ligature\n\n        if (caretPositions) {\n          var ligCount = text.length - prevCharIndex;\n\n          if (ligCount > 1) {\n            fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n          }\n        }\n      } // Timing stats\n\n\n      timings.typesetting = now() - typesetStart;\n      callback({\n        glyphIds: glyphIds,\n        //font indices for each glyph\n        glyphPositions: glyphPositions,\n        //x,y of each glyph's origin in layout\n        glyphData: glyphData,\n        //dict holding data about each glyph appearing in the text\n        caretPositions: caretPositions,\n        //startX,endX,bottomY caret positions for each char\n        caretHeight: caretHeight,\n        //height of cursor from bottom to top\n        glyphColors: glyphColors,\n        //color for each glyph, if color ranges supplied\n        chunkedBounds: chunkedBounds,\n        //total rects per (n=chunkedBoundsSize) consecutive glyphs\n        fontSize: fontSize,\n        //calculated em height\n        unitsPerEm: unitsPerEm,\n        //font units per em\n        ascender: ascender * fontSizeMult,\n        //font ascender\n        descender: descender * fontSizeMult,\n        //font descender\n        lineHeight: lineHeight,\n        //computed line height\n        topBaseline: topBaseline,\n        //y coordinate of the top line's baseline\n        blockBounds: [//bounds for the whole block of text, including vertical padding for lineHeight\n        anchorXOffset, anchorYOffset - lines.length * lineHeight, anchorXOffset + maxLineWidth, anchorYOffset],\n        visibleBounds: visibleBounds,\n        //total bounds of visible text paths, may be larger or smaller than totalBounds\n        timings: timings\n      });\n    });\n  }\n  /**\n   * For a given text string and font parameters, determine the resulting block dimensions\n   * after wrapping for the given maxWidth.\n   * @param args\n   * @param callback\n   */\n\n\n  function measure(args, callback) {\n    typeset(args, function (result) {\n      var _result$blockBounds = _slicedToArray(result.blockBounds, 4),\n          x0 = _result$blockBounds[0],\n          y0 = _result$blockBounds[1],\n          x1 = _result$blockBounds[2],\n          y1 = _result$blockBounds[3];\n\n      callback({\n        width: x1 - x0,\n        height: y1 - y0\n      });\n    }, {\n      metricsOnly: true\n    });\n  }\n\n  function parsePercent(str) {\n    var match = str.match(/^([\\d.]+)%$/);\n    var pct = match ? parseFloat(match[1]) : NaN;\n    return isNaN(pct) ? 0 : pct / 100;\n  }\n\n  function fillLigatureCaretPositions(caretPositions, ligStartIndex, ligCount) {\n    var ligStartX = caretPositions[ligStartIndex * 3];\n    var ligEndX = caretPositions[ligStartIndex * 3 + 1];\n    var ligY = caretPositions[ligStartIndex * 3 + 2];\n    var guessedAdvanceX = (ligEndX - ligStartX) / ligCount;\n\n    for (var i = 0; i < ligCount; i++) {\n      var startIndex = (ligStartIndex + i) * 3;\n      caretPositions[startIndex] = ligStartX + guessedAdvanceX * i;\n      caretPositions[startIndex + 1] = ligStartX + guessedAdvanceX * (i + 1);\n      caretPositions[startIndex + 2] = ligY;\n    }\n  }\n\n  function now() {\n    return (self.performance || Date).now();\n  } // Array-backed structure for a single line's glyphs data\n\n\n  function TextLine() {\n    this.data = [];\n  }\n\n  var textLineProps = ['glyphObj', 'x', 'width', 'charIndex'];\n  TextLine.prototype = {\n    width: 0,\n    isSoftWrapped: false,\n\n    get count() {\n      return Math.ceil(this.data.length / textLineProps.length);\n    },\n\n    glyphAt: function glyphAt(i) {\n      var fly = TextLine.flyweight;\n      fly.data = this.data;\n      fly.index = i;\n      return fly;\n    },\n    splitAt: function splitAt(i) {\n      var newLine = new TextLine();\n      newLine.data = this.data.splice(i * textLineProps.length);\n      return newLine;\n    }\n  };\n  TextLine.flyweight = textLineProps.reduce(function (obj, prop, i, all) {\n    Object.defineProperty(obj, prop, {\n      get: function get() {\n        return this.data[this.index * textLineProps.length + i];\n      },\n      set: function set(val) {\n        this.data[this.index * textLineProps.length + i] = val;\n      }\n    });\n    return obj;\n  }, {\n    data: null,\n    index: 0\n  });\n  return {\n    typeset: typeset,\n    measure: measure,\n    loadFont: loadFont\n  };\n}\n/**\n * Index for performing fast spatial searches of a glyph's line segments.\n * @return {{addLineSegment:function, findNearestSignedDistance:function}}\n */\n\n\nfunction createGlyphSegmentsIndex(bounds) {\n  var needsSort = false;\n  var segments = [];\n\n  function sortSegments() {\n    if (needsSort) {\n      // sort by maxX, this will let us short-circuit some loops below\n      segments.sort(function (a, b) {\n        return a.maxX - b.maxX;\n      });\n      needsSort = false;\n    }\n  }\n  /**\n   * Add a line segment to the index.\n   * @param x0\n   * @param y0\n   * @param x1\n   * @param y1\n   */\n\n\n  function addLineSegment(x0, y0, x1, y1) {\n    var segment = {\n      x0: x0,\n      y0: y0,\n      x1: x1,\n      y1: y1,\n      minX: Math.min(x0, x1),\n      minY: Math.min(y0, y1),\n      maxX: Math.max(x0, x1),\n      maxY: Math.max(y0, y1)\n    };\n    segments.push(segment);\n    needsSort = true;\n  }\n  /**\n   * For a given x/y, search the index for the closest line segment and return\n   * its signed distance. Negative = inside, positive = outside, zero = on edge\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n\n\n  function findNearestSignedDistance(x, y) {\n    sortSegments();\n    var closestDistSq = Infinity;\n    var closestDist = Infinity;\n\n    for (var i = segments.length; i--;) {\n      var seg = segments[i];\n      if (seg.maxX + closestDist <= x) break; //sorting by maxX means no more can be closer, so we can short-circuit\n\n      if (x + closestDist > seg.minX && y - closestDist < seg.maxY && y + closestDist > seg.minY) {\n        var distSq = absSquareDistanceToLineSegment(x, y, seg.x0, seg.y0, seg.x1, seg.y1);\n\n        if (distSq < closestDistSq) {\n          closestDistSq = distSq;\n          closestDist = Math.sqrt(closestDistSq);\n        }\n      }\n    } // Flip to negative distance if inside the poly\n\n\n    if (isPointInPoly(x, y)) {\n      closestDist = -closestDist;\n    }\n\n    return closestDist;\n  } // Determine whether the given point lies inside or outside the glyph. Uses a simple\n  // ray casting algorithm using a ray pointing east from the point.\n\n\n  function isPointInPoly(x, y) {\n    sortSegments();\n    var inside = false;\n\n    for (var i = segments.length; i--;) {\n      var seg = segments[i];\n      if (seg.maxX <= x) break; //sorting by maxX means no more can cross, so we can short-circuit\n\n      if (seg.minY < y && seg.maxY > y) {\n        var intersects = seg.y0 > y !== seg.y1 > y && x < (seg.x1 - seg.x0) * (y - seg.y0) / (seg.y1 - seg.y0) + seg.x0;\n\n        if (intersects) {\n          inside = !inside;\n        }\n      }\n    }\n\n    return inside;\n  } // Find the absolute distance from a point to a line segment at closest approach\n\n\n  function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n    var ldx = lineX1 - lineX0;\n    var ldy = lineY1 - lineY0;\n    var lengthSq = ldx * ldx + ldy * ldy;\n    var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n    var dx = x - (lineX0 + t * ldx);\n    var dy = y - (lineY0 + t * ldy);\n    return dx * dx + dy * dy;\n  }\n\n  return {\n    addLineSegment: addLineSegment,\n    findNearestSignedDistance: findNearestSignedDistance\n  };\n}\n/*!\nCustom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.\nOriginal MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE\n*/\n\n\nfunction typrFactory() {\n  return \"undefined\" == typeof window && (self.window = self), function (r) {\n    var e = {\n      parse: function parse(r) {\n        var t = e._bin,\n            a = new Uint8Array(r);\n\n        if (\"ttcf\" == t.readASCII(a, 0, 4)) {\n          var n = 4;\n          t.readUshort(a, n), n += 2, t.readUshort(a, n), n += 2;\n          var o = t.readUint(a, n);\n          n += 4;\n\n          for (var s = [], i = 0; i < o; i++) {\n            var h = t.readUint(a, n);\n            n += 4, s.push(e._readFont(a, h));\n          }\n\n          return s;\n        }\n\n        return [e._readFont(a, 0)];\n      },\n      _readFont: function _readFont(r, t) {\n        var a = e._bin,\n            n = t;\n        a.readFixed(r, t), t += 4;\n        var o = a.readUshort(r, t);\n        t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2;\n\n        for (var s = [\"cmap\", \"head\", \"hhea\", \"maxp\", \"hmtx\", \"name\", \"OS/2\", \"post\", \"loca\", \"glyf\", \"kern\", \"CFF \", \"GPOS\", \"GSUB\", \"SVG \"], i = {\n          _data: r,\n          _offset: n\n        }, h = {}, f = 0; f < o; f++) {\n          var d = a.readASCII(r, t, 4);\n          t += 4, a.readUint(r, t), t += 4;\n          var l = a.readUint(r, t);\n          t += 4;\n          var u = a.readUint(r, t);\n          t += 4, h[d] = {\n            offset: l,\n            length: u\n          };\n        }\n\n        for (f = 0; f < s.length; f++) {\n          var v = s[f];\n          h[v] && (i[v.trim()] = e[v.trim()].parse(r, h[v].offset, h[v].length, i));\n        }\n\n        return i;\n      },\n      _tabOffset: function _tabOffset(r, t, a) {\n        for (var n = e._bin, o = n.readUshort(r, a + 4), s = a + 12, i = 0; i < o; i++) {\n          var h = n.readASCII(r, s, 4);\n          s += 4, n.readUint(r, s), s += 4;\n          var f = n.readUint(r, s);\n          if (s += 4, n.readUint(r, s), s += 4, h == t) return f;\n        }\n\n        return 0;\n      }\n    };\n    e._bin = {\n      readFixed: function readFixed(r, e) {\n        return (r[e] << 8 | r[e + 1]) + (r[e + 2] << 8 | r[e + 3]) / 65540;\n      },\n      readF2dot14: function readF2dot14(r, t) {\n        return e._bin.readShort(r, t) / 16384;\n      },\n      readInt: function readInt(r, t) {\n        return e._bin._view(r).getInt32(t);\n      },\n      readInt8: function readInt8(r, t) {\n        return e._bin._view(r).getInt8(t);\n      },\n      readShort: function readShort(r, t) {\n        return e._bin._view(r).getInt16(t);\n      },\n      readUshort: function readUshort(r, t) {\n        return e._bin._view(r).getUint16(t);\n      },\n      readUshorts: function readUshorts(r, t, a) {\n        for (var n = [], o = 0; o < a; o++) {\n          n.push(e._bin.readUshort(r, t + 2 * o));\n        }\n\n        return n;\n      },\n      readUint: function readUint(r, t) {\n        return e._bin._view(r).getUint32(t);\n      },\n      readUint64: function readUint64(r, t) {\n        return 4294967296 * e._bin.readUint(r, t) + e._bin.readUint(r, t + 4);\n      },\n      readASCII: function readASCII(r, e, t) {\n        for (var a = \"\", n = 0; n < t; n++) {\n          a += String.fromCharCode(r[e + n]);\n        }\n\n        return a;\n      },\n      readUnicode: function readUnicode(r, e, t) {\n        for (var a = \"\", n = 0; n < t; n++) {\n          var o = r[e++] << 8 | r[e++];\n          a += String.fromCharCode(o);\n        }\n\n        return a;\n      },\n      _tdec: \"undefined\" != typeof window && window.TextDecoder ? new window.TextDecoder() : null,\n      readUTF8: function readUTF8(r, t, a) {\n        var n = e._bin._tdec;\n        return n && 0 == t && a == r.length ? n.decode(r) : e._bin.readASCII(r, t, a);\n      },\n      readBytes: function readBytes(r, e, t) {\n        for (var a = [], n = 0; n < t; n++) {\n          a.push(r[e + n]);\n        }\n\n        return a;\n      },\n      readASCIIArray: function readASCIIArray(r, e, t) {\n        for (var a = [], n = 0; n < t; n++) {\n          a.push(String.fromCharCode(r[e + n]));\n        }\n\n        return a;\n      },\n      _view: function _view(r) {\n        return r._dataView || (r._dataView = r.buffer ? new DataView(r.buffer, r.byteOffset, r.byteLength) : new DataView(new Uint8Array(r).buffer));\n      }\n    }, e._lctf = {}, e._lctf.parse = function (r, t, a, n, o) {\n      var s = e._bin,\n          i = {},\n          h = t;\n      s.readFixed(r, t), t += 4;\n      var f = s.readUshort(r, t);\n      t += 2;\n      var d = s.readUshort(r, t);\n      t += 2;\n      var l = s.readUshort(r, t);\n      return t += 2, i.scriptList = e._lctf.readScriptList(r, h + f), i.featureList = e._lctf.readFeatureList(r, h + d), i.lookupList = e._lctf.readLookupList(r, h + l, o), i;\n    }, e._lctf.readLookupList = function (r, t, a) {\n      var n = e._bin,\n          o = t,\n          s = [],\n          i = n.readUshort(r, t);\n      t += 2;\n\n      for (var h = 0; h < i; h++) {\n        var f = n.readUshort(r, t);\n        t += 2;\n\n        var d = e._lctf.readLookupTable(r, o + f, a);\n\n        s.push(d);\n      }\n\n      return s;\n    }, e._lctf.readLookupTable = function (r, t, a) {\n      var n = e._bin,\n          o = t,\n          s = {\n        tabs: []\n      };\n      s.ltype = n.readUshort(r, t), t += 2, s.flag = n.readUshort(r, t), t += 2;\n      var i = n.readUshort(r, t);\n      t += 2;\n\n      for (var h = s.ltype, f = 0; f < i; f++) {\n        var d = n.readUshort(r, t);\n        t += 2;\n        var l = a(r, h, o + d, s);\n        s.tabs.push(l);\n      }\n\n      return s;\n    }, e._lctf.numOfOnes = function (r) {\n      for (var e = 0, t = 0; t < 32; t++) {\n        0 != (r >>> t & 1) && e++;\n      }\n\n      return e;\n    }, e._lctf.readClassDef = function (r, t) {\n      var a = e._bin,\n          n = [],\n          o = a.readUshort(r, t);\n\n      if (t += 2, 1 == o) {\n        var s = a.readUshort(r, t);\n        t += 2;\n        var i = a.readUshort(r, t);\n        t += 2;\n\n        for (var h = 0; h < i; h++) {\n          n.push(s + h), n.push(s + h), n.push(a.readUshort(r, t)), t += 2;\n        }\n      }\n\n      if (2 == o) {\n        var f = a.readUshort(r, t);\n        t += 2;\n\n        for (h = 0; h < f; h++) {\n          n.push(a.readUshort(r, t)), t += 2, n.push(a.readUshort(r, t)), t += 2, n.push(a.readUshort(r, t)), t += 2;\n        }\n      }\n\n      return n;\n    }, e._lctf.getInterval = function (r, e) {\n      for (var t = 0; t < r.length; t += 3) {\n        var a = r[t],\n            n = r[t + 1];\n        if (r[t + 2], a <= e && e <= n) return t;\n      }\n\n      return -1;\n    }, e._lctf.readCoverage = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.fmt = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      return t += 2, 1 == n.fmt && (n.tab = a.readUshorts(r, t, o)), 2 == n.fmt && (n.tab = a.readUshorts(r, t, 3 * o)), n;\n    }, e._lctf.coverageIndex = function (r, t) {\n      var a = r.tab;\n      if (1 == r.fmt) return a.indexOf(t);\n\n      if (2 == r.fmt) {\n        var n = e._lctf.getInterval(a, t);\n\n        if (-1 != n) return a[n + 2] + (t - a[n]);\n      }\n\n      return -1;\n    }, e._lctf.readFeatureList = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readASCII(r, t, 4);\n        t += 4;\n        var f = a.readUshort(r, t);\n        t += 2;\n\n        var d = e._lctf.readFeatureTable(r, n + f);\n\n        d.tag = h.trim(), o.push(d);\n      }\n\n      return o;\n    }, e._lctf.readFeatureTable = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2, s > 0 && (o.featureParams = n + s);\n      var i = a.readUshort(r, t);\n      t += 2, o.tab = [];\n\n      for (var h = 0; h < i; h++) {\n        o.tab.push(a.readUshort(r, t + 2 * h));\n      }\n\n      return o;\n    }, e._lctf.readScriptList = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readASCII(r, t, 4);\n        t += 4;\n        var f = a.readUshort(r, t);\n        t += 2, o[h.trim()] = e._lctf.readScriptTable(r, n + f);\n      }\n\n      return o;\n    }, e._lctf.readScriptTable = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {},\n          s = a.readUshort(r, t);\n      t += 2, o[\"default\"] = e._lctf.readLangSysTable(r, n + s);\n      var i = a.readUshort(r, t);\n      t += 2;\n\n      for (var h = 0; h < i; h++) {\n        var f = a.readASCII(r, t, 4);\n        t += 4;\n        var d = a.readUshort(r, t);\n        t += 2, o[f.trim()] = e._lctf.readLangSysTable(r, n + d);\n      }\n\n      return o;\n    }, e._lctf.readLangSysTable = function (r, t) {\n      var a = e._bin,\n          n = {};\n      a.readUshort(r, t), t += 2, n.reqFeature = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      return t += 2, n.features = a.readUshorts(r, t, o), n;\n    }, e.CFF = {}, e.CFF.parse = function (r, t, a) {\n      var n = e._bin;\n      (r = new Uint8Array(r.buffer, t, a))[t = 0], r[++t], r[++t], r[++t], t++;\n      var o = [];\n      t = e.CFF.readIndex(r, t, o);\n\n      for (var s = [], i = 0; i < o.length - 1; i++) {\n        s.push(n.readASCII(r, t + o[i], o[i + 1] - o[i]));\n      }\n\n      t += o[o.length - 1];\n      var h = [];\n      t = e.CFF.readIndex(r, t, h);\n      var f = [];\n\n      for (i = 0; i < h.length - 1; i++) {\n        f.push(e.CFF.readDict(r, t + h[i], t + h[i + 1]));\n      }\n\n      t += h[h.length - 1];\n      var d = f[0],\n          l = [];\n      t = e.CFF.readIndex(r, t, l);\n      var u = [];\n\n      for (i = 0; i < l.length - 1; i++) {\n        u.push(n.readASCII(r, t + l[i], l[i + 1] - l[i]));\n      }\n\n      if (t += l[l.length - 1], e.CFF.readSubrs(r, t, d), d.CharStrings) {\n        t = d.CharStrings;\n        l = [];\n        t = e.CFF.readIndex(r, t, l);\n        var v = [];\n\n        for (i = 0; i < l.length - 1; i++) {\n          v.push(n.readBytes(r, t + l[i], l[i + 1] - l[i]));\n        }\n\n        d.CharStrings = v;\n      }\n\n      if (d.ROS) {\n        t = d.FDArray;\n        var c = [];\n        t = e.CFF.readIndex(r, t, c), d.FDArray = [];\n\n        for (i = 0; i < c.length - 1; i++) {\n          var p = e.CFF.readDict(r, t + c[i], t + c[i + 1]);\n          e.CFF._readFDict(r, p, u), d.FDArray.push(p);\n        }\n\n        t += c[c.length - 1], t = d.FDSelect, d.FDSelect = [];\n        var U = r[t];\n        if (t++, 3 != U) throw U;\n        var g = n.readUshort(r, t);\n        t += 2;\n\n        for (i = 0; i < g + 1; i++) {\n          d.FDSelect.push(n.readUshort(r, t), r[t + 2]), t += 3;\n        }\n      }\n\n      return d.Encoding && (d.Encoding = e.CFF.readEncoding(r, d.Encoding, d.CharStrings.length)), d.charset && (d.charset = e.CFF.readCharset(r, d.charset, d.CharStrings.length)), e.CFF._readFDict(r, d, u), d;\n    }, e.CFF._readFDict = function (r, t, a) {\n      var n;\n\n      for (var o in t.Private && (n = t.Private[1], t.Private = e.CFF.readDict(r, n, n + t.Private[0]), t.Private.Subrs && e.CFF.readSubrs(r, n + t.Private.Subrs, t.Private)), t) {\n        -1 != [\"FamilyName\", \"FontName\", \"FullName\", \"Notice\", \"version\", \"Copyright\"].indexOf(o) && (t[o] = a[t[o] - 426 + 35]);\n      }\n    }, e.CFF.readSubrs = function (r, t, a) {\n      var n = e._bin,\n          o = [];\n      t = e.CFF.readIndex(r, t, o);\n      var s,\n          i = o.length;\n      s = i < 1240 ? 107 : i < 33900 ? 1131 : 32768, a.Bias = s, a.Subrs = [];\n\n      for (var h = 0; h < o.length - 1; h++) {\n        a.Subrs.push(n.readBytes(r, t + o[h], o[h + 1] - o[h]));\n      }\n    }, e.CFF.tableSE = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0, 124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134, 135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0, 0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0], e.CFF.glyphByUnicode = function (r, e) {\n      for (var t = 0; t < r.charset.length; t++) {\n        if (r.charset[t] == e) return t;\n      }\n\n      return -1;\n    }, e.CFF.glyphBySE = function (r, t) {\n      return t < 0 || t > 255 ? -1 : e.CFF.glyphByUnicode(r, e.CFF.tableSE[t]);\n    }, e.CFF.readEncoding = function (r, t, a) {\n      e._bin;\n      var n = [\".notdef\"],\n          o = r[t];\n      if (t++, 0 != o) throw \"error: unknown encoding format: \" + o;\n      var s = r[t];\n      t++;\n\n      for (var i = 0; i < s; i++) {\n        n.push(r[t + i]);\n      }\n\n      return n;\n    }, e.CFF.readCharset = function (r, t, a) {\n      var n = e._bin,\n          o = [\".notdef\"],\n          s = r[t];\n      if (t++, 0 == s) for (var i = 0; i < a; i++) {\n        var h = n.readUshort(r, t);\n        t += 2, o.push(h);\n      } else {\n        if (1 != s && 2 != s) throw \"error: format: \" + s;\n\n        for (; o.length < a;) {\n          h = n.readUshort(r, t);\n          t += 2;\n          var f = 0;\n          1 == s ? (f = r[t], t++) : (f = n.readUshort(r, t), t += 2);\n\n          for (i = 0; i <= f; i++) {\n            o.push(h), h++;\n          }\n        }\n      }\n      return o;\n    }, e.CFF.readIndex = function (r, t, a) {\n      var n = e._bin,\n          o = n.readUshort(r, t) + 1,\n          s = r[t += 2];\n      if (t++, 1 == s) for (var i = 0; i < o; i++) {\n        a.push(r[t + i]);\n      } else if (2 == s) for (i = 0; i < o; i++) {\n        a.push(n.readUshort(r, t + 2 * i));\n      } else if (3 == s) for (i = 0; i < o; i++) {\n        a.push(16777215 & n.readUint(r, t + 3 * i - 1));\n      } else if (1 != o) throw \"unsupported offset size: \" + s + \", count: \" + o;\n      return (t += o * s) - 1;\n    }, e.CFF.getCharString = function (r, t, a) {\n      var n = e._bin,\n          o = r[t],\n          s = r[t + 1];\n      r[t + 2], r[t + 3], r[t + 4];\n      var i = 1,\n          h = null,\n          f = null;\n      o <= 20 && (h = o, i = 1), 12 == o && (h = 100 * o + s, i = 2), 21 <= o && o <= 27 && (h = o, i = 1), 28 == o && (f = n.readShort(r, t + 1), i = 3), 29 <= o && o <= 31 && (h = o, i = 1), 32 <= o && o <= 246 && (f = o - 139, i = 1), 247 <= o && o <= 250 && (f = 256 * (o - 247) + s + 108, i = 2), 251 <= o && o <= 254 && (f = 256 * -(o - 251) - s - 108, i = 2), 255 == o && (f = n.readInt(r, t + 1) / 65535, i = 5), a.val = null != f ? f : \"o\" + h, a.size = i;\n    }, e.CFF.readCharString = function (r, t, a) {\n      for (var n = t + a, o = e._bin, s = []; t < n;) {\n        var i = r[t],\n            h = r[t + 1];\n        r[t + 2], r[t + 3], r[t + 4];\n        var f = 1,\n            d = null,\n            l = null;\n        i <= 20 && (d = i, f = 1), 12 == i && (d = 100 * i + h, f = 2), 19 != i && 20 != i || (d = i, f = 2), 21 <= i && i <= 27 && (d = i, f = 1), 28 == i && (l = o.readShort(r, t + 1), f = 3), 29 <= i && i <= 31 && (d = i, f = 1), 32 <= i && i <= 246 && (l = i - 139, f = 1), 247 <= i && i <= 250 && (l = 256 * (i - 247) + h + 108, f = 2), 251 <= i && i <= 254 && (l = 256 * -(i - 251) - h - 108, f = 2), 255 == i && (l = o.readInt(r, t + 1) / 65535, f = 5), s.push(null != l ? l : \"o\" + d), t += f;\n      }\n\n      return s;\n    }, e.CFF.readDict = function (r, t, a) {\n      for (var n = e._bin, o = {}, s = []; t < a;) {\n        var i = r[t],\n            h = r[t + 1];\n        r[t + 2], r[t + 3], r[t + 4];\n        var f = 1,\n            d = null,\n            l = null;\n        if (28 == i && (l = n.readShort(r, t + 1), f = 3), 29 == i && (l = n.readInt(r, t + 1), f = 5), 32 <= i && i <= 246 && (l = i - 139, f = 1), 247 <= i && i <= 250 && (l = 256 * (i - 247) + h + 108, f = 2), 251 <= i && i <= 254 && (l = 256 * -(i - 251) - h - 108, f = 2), 255 == i) throw l = n.readInt(r, t + 1) / 65535, f = 5, \"unknown number\";\n\n        if (30 == i) {\n          var u = [];\n\n          for (f = 1;;) {\n            var v = r[t + f];\n            f++;\n            var c = v >> 4,\n                p = 15 & v;\n            if (15 != c && u.push(c), 15 != p && u.push(p), 15 == p) break;\n          }\n\n          for (var U = \"\", g = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", \"e\", \"e-\", \"reserved\", \"-\", \"endOfNumber\"], S = 0; S < u.length; S++) {\n            U += g[u[S]];\n          }\n\n          l = parseFloat(U);\n        }\n\n        if (i <= 21) if (d = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\", \"FamilyOtherBlues\", \"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \"defaultWidthX\", \"nominalWidthX\"][i], f = 1, 12 == i) d = [\"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\", \"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0, 0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\", \"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0, 0, 0, 0, 0, 0, \"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"][h], f = 2;\n        null != d ? (o[d] = 1 == s.length ? s[0] : s, s = []) : s.push(l), t += f;\n      }\n\n      return o;\n    }, e.cmap = {}, e.cmap.parse = function (r, t, a) {\n      r = new Uint8Array(r.buffer, t, a), t = 0;\n      var n = e._bin,\n          o = {};\n      n.readUshort(r, t), t += 2;\n      var s = n.readUshort(r, t);\n      t += 2;\n      var i = [];\n      o.tables = [];\n\n      for (var h = 0; h < s; h++) {\n        var f = n.readUshort(r, t);\n        t += 2;\n        var d = n.readUshort(r, t);\n        t += 2;\n        var l = n.readUint(r, t);\n        t += 4;\n        var u = \"p\" + f + \"e\" + d,\n            v = i.indexOf(l);\n\n        if (-1 == v) {\n          var c;\n          v = o.tables.length, i.push(l);\n          var p = n.readUshort(r, l);\n          0 == p ? c = e.cmap.parse0(r, l) : 4 == p ? c = e.cmap.parse4(r, l) : 6 == p ? c = e.cmap.parse6(r, l) : 12 == p ? c = e.cmap.parse12(r, l) : console.debug(\"unknown format: \" + p, f, d, l), o.tables.push(c);\n        }\n\n        if (null != o[u]) throw \"multiple tables for one platform+encoding\";\n        o[u] = v;\n      }\n\n      return o;\n    }, e.cmap.parse0 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2, a.readUshort(r, t), t += 2, n.map = [];\n\n      for (var s = 0; s < o - 6; s++) {\n        n.map.push(r[t + s]);\n      }\n\n      return n;\n    }, e.cmap.parse4 = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = {};\n      o.format = a.readUshort(r, t), t += 2;\n      var s = a.readUshort(r, t);\n      t += 2, a.readUshort(r, t), t += 2;\n      var i = a.readUshort(r, t);\n      t += 2;\n      var h = i / 2;\n      o.searchRange = a.readUshort(r, t), t += 2, o.entrySelector = a.readUshort(r, t), t += 2, o.rangeShift = a.readUshort(r, t), t += 2, o.endCount = a.readUshorts(r, t, h), t += 2 * h, t += 2, o.startCount = a.readUshorts(r, t, h), t += 2 * h, o.idDelta = [];\n\n      for (var f = 0; f < h; f++) {\n        o.idDelta.push(a.readShort(r, t)), t += 2;\n      }\n\n      for (o.idRangeOffset = a.readUshorts(r, t, h), t += 2 * h, o.glyphIdArray = []; t < n + s;) {\n        o.glyphIdArray.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return o;\n    }, e.cmap.parse6 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, a.readUshort(r, t), t += 2, n.firstCode = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2, n.glyphIdArray = [];\n\n      for (var s = 0; s < o; s++) {\n        n.glyphIdArray.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return n;\n    }, e.cmap.parse12 = function (r, t) {\n      var a = e._bin,\n          n = {};\n      n.format = a.readUshort(r, t), t += 2, t += 2, a.readUint(r, t), t += 4, a.readUint(r, t), t += 4;\n      var o = a.readUint(r, t);\n      t += 4, n.groups = [];\n\n      for (var s = 0; s < o; s++) {\n        var i = t + 12 * s,\n            h = a.readUint(r, i + 0),\n            f = a.readUint(r, i + 4),\n            d = a.readUint(r, i + 8);\n        n.groups.push([h, f, d]);\n      }\n\n      return n;\n    }, e.glyf = {}, e.glyf.parse = function (r, e, t, a) {\n      for (var n = [], o = 0; o < a.maxp.numGlyphs; o++) {\n        n.push(null);\n      }\n\n      return n;\n    }, e.glyf._parseGlyf = function (r, t) {\n      var a = e._bin,\n          n = r._data,\n          o = e._tabOffset(n, \"glyf\", r._offset) + r.loca[t];\n      if (r.loca[t] == r.loca[t + 1]) return null;\n      var s = {};\n      if (s.noc = a.readShort(n, o), o += 2, s.xMin = a.readShort(n, o), o += 2, s.yMin = a.readShort(n, o), o += 2, s.xMax = a.readShort(n, o), o += 2, s.yMax = a.readShort(n, o), o += 2, s.xMin >= s.xMax || s.yMin >= s.yMax) return null;\n\n      if (s.noc > 0) {\n        s.endPts = [];\n\n        for (var i = 0; i < s.noc; i++) {\n          s.endPts.push(a.readUshort(n, o)), o += 2;\n        }\n\n        var h = a.readUshort(n, o);\n        if (o += 2, n.length - o < h) return null;\n        s.instructions = a.readBytes(n, o, h), o += h;\n        var f = s.endPts[s.noc - 1] + 1;\n        s.flags = [];\n\n        for (i = 0; i < f; i++) {\n          var d = n[o];\n\n          if (o++, s.flags.push(d), 0 != (8 & d)) {\n            var l = n[o];\n            o++;\n\n            for (var u = 0; u < l; u++) {\n              s.flags.push(d), i++;\n            }\n          }\n        }\n\n        s.xs = [];\n\n        for (i = 0; i < f; i++) {\n          var v = 0 != (2 & s.flags[i]),\n              c = 0 != (16 & s.flags[i]);\n          v ? (s.xs.push(c ? n[o] : -n[o]), o++) : c ? s.xs.push(0) : (s.xs.push(a.readShort(n, o)), o += 2);\n        }\n\n        s.ys = [];\n\n        for (i = 0; i < f; i++) {\n          v = 0 != (4 & s.flags[i]), c = 0 != (32 & s.flags[i]);\n          v ? (s.ys.push(c ? n[o] : -n[o]), o++) : c ? s.ys.push(0) : (s.ys.push(a.readShort(n, o)), o += 2);\n        }\n\n        var p = 0,\n            U = 0;\n\n        for (i = 0; i < f; i++) {\n          p += s.xs[i], U += s.ys[i], s.xs[i] = p, s.ys[i] = U;\n        }\n      } else {\n        var g;\n        s.parts = [];\n\n        do {\n          g = a.readUshort(n, o), o += 2;\n          var S = {\n            m: {\n              a: 1,\n              b: 0,\n              c: 0,\n              d: 1,\n              tx: 0,\n              ty: 0\n            },\n            p1: -1,\n            p2: -1\n          };\n\n          if (s.parts.push(S), S.glyphIndex = a.readUshort(n, o), o += 2, 1 & g) {\n            var m = a.readShort(n, o);\n            o += 2;\n            var b = a.readShort(n, o);\n            o += 2;\n          } else {\n            m = a.readInt8(n, o);\n            o++;\n            b = a.readInt8(n, o);\n            o++;\n          }\n\n          2 & g ? (S.m.tx = m, S.m.ty = b) : (S.p1 = m, S.p2 = b), 8 & g ? (S.m.a = S.m.d = a.readF2dot14(n, o), o += 2) : 64 & g ? (S.m.a = a.readF2dot14(n, o), o += 2, S.m.d = a.readF2dot14(n, o), o += 2) : 128 & g && (S.m.a = a.readF2dot14(n, o), o += 2, S.m.b = a.readF2dot14(n, o), o += 2, S.m.c = a.readF2dot14(n, o), o += 2, S.m.d = a.readF2dot14(n, o), o += 2);\n        } while (32 & g);\n\n        if (256 & g) {\n          var y = a.readUshort(n, o);\n          o += 2, s.instr = [];\n\n          for (i = 0; i < y; i++) {\n            s.instr.push(n[o]), o++;\n          }\n        }\n      }\n\n      return s;\n    }, e.GPOS = {}, e.GPOS.parse = function (r, t, a, n) {\n      return e._lctf.parse(r, t, a, n, e.GPOS.subt);\n    }, e.GPOS.subt = function (r, t, a, n) {\n      var o = e._bin,\n          s = a,\n          i = {};\n\n      if (i.fmt = o.readUshort(r, a), a += 2, 1 == t || 2 == t || 3 == t || 7 == t || 8 == t && i.fmt <= 2) {\n        var h = o.readUshort(r, a);\n        a += 2, i.coverage = e._lctf.readCoverage(r, h + s);\n      }\n\n      if (1 == t && 1 == i.fmt) {\n        var f = o.readUshort(r, a);\n        a += 2;\n\n        var d = e._lctf.numOfOnes(f);\n\n        0 != f && (i.pos = e.GPOS.readValueRecord(r, a, f));\n      } else if (2 == t && i.fmt >= 1 && i.fmt <= 2) {\n        f = o.readUshort(r, a);\n        a += 2;\n        var l = o.readUshort(r, a);\n        a += 2;\n        d = e._lctf.numOfOnes(f);\n\n        var u = e._lctf.numOfOnes(l);\n\n        if (1 == i.fmt) {\n          i.pairsets = [];\n          var v = o.readUshort(r, a);\n          a += 2;\n\n          for (var c = 0; c < v; c++) {\n            var p = s + o.readUshort(r, a);\n            a += 2;\n            var U = o.readUshort(r, p);\n            p += 2;\n\n            for (var g = [], S = 0; S < U; S++) {\n              var m = o.readUshort(r, p);\n              p += 2, 0 != f && (x = e.GPOS.readValueRecord(r, p, f), p += 2 * d), 0 != l && (P = e.GPOS.readValueRecord(r, p, l), p += 2 * u), g.push({\n                gid2: m,\n                val1: x,\n                val2: P\n              });\n            }\n\n            i.pairsets.push(g);\n          }\n        }\n\n        if (2 == i.fmt) {\n          var b = o.readUshort(r, a);\n          a += 2;\n          var y = o.readUshort(r, a);\n          a += 2;\n          var F = o.readUshort(r, a);\n          a += 2;\n\n          var _ = o.readUshort(r, a);\n\n          a += 2, i.classDef1 = e._lctf.readClassDef(r, s + b), i.classDef2 = e._lctf.readClassDef(r, s + y), i.matrix = [];\n\n          for (c = 0; c < F; c++) {\n            var C = [];\n\n            for (S = 0; S < _; S++) {\n              var x = null,\n                  P = null;\n              0 != f && (x = e.GPOS.readValueRecord(r, a, f), a += 2 * d), 0 != l && (P = e.GPOS.readValueRecord(r, a, l), a += 2 * u), C.push({\n                val1: x,\n                val2: P\n              });\n            }\n\n            i.matrix.push(C);\n          }\n        }\n      } else {\n        if (9 == t && 1 == i.fmt) {\n          var I = o.readUshort(r, a);\n          a += 2;\n          var w = o.readUint(r, a);\n          if (a += 4, 9 == n.ltype) n.ltype = I;else if (n.ltype != I) throw \"invalid extension substitution\";\n          return e.GPOS.subt(r, n.ltype, s + w);\n        }\n\n        console.debug(\"unsupported GPOS table LookupType\", t, \"format\", i.fmt);\n      }\n\n      return i;\n    }, e.GPOS.readValueRecord = function (r, t, a) {\n      var n = e._bin,\n          o = [];\n      return o.push(1 & a ? n.readShort(r, t) : 0), t += 1 & a ? 2 : 0, o.push(2 & a ? n.readShort(r, t) : 0), t += 2 & a ? 2 : 0, o.push(4 & a ? n.readShort(r, t) : 0), t += 4 & a ? 2 : 0, o.push(8 & a ? n.readShort(r, t) : 0), t += 8 & a ? 2 : 0, o;\n    }, e.GSUB = {}, e.GSUB.parse = function (r, t, a, n) {\n      return e._lctf.parse(r, t, a, n, e.GSUB.subt);\n    }, e.GSUB.subt = function (r, t, a, n) {\n      var o = e._bin,\n          s = a,\n          i = {};\n      if (i.fmt = o.readUshort(r, a), a += 2, 1 != t && 4 != t && 5 != t && 6 != t) return null;\n\n      if (1 == t || 4 == t || 5 == t && i.fmt <= 2 || 6 == t && i.fmt <= 2) {\n        var h = o.readUshort(r, a);\n        a += 2, i.coverage = e._lctf.readCoverage(r, s + h);\n      }\n\n      if (1 == t && i.fmt >= 1 && i.fmt <= 2) {\n        if (1 == i.fmt) i.delta = o.readShort(r, a), a += 2;else if (2 == i.fmt) {\n          var f = o.readUshort(r, a);\n          a += 2, i.newg = o.readUshorts(r, a, f), a += 2 * i.newg.length;\n        }\n      } else if (4 == t) {\n        i.vals = [];\n        f = o.readUshort(r, a);\n        a += 2;\n\n        for (var d = 0; d < f; d++) {\n          var l = o.readUshort(r, a);\n          a += 2, i.vals.push(e.GSUB.readLigatureSet(r, s + l));\n        }\n      } else if (5 == t && 2 == i.fmt) {\n        if (2 == i.fmt) {\n          var u = o.readUshort(r, a);\n          a += 2, i.cDef = e._lctf.readClassDef(r, s + u), i.scset = [];\n          var v = o.readUshort(r, a);\n          a += 2;\n\n          for (d = 0; d < v; d++) {\n            var c = o.readUshort(r, a);\n            a += 2, i.scset.push(0 == c ? null : e.GSUB.readSubClassSet(r, s + c));\n          }\n        }\n      } else if (6 == t && 3 == i.fmt) {\n        if (3 == i.fmt) {\n          for (d = 0; d < 3; d++) {\n            f = o.readUshort(r, a);\n            a += 2;\n\n            for (var p = [], U = 0; U < f; U++) {\n              p.push(e._lctf.readCoverage(r, s + o.readUshort(r, a + 2 * U)));\n            }\n\n            a += 2 * f, 0 == d && (i.backCvg = p), 1 == d && (i.inptCvg = p), 2 == d && (i.ahedCvg = p);\n          }\n\n          f = o.readUshort(r, a);\n          a += 2, i.lookupRec = e.GSUB.readSubstLookupRecords(r, a, f);\n        }\n      } else {\n        if (7 == t && 1 == i.fmt) {\n          var g = o.readUshort(r, a);\n          a += 2;\n          var S = o.readUint(r, a);\n          if (a += 4, 9 == n.ltype) n.ltype = g;else if (n.ltype != g) throw \"invalid extension substitution\";\n          return e.GSUB.subt(r, n.ltype, s + S);\n        }\n\n        console.debug(\"unsupported GSUB table LookupType\", t, \"format\", i.fmt);\n      }\n\n      return i;\n    }, e.GSUB.readSubClassSet = function (r, t) {\n      var a = e._bin.readUshort,\n          n = t,\n          o = [],\n          s = a(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a(r, t);\n        t += 2, o.push(e.GSUB.readSubClassRule(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readSubClassRule = function (r, t) {\n      var a = e._bin.readUshort,\n          n = {},\n          o = a(r, t),\n          s = a(r, t += 2);\n      t += 2, n.input = [];\n\n      for (var i = 0; i < o - 1; i++) {\n        n.input.push(a(r, t)), t += 2;\n      }\n\n      return n.substLookupRecords = e.GSUB.readSubstLookupRecords(r, t, s), n;\n    }, e.GSUB.readSubstLookupRecords = function (r, t, a) {\n      for (var n = e._bin.readUshort, o = [], s = 0; s < a; s++) {\n        o.push(n(r, t), n(r, t + 2)), t += 4;\n      }\n\n      return o;\n    }, e.GSUB.readChainSubClassSet = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readUshort(r, t);\n        t += 2, o.push(e.GSUB.readChainSubClassRule(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readChainSubClassRule = function (r, t) {\n      for (var a = e._bin, n = {}, o = [\"backtrack\", \"input\", \"lookahead\"], s = 0; s < o.length; s++) {\n        var i = a.readUshort(r, t);\n        t += 2, 1 == s && i--, n[o[s]] = a.readUshorts(r, t, i), t += 2 * n[o[s]].length;\n      }\n\n      i = a.readUshort(r, t);\n      return t += 2, n.subst = a.readUshorts(r, t, 2 * i), t += 2 * n.subst.length, n;\n    }, e.GSUB.readLigatureSet = function (r, t) {\n      var a = e._bin,\n          n = t,\n          o = [],\n          s = a.readUshort(r, t);\n      t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = a.readUshort(r, t);\n        t += 2, o.push(e.GSUB.readLigature(r, n + h));\n      }\n\n      return o;\n    }, e.GSUB.readLigature = function (r, t) {\n      var a = e._bin,\n          n = {\n        chain: []\n      };\n      n.nglyph = a.readUshort(r, t), t += 2;\n      var o = a.readUshort(r, t);\n      t += 2;\n\n      for (var s = 0; s < o - 1; s++) {\n        n.chain.push(a.readUshort(r, t)), t += 2;\n      }\n\n      return n;\n    }, e.head = {}, e.head.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return n.readFixed(r, t), t += 4, o.fontRevision = n.readFixed(r, t), t += 4, n.readUint(r, t), t += 4, n.readUint(r, t), t += 4, o.flags = n.readUshort(r, t), t += 2, o.unitsPerEm = n.readUshort(r, t), t += 2, o.created = n.readUint64(r, t), t += 8, o.modified = n.readUint64(r, t), t += 8, o.xMin = n.readShort(r, t), t += 2, o.yMin = n.readShort(r, t), t += 2, o.xMax = n.readShort(r, t), t += 2, o.yMax = n.readShort(r, t), t += 2, o.macStyle = n.readUshort(r, t), t += 2, o.lowestRecPPEM = n.readUshort(r, t), t += 2, o.fontDirectionHint = n.readShort(r, t), t += 2, o.indexToLocFormat = n.readShort(r, t), t += 2, o.glyphDataFormat = n.readShort(r, t), t += 2, o;\n    }, e.hhea = {}, e.hhea.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return n.readFixed(r, t), t += 4, o.ascender = n.readShort(r, t), t += 2, o.descender = n.readShort(r, t), t += 2, o.lineGap = n.readShort(r, t), t += 2, o.advanceWidthMax = n.readUshort(r, t), t += 2, o.minLeftSideBearing = n.readShort(r, t), t += 2, o.minRightSideBearing = n.readShort(r, t), t += 2, o.xMaxExtent = n.readShort(r, t), t += 2, o.caretSlopeRise = n.readShort(r, t), t += 2, o.caretSlopeRun = n.readShort(r, t), t += 2, o.caretOffset = n.readShort(r, t), t += 2, t += 8, o.metricDataFormat = n.readShort(r, t), t += 2, o.numberOfHMetrics = n.readUshort(r, t), t += 2, o;\n    }, e.hmtx = {}, e.hmtx.parse = function (r, t, a, n) {\n      for (var o = e._bin, s = {\n        aWidth: [],\n        lsBearing: []\n      }, i = 0, h = 0, f = 0; f < n.maxp.numGlyphs; f++) {\n        f < n.hhea.numberOfHMetrics && (i = o.readUshort(r, t), t += 2, h = o.readShort(r, t), t += 2), s.aWidth.push(i), s.lsBearing.push(h);\n      }\n\n      return s;\n    }, e.kern = {}, e.kern.parse = function (r, t, a, n) {\n      var o = e._bin,\n          s = o.readUshort(r, t);\n      if (t += 2, 1 == s) return e.kern.parseV1(r, t - 2, a, n);\n      var i = o.readUshort(r, t);\n      t += 2;\n\n      for (var h = {\n        glyph1: [],\n        rval: []\n      }, f = 0; f < i; f++) {\n        t += 2;\n        a = o.readUshort(r, t);\n        t += 2;\n        var d = o.readUshort(r, t);\n        t += 2;\n        var l = d >>> 8;\n        if (0 != (l &= 15)) throw \"unknown kern table format: \" + l;\n        t = e.kern.readFormat0(r, t, h);\n      }\n\n      return h;\n    }, e.kern.parseV1 = function (r, t, a, n) {\n      var o = e._bin;\n      o.readFixed(r, t), t += 4;\n      var s = o.readUint(r, t);\n      t += 4;\n\n      for (var i = {\n        glyph1: [],\n        rval: []\n      }, h = 0; h < s; h++) {\n        o.readUint(r, t), t += 4;\n        var f = o.readUshort(r, t);\n        t += 2, o.readUshort(r, t), t += 2;\n        var d = f >>> 8;\n        if (0 != (d &= 15)) throw \"unknown kern table format: \" + d;\n        t = e.kern.readFormat0(r, t, i);\n      }\n\n      return i;\n    }, e.kern.readFormat0 = function (r, t, a) {\n      var n = e._bin,\n          o = -1,\n          s = n.readUshort(r, t);\n      t += 2, n.readUshort(r, t), t += 2, n.readUshort(r, t), t += 2, n.readUshort(r, t), t += 2;\n\n      for (var i = 0; i < s; i++) {\n        var h = n.readUshort(r, t);\n        t += 2;\n        var f = n.readUshort(r, t);\n        t += 2;\n        var d = n.readShort(r, t);\n        t += 2, h != o && (a.glyph1.push(h), a.rval.push({\n          glyph2: [],\n          vals: []\n        }));\n        var l = a.rval[a.rval.length - 1];\n        l.glyph2.push(f), l.vals.push(d), o = h;\n      }\n\n      return t;\n    }, e.loca = {}, e.loca.parse = function (r, t, a, n) {\n      var o = e._bin,\n          s = [],\n          i = n.head.indexToLocFormat,\n          h = n.maxp.numGlyphs + 1;\n      if (0 == i) for (var f = 0; f < h; f++) {\n        s.push(o.readUshort(r, t + (f << 1)) << 1);\n      }\n      if (1 == i) for (f = 0; f < h; f++) {\n        s.push(o.readUint(r, t + (f << 2)));\n      }\n      return s;\n    }, e.maxp = {}, e.maxp.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {},\n          s = n.readUint(r, t);\n      return t += 4, o.numGlyphs = n.readUshort(r, t), t += 2, 65536 == s && (o.maxPoints = n.readUshort(r, t), t += 2, o.maxContours = n.readUshort(r, t), t += 2, o.maxCompositePoints = n.readUshort(r, t), t += 2, o.maxCompositeContours = n.readUshort(r, t), t += 2, o.maxZones = n.readUshort(r, t), t += 2, o.maxTwilightPoints = n.readUshort(r, t), t += 2, o.maxStorage = n.readUshort(r, t), t += 2, o.maxFunctionDefs = n.readUshort(r, t), t += 2, o.maxInstructionDefs = n.readUshort(r, t), t += 2, o.maxStackElements = n.readUshort(r, t), t += 2, o.maxSizeOfInstructions = n.readUshort(r, t), t += 2, o.maxComponentElements = n.readUshort(r, t), t += 2, o.maxComponentDepth = n.readUshort(r, t), t += 2), o;\n    }, e.name = {}, e.name.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      n.readUshort(r, t), t += 2;\n      var s = n.readUshort(r, t);\n      t += 2, n.readUshort(r, t);\n\n      for (var i, h = [\"copyright\", \"fontFamily\", \"fontSubfamily\", \"ID\", \"fullName\", \"version\", \"postScriptName\", \"trademark\", \"manufacturer\", \"designer\", \"description\", \"urlVendor\", \"urlDesigner\", \"licence\", \"licenceURL\", \"---\", \"typoFamilyName\", \"typoSubfamilyName\", \"compatibleFull\", \"sampleText\", \"postScriptCID\", \"wwsFamilyName\", \"wwsSubfamilyName\", \"lightPalette\", \"darkPalette\"], f = t += 2, d = 0; d < s; d++) {\n        var l = n.readUshort(r, t);\n        t += 2;\n        var u = n.readUshort(r, t);\n        t += 2;\n        var v = n.readUshort(r, t);\n        t += 2;\n        var c = n.readUshort(r, t);\n        t += 2;\n        var p = n.readUshort(r, t);\n        t += 2;\n        var U = n.readUshort(r, t);\n        t += 2;\n        var g,\n            S = h[c],\n            m = f + 12 * s + U;\n        if (0 == l) g = n.readUnicode(r, m, p / 2);else if (3 == l && 0 == u) g = n.readUnicode(r, m, p / 2);else if (0 == u) g = n.readASCII(r, m, p);else if (1 == u) g = n.readUnicode(r, m, p / 2);else if (3 == u) g = n.readUnicode(r, m, p / 2);else {\n          if (1 != l) throw \"unknown encoding \" + u + \", platformID: \" + l;\n          g = n.readASCII(r, m, p), console.debug(\"reading unknown MAC encoding \" + u + \" as ASCII\");\n        }\n        var b = \"p\" + l + \",\" + v.toString(16);\n        null == o[b] && (o[b] = {}), o[b][void 0 !== S ? S : c] = g, o[b]._lang = v;\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 1033 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 0 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName && 3084 == o[y]._lang) return o[y];\n      }\n\n      for (var y in o) {\n        if (null != o[y].postScriptName) return o[y];\n      }\n\n      for (var y in o) {\n        i = y;\n        break;\n      }\n\n      return console.debug(\"returning name table with languageID \" + o[i]._lang), o[i];\n    }, e[\"OS/2\"] = {}, e[\"OS/2\"].parse = function (r, t, a) {\n      var n = e._bin.readUshort(r, t);\n\n      t += 2;\n      var o = {};\n      if (0 == n) e[\"OS/2\"].version0(r, t, o);else if (1 == n) e[\"OS/2\"].version1(r, t, o);else if (2 == n || 3 == n || 4 == n) e[\"OS/2\"].version2(r, t, o);else {\n        if (5 != n) throw \"unknown OS/2 table version: \" + n;\n        e[\"OS/2\"].version5(r, t, o);\n      }\n      return o;\n    }, e[\"OS/2\"].version0 = function (r, t, a) {\n      var n = e._bin;\n      return a.xAvgCharWidth = n.readShort(r, t), t += 2, a.usWeightClass = n.readUshort(r, t), t += 2, a.usWidthClass = n.readUshort(r, t), t += 2, a.fsType = n.readUshort(r, t), t += 2, a.ySubscriptXSize = n.readShort(r, t), t += 2, a.ySubscriptYSize = n.readShort(r, t), t += 2, a.ySubscriptXOffset = n.readShort(r, t), t += 2, a.ySubscriptYOffset = n.readShort(r, t), t += 2, a.ySuperscriptXSize = n.readShort(r, t), t += 2, a.ySuperscriptYSize = n.readShort(r, t), t += 2, a.ySuperscriptXOffset = n.readShort(r, t), t += 2, a.ySuperscriptYOffset = n.readShort(r, t), t += 2, a.yStrikeoutSize = n.readShort(r, t), t += 2, a.yStrikeoutPosition = n.readShort(r, t), t += 2, a.sFamilyClass = n.readShort(r, t), t += 2, a.panose = n.readBytes(r, t, 10), t += 10, a.ulUnicodeRange1 = n.readUint(r, t), t += 4, a.ulUnicodeRange2 = n.readUint(r, t), t += 4, a.ulUnicodeRange3 = n.readUint(r, t), t += 4, a.ulUnicodeRange4 = n.readUint(r, t), t += 4, a.achVendID = [n.readInt8(r, t), n.readInt8(r, t + 1), n.readInt8(r, t + 2), n.readInt8(r, t + 3)], t += 4, a.fsSelection = n.readUshort(r, t), t += 2, a.usFirstCharIndex = n.readUshort(r, t), t += 2, a.usLastCharIndex = n.readUshort(r, t), t += 2, a.sTypoAscender = n.readShort(r, t), t += 2, a.sTypoDescender = n.readShort(r, t), t += 2, a.sTypoLineGap = n.readShort(r, t), t += 2, a.usWinAscent = n.readUshort(r, t), t += 2, a.usWinDescent = n.readUshort(r, t), t += 2;\n    }, e[\"OS/2\"].version1 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version0(r, t, a), a.ulCodePageRange1 = n.readUint(r, t), t += 4, a.ulCodePageRange2 = n.readUint(r, t), t += 4;\n    }, e[\"OS/2\"].version2 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version1(r, t, a), a.sxHeight = n.readShort(r, t), t += 2, a.sCapHeight = n.readShort(r, t), t += 2, a.usDefault = n.readUshort(r, t), t += 2, a.usBreak = n.readUshort(r, t), t += 2, a.usMaxContext = n.readUshort(r, t), t += 2;\n    }, e[\"OS/2\"].version5 = function (r, t, a) {\n      var n = e._bin;\n      return t = e[\"OS/2\"].version2(r, t, a), a.usLowerOpticalPointSize = n.readUshort(r, t), t += 2, a.usUpperOpticalPointSize = n.readUshort(r, t), t += 2;\n    }, e.post = {}, e.post.parse = function (r, t, a) {\n      var n = e._bin,\n          o = {};\n      return o.version = n.readFixed(r, t), t += 4, o.italicAngle = n.readFixed(r, t), t += 4, o.underlinePosition = n.readShort(r, t), t += 2, o.underlineThickness = n.readShort(r, t), t += 2, o;\n    }, null == e && (e = {}), null == e.U && (e.U = {}), e.U.codeToGlyph = function (r, e) {\n      var t = r.cmap,\n          a = -1;\n      if (null != t.p0e4 ? a = t.p0e4 : null != t.p3e1 ? a = t.p3e1 : null != t.p1e0 ? a = t.p1e0 : null != t.p0e3 && (a = t.p0e3), -1 == a) throw \"no familiar platform and encoding!\";\n      var n = t.tables[a];\n      if (0 == n.format) return e >= n.map.length ? 0 : n.map[e];\n\n      if (4 == n.format) {\n        for (var o = -1, s = 0; s < n.endCount.length; s++) {\n          if (e <= n.endCount[s]) {\n            o = s;\n            break;\n          }\n        }\n\n        if (-1 == o) return 0;\n        if (n.startCount[o] > e) return 0;\n        return 65535 & (0 != n.idRangeOffset[o] ? n.glyphIdArray[e - n.startCount[o] + (n.idRangeOffset[o] >> 1) - (n.idRangeOffset.length - o)] : e + n.idDelta[o]);\n      }\n\n      if (12 == n.format) {\n        if (e > n.groups[n.groups.length - 1][1]) return 0;\n\n        for (s = 0; s < n.groups.length; s++) {\n          var i = n.groups[s];\n          if (i[0] <= e && e <= i[1]) return i[2] + (e - i[0]);\n        }\n\n        return 0;\n      }\n\n      throw \"unknown cmap table format \" + n.format;\n    }, e.U.glyphToPath = function (r, t) {\n      var a = {\n        cmds: [],\n        crds: []\n      };\n\n      if (r.SVG && r.SVG.entries[t]) {\n        var n = r.SVG.entries[t];\n        return null == n ? a : (\"string\" == typeof n && (n = e.SVG.toPath(n), r.SVG.entries[t] = n), n);\n      }\n\n      if (r.CFF) {\n        var o = {\n          x: 0,\n          y: 0,\n          stack: [],\n          nStems: 0,\n          haveWidth: !1,\n          width: r.CFF.Private ? r.CFF.Private.defaultWidthX : 0,\n          open: !1\n        },\n            s = r.CFF,\n            i = r.CFF.Private;\n\n        if (s.ROS) {\n          for (var h = 0; s.FDSelect[h + 2] <= t;) {\n            h += 2;\n          }\n\n          i = s.FDArray[s.FDSelect[h + 1]].Private;\n        }\n\n        e.U._drawCFF(r.CFF.CharStrings[t], o, s, i, a);\n      } else r.glyf && e.U._drawGlyf(t, r, a);\n\n      return a;\n    }, e.U._drawGlyf = function (r, t, a) {\n      var n = t.glyf[r];\n      null == n && (n = t.glyf[r] = e.glyf._parseGlyf(t, r)), null != n && (n.noc > -1 ? e.U._simpleGlyph(n, a) : e.U._compoGlyph(n, t, a));\n    }, e.U._simpleGlyph = function (r, t) {\n      for (var a = 0; a < r.noc; a++) {\n        for (var n = 0 == a ? 0 : r.endPts[a - 1] + 1, o = r.endPts[a], s = n; s <= o; s++) {\n          var i = s == n ? o : s - 1,\n              h = s == o ? n : s + 1,\n              f = 1 & r.flags[s],\n              d = 1 & r.flags[i],\n              l = 1 & r.flags[h],\n              u = r.xs[s],\n              v = r.ys[s];\n          if (s == n) if (f) {\n            if (!d) {\n              e.U.P.moveTo(t, u, v);\n              continue;\n            }\n\n            e.U.P.moveTo(t, r.xs[i], r.ys[i]);\n          } else d ? e.U.P.moveTo(t, r.xs[i], r.ys[i]) : e.U.P.moveTo(t, (r.xs[i] + u) / 2, (r.ys[i] + v) / 2);\n          f ? d && e.U.P.lineTo(t, u, v) : l ? e.U.P.qcurveTo(t, u, v, r.xs[h], r.ys[h]) : e.U.P.qcurveTo(t, u, v, (u + r.xs[h]) / 2, (v + r.ys[h]) / 2);\n        }\n\n        e.U.P.closePath(t);\n      }\n    }, e.U._compoGlyph = function (r, t, a) {\n      for (var n = 0; n < r.parts.length; n++) {\n        var o = {\n          cmds: [],\n          crds: []\n        },\n            s = r.parts[n];\n\n        e.U._drawGlyf(s.glyphIndex, t, o);\n\n        for (var i = s.m, h = 0; h < o.crds.length; h += 2) {\n          var f = o.crds[h],\n              d = o.crds[h + 1];\n          a.crds.push(f * i.a + d * i.b + i.tx), a.crds.push(f * i.c + d * i.d + i.ty);\n        }\n\n        for (h = 0; h < o.cmds.length; h++) {\n          a.cmds.push(o.cmds[h]);\n        }\n      }\n    }, e.U._getGlyphClass = function (r, t) {\n      var a = e._lctf.getInterval(t, r);\n\n      return -1 == a ? 0 : t[a + 2];\n    }, e.U.getPairAdjustment = function (r, t, a) {\n      var n = 0;\n      if (r.GPOS) for (var o = r.GPOS, s = o.lookupList, i = o.featureList, h = [], f = 0; f < i.length; f++) {\n        var d = i[f];\n        if (\"kern\" == d.tag) for (var l = 0; l < d.tab.length; l++) {\n          if (!h[d.tab[l]]) {\n            h[d.tab[l]] = !0;\n\n            for (var u = s[d.tab[l]], v = 0; v < u.tabs.length; v++) {\n              if (null != u.tabs[v]) {\n                var c,\n                    p = u.tabs[v];\n                if (!p.coverage || -1 != (c = e._lctf.coverageIndex(p.coverage, t))) if (1 == u.ltype) ;else if (2 == u.ltype) {\n                  var U;\n\n                  if (1 == p.fmt) {\n                    var g = p.pairsets[c];\n\n                    for (f = 0; f < g.length; f++) {\n                      g[f].gid2 == a && (U = g[f]);\n                    }\n                  } else if (2 == p.fmt) {\n                    var S = e.U._getGlyphClass(t, p.classDef1),\n                        m = e.U._getGlyphClass(a, p.classDef2);\n\n                    U = p.matrix[S][m];\n                  }\n\n                  U && U.val1 && U.val1[2] && (n += U.val1[2]), U && U.val2 && U.val2[0] && (n += U.val2[0]);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (r.kern) {\n        var b = r.kern.glyph1.indexOf(t);\n\n        if (-1 != b) {\n          var y = r.kern.rval[b].glyph2.indexOf(a);\n          -1 != y && (n += r.kern.rval[b].vals[y]);\n        }\n      }\n\n      return n;\n    }, e.U._applySubs = function (r, t, a, n) {\n      for (var o = r.length - t - 1, s = 0; s < a.tabs.length; s++) {\n        if (null != a.tabs[s]) {\n          var i,\n              h = a.tabs[s];\n          if (!h.coverage || -1 != (i = e._lctf.coverageIndex(h.coverage, r[t]))) if (1 == a.ltype) r[t], 1 == h.fmt ? r[t] = r[t] + h.delta : r[t] = h.newg[i];else if (4 == a.ltype) for (var f = h.vals[i], d = 0; d < f.length; d++) {\n            var l = f[d],\n                u = l.chain.length;\n\n            if (!(u > o)) {\n              for (var v = !0, c = 0, p = 0; p < u; p++) {\n                for (; -1 == r[t + c + (1 + p)];) {\n                  c++;\n                }\n\n                l.chain[p] != r[t + c + (1 + p)] && (v = !1);\n              }\n\n              if (v) {\n                r[t] = l.nglyph;\n\n                for (p = 0; p < u + c; p++) {\n                  r[t + p + 1] = -1;\n                }\n\n                break;\n              }\n            }\n          } else if (5 == a.ltype && 2 == h.fmt) for (var U = e._lctf.getInterval(h.cDef, r[t]), g = h.cDef[U + 2], S = h.scset[g], m = 0; m < S.length; m++) {\n            var b = S[m],\n                y = b.input;\n\n            if (!(y.length > o)) {\n              for (v = !0, p = 0; p < y.length; p++) {\n                var F = e._lctf.getInterval(h.cDef, r[t + 1 + p]);\n\n                if (-1 == U && h.cDef[F + 2] != y[p]) {\n                  v = !1;\n                  break;\n                }\n              }\n\n              if (v) {\n                var _ = b.substLookupRecords;\n\n                for (d = 0; d < _.length; d += 2) {\n                  _[d], _[d + 1];\n                }\n              }\n            }\n          } else if (6 == a.ltype && 3 == h.fmt) {\n            if (!e.U._glsCovered(r, h.backCvg, t - h.backCvg.length)) continue;\n            if (!e.U._glsCovered(r, h.inptCvg, t)) continue;\n            if (!e.U._glsCovered(r, h.ahedCvg, t + h.inptCvg.length)) continue;\n            var C = h.lookupRec;\n\n            for (m = 0; m < C.length; m += 2) {\n              U = C[m];\n              var x = n[C[m + 1]];\n\n              e.U._applySubs(r, t + U, x, n);\n            }\n          }\n        }\n      }\n    }, e.U._glsCovered = function (r, t, a) {\n      for (var n = 0; n < t.length; n++) {\n        if (-1 == e._lctf.coverageIndex(t[n], r[a + n])) return !1;\n      }\n\n      return !0;\n    }, e.U.glyphsToPath = function (r, t, a) {\n      for (var n = {\n        cmds: [],\n        crds: []\n      }, o = 0, s = 0; s < t.length; s++) {\n        var i = t[s];\n\n        if (-1 != i) {\n          for (var h = s < t.length - 1 && -1 != t[s + 1] ? t[s + 1] : 0, f = e.U.glyphToPath(r, i), d = 0; d < f.crds.length; d += 2) {\n            n.crds.push(f.crds[d] + o), n.crds.push(f.crds[d + 1]);\n          }\n\n          a && n.cmds.push(a);\n\n          for (d = 0; d < f.cmds.length; d++) {\n            n.cmds.push(f.cmds[d]);\n          }\n\n          a && n.cmds.push(\"X\"), o += r.hmtx.aWidth[i], s < t.length - 1 && (o += e.U.getPairAdjustment(r, i, h));\n        }\n      }\n\n      return n;\n    }, e.U.P = {}, e.U.P.moveTo = function (r, e, t) {\n      r.cmds.push(\"M\"), r.crds.push(e, t);\n    }, e.U.P.lineTo = function (r, e, t) {\n      r.cmds.push(\"L\"), r.crds.push(e, t);\n    }, e.U.P.curveTo = function (r, e, t, a, n, o, s) {\n      r.cmds.push(\"C\"), r.crds.push(e, t, a, n, o, s);\n    }, e.U.P.qcurveTo = function (r, e, t, a, n) {\n      r.cmds.push(\"Q\"), r.crds.push(e, t, a, n);\n    }, e.U.P.closePath = function (r) {\n      r.cmds.push(\"Z\");\n    }, e.U._drawCFF = function (r, t, a, n, o) {\n      for (var s = t.stack, i = t.nStems, h = t.haveWidth, f = t.width, d = t.open, l = 0, u = t.x, v = t.y, c = 0, p = 0, U = 0, g = 0, S = 0, m = 0, b = 0, y = 0, F = 0, _ = 0, C = {\n        val: 0,\n        size: 0\n      }; l < r.length;) {\n        e.CFF.getCharString(r, l, C);\n        var x = C.val;\n        if (l += C.size, \"o1\" == x || \"o18\" == x) s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0;else if (\"o3\" == x || \"o23\" == x) {\n          s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0;\n        } else if (\"o4\" == x) s.length > 1 && !h && (f = s.shift() + n.nominalWidthX, h = !0), d && e.U.P.closePath(o), v += s.pop(), e.U.P.moveTo(o, u, v), d = !0;else if (\"o5\" == x) for (; s.length > 0;) {\n          u += s.shift(), v += s.shift(), e.U.P.lineTo(o, u, v);\n        } else if (\"o6\" == x || \"o7\" == x) for (var P = s.length, I = \"o6\" == x, w = 0; w < P; w++) {\n          var O = s.shift();\n          I ? u += O : v += O, I = !I, e.U.P.lineTo(o, u, v);\n        } else if (\"o8\" == x || \"o24\" == x) {\n          P = s.length;\n\n          for (var T = 0; T + 6 <= P;) {\n            c = u + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), u = U + s.shift(), v = g + s.shift(), e.U.P.curveTo(o, c, p, U, g, u, v), T += 6;\n          }\n\n          \"o24\" == x && (u += s.shift(), v += s.shift(), e.U.P.lineTo(o, u, v));\n        } else {\n          if (\"o11\" == x) break;\n          if (\"o1234\" == x || \"o1235\" == x || \"o1236\" == x || \"o1237\" == x) \"o1234\" == x && (p = v, U = (c = u + s.shift()) + s.shift(), _ = g = p + s.shift(), m = g, y = v, u = (b = (S = (F = U + s.shift()) + s.shift()) + s.shift()) + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, u, v)), \"o1235\" == x && (c = u + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), F = U + s.shift(), _ = g + s.shift(), S = F + s.shift(), m = _ + s.shift(), b = S + s.shift(), y = m + s.shift(), u = b + s.shift(), v = y + s.shift(), s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, u, v)), \"o1236\" == x && (c = u + s.shift(), p = v + s.shift(), U = c + s.shift(), _ = g = p + s.shift(), m = g, b = (S = (F = U + s.shift()) + s.shift()) + s.shift(), y = m + s.shift(), u = b + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, u, v)), \"o1237\" == x && (c = u + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), F = U + s.shift(), _ = g + s.shift(), S = F + s.shift(), m = _ + s.shift(), b = S + s.shift(), y = m + s.shift(), Math.abs(b - u) > Math.abs(y - v) ? u = b + s.shift() : v = y + s.shift(), e.U.P.curveTo(o, c, p, U, g, F, _), e.U.P.curveTo(o, S, m, b, y, u, v));else if (\"o14\" == x) {\n            if (s.length > 0 && !h && (f = s.shift() + a.nominalWidthX, h = !0), 4 == s.length) {\n              var k = s.shift(),\n                  G = s.shift(),\n                  D = s.shift(),\n                  B = s.shift(),\n                  L = e.CFF.glyphBySE(a, D),\n                  R = e.CFF.glyphBySE(a, B);\n              e.U._drawCFF(a.CharStrings[L], t, a, n, o), t.x = k, t.y = G, e.U._drawCFF(a.CharStrings[R], t, a, n, o);\n            }\n\n            d && (e.U.P.closePath(o), d = !1);\n          } else if (\"o19\" == x || \"o20\" == x) {\n            s.length % 2 != 0 && !h && (f = s.shift() + n.nominalWidthX), i += s.length >> 1, s.length = 0, h = !0, l += i + 7 >> 3;\n          } else if (\"o21\" == x) s.length > 2 && !h && (f = s.shift() + n.nominalWidthX, h = !0), v += s.pop(), u += s.pop(), d && e.U.P.closePath(o), e.U.P.moveTo(o, u, v), d = !0;else if (\"o22\" == x) s.length > 1 && !h && (f = s.shift() + n.nominalWidthX, h = !0), u += s.pop(), d && e.U.P.closePath(o), e.U.P.moveTo(o, u, v), d = !0;else if (\"o25\" == x) {\n            for (; s.length > 6;) {\n              u += s.shift(), v += s.shift(), e.U.P.lineTo(o, u, v);\n            }\n\n            c = u + s.shift(), p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), u = U + s.shift(), v = g + s.shift(), e.U.P.curveTo(o, c, p, U, g, u, v);\n          } else if (\"o26\" == x) for (s.length % 2 && (u += s.shift()); s.length > 0;) {\n            c = u, p = v + s.shift(), u = U = c + s.shift(), v = (g = p + s.shift()) + s.shift(), e.U.P.curveTo(o, c, p, U, g, u, v);\n          } else if (\"o27\" == x) for (s.length % 2 && (v += s.shift()); s.length > 0;) {\n            p = v, U = (c = u + s.shift()) + s.shift(), g = p + s.shift(), u = U + s.shift(), v = g, e.U.P.curveTo(o, c, p, U, g, u, v);\n          } else if (\"o10\" == x || \"o29\" == x) {\n            var A = \"o10\" == x ? n : a;\n            if (0 == s.length) console.debug(\"error: empty stack\");else {\n              var W = s.pop(),\n                  M = A.Subrs[W + A.Bias];\n              t.x = u, t.y = v, t.nStems = i, t.haveWidth = h, t.width = f, t.open = d, e.U._drawCFF(M, t, a, n, o), u = t.x, v = t.y, i = t.nStems, h = t.haveWidth, f = t.width, d = t.open;\n            }\n          } else if (\"o30\" == x || \"o31\" == x) {\n            var V = s.length,\n                N = (T = 0, \"o31\" == x);\n\n            for (T += V - (P = -3 & V); T < P;) {\n              N ? (p = v, U = (c = u + s.shift()) + s.shift(), v = (g = p + s.shift()) + s.shift(), P - T == 5 ? (u = U + s.shift(), T++) : u = U, N = !1) : (c = u, p = v + s.shift(), U = c + s.shift(), g = p + s.shift(), u = U + s.shift(), P - T == 5 ? (v = g + s.shift(), T++) : v = g, N = !0), e.U.P.curveTo(o, c, p, U, g, u, v), T += 4;\n            }\n          } else {\n            if (\"o\" == (x + \"\").charAt(0)) throw console.debug(\"Unknown operation: \" + x, r), x;\n            s.push(x);\n          }\n        }\n      }\n\n      t.x = u, t.y = v, t.nStems = i, t.haveWidth = h, t.width = f, t.open = d;\n    };\n    var t = e,\n        a = {\n      Typr: t\n    };\n    return r.Typr = t, r[\"default\"] = a, Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r;\n  }({}).Typr;\n}\n/*!\nCustom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate\n(https://github.com/101arrowz/fflate) for use in Troika text rendering. \nOriginal licenses apply: \n- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)\n- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n*/\n\n\nfunction woff2otfFactory() {\n  return function (r) {\n    var e = Uint8Array,\n        n = Uint16Array,\n        t = Uint32Array,\n        a = new e([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]),\n        i = new e([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]),\n        o = new e([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),\n        f = function f(r, e) {\n      for (var a = new n(31), i = 0; i < 31; ++i) {\n        a[i] = e += 1 << r[i - 1];\n      }\n\n      var o = new t(a[30]);\n\n      for (i = 1; i < 30; ++i) {\n        for (var f = a[i]; f < a[i + 1]; ++f) {\n          o[f] = f - a[i] << 5 | i;\n        }\n      }\n\n      return [a, o];\n    },\n        u = f(a, 2),\n        v = u[0],\n        s = u[1];\n\n    v[28] = 258, s[258] = 28;\n\n    for (var l = f(i, 0)[0], c = new n(32768), g = 0; g < 32768; ++g) {\n      var h = (43690 & g) >>> 1 | (21845 & g) << 1;\n      h = (61680 & (h = (52428 & h) >>> 2 | (13107 & h) << 2)) >>> 4 | (3855 & h) << 4, c[g] = ((65280 & h) >>> 8 | (255 & h) << 8) >>> 1;\n    }\n\n    var w = function w(r, e, t) {\n      for (var a = r.length, i = 0, o = new n(e); i < a; ++i) {\n        ++o[r[i] - 1];\n      }\n\n      var f,\n          u = new n(e);\n\n      for (i = 0; i < e; ++i) {\n        u[i] = u[i - 1] + o[i - 1] << 1;\n      }\n\n      if (t) {\n        f = new n(1 << e);\n        var v = 15 - e;\n\n        for (i = 0; i < a; ++i) {\n          if (r[i]) for (var s = i << 4 | r[i], l = e - r[i], g = u[r[i] - 1]++ << l, h = g | (1 << l) - 1; g <= h; ++g) {\n            f[c[g] >>> v] = s;\n          }\n        }\n      } else for (f = new n(a), i = 0; i < a; ++i) {\n        r[i] && (f[i] = c[u[r[i] - 1]++] >>> 15 - r[i]);\n      }\n\n      return f;\n    },\n        d = new e(288);\n\n    for (g = 0; g < 144; ++g) {\n      d[g] = 8;\n    }\n\n    for (g = 144; g < 256; ++g) {\n      d[g] = 9;\n    }\n\n    for (g = 256; g < 280; ++g) {\n      d[g] = 7;\n    }\n\n    for (g = 280; g < 288; ++g) {\n      d[g] = 8;\n    }\n\n    var m = new e(32);\n\n    for (g = 0; g < 32; ++g) {\n      m[g] = 5;\n    }\n\n    var b = w(d, 9, 1),\n        p = w(m, 5, 1),\n        y = function y(r) {\n      for (var e = r[0], n = 1; n < r.length; ++n) {\n        r[n] > e && (e = r[n]);\n      }\n\n      return e;\n    },\n        L = function L(r, e, n) {\n      var t = e / 8 | 0;\n      return (r[t] | r[t + 1] << 8) >> (7 & e) & n;\n    },\n        U = function U(r, e) {\n      var n = e / 8 | 0;\n      return (r[n] | r[n + 1] << 8 | r[n + 2] << 16) >> (7 & e);\n    },\n        k = [\"unexpected EOF\", \"invalid block type\", \"invalid length/literal\", \"invalid distance\", \"stream finished\", \"no stream handler\",, \"no callback\", \"invalid UTF-8 data\", \"extra field too long\", \"date not in range 1980-2099\", \"filename too long\", \"stream finishing\", \"invalid zip data\"],\n        T = function T(r, e, n) {\n      var t = new Error(e || k[r]);\n      if (t.code = r, Error.captureStackTrace && Error.captureStackTrace(t, T), !n) throw t;\n      return t;\n    },\n        O = function O(r, f, u) {\n      var s = r.length;\n      if (!s || u && !u.l && s < 5) return f || new e(0);\n      var c = !f || u,\n          g = !u || u.i;\n      u || (u = {}), f || (f = new e(3 * s));\n\n      var h,\n          d = function d(r) {\n        var n = f.length;\n\n        if (r > n) {\n          var t = new e(Math.max(2 * n, r));\n          t.set(f), f = t;\n        }\n      },\n          m = u.f || 0,\n          k = u.p || 0,\n          O = u.b || 0,\n          A = u.l,\n          x = u.d,\n          E = u.m,\n          D = u.n,\n          M = 8 * s;\n\n      do {\n        if (!A) {\n          u.f = m = L(r, k, 1);\n          var S = L(r, k + 1, 3);\n\n          if (k += 3, !S) {\n            var V = r[(I = ((h = k) / 8 | 0) + (7 & h && 1) + 4) - 4] | r[I - 3] << 8,\n                _ = I + V;\n\n            if (_ > s) {\n              g && T(0);\n              break;\n            }\n\n            c && d(O + V), f.set(r.subarray(I, _), O), u.b = O += V, u.p = k = 8 * _;\n            continue;\n          }\n\n          if (1 == S) A = b, x = p, E = 9, D = 5;else if (2 == S) {\n            var j = L(r, k, 31) + 257,\n                z = L(r, k + 10, 15) + 4,\n                C = j + L(r, k + 5, 31) + 1;\n            k += 14;\n\n            for (var F = new e(C), P = new e(19), q = 0; q < z; ++q) {\n              P[o[q]] = L(r, k + 3 * q, 7);\n            }\n\n            k += 3 * z;\n            var B = y(P),\n                G = (1 << B) - 1,\n                H = w(P, B, 1);\n\n            for (q = 0; q < C;) {\n              var I,\n                  J = H[L(r, k, G)];\n              if (k += 15 & J, (I = J >>> 4) < 16) F[q++] = I;else {\n                var K = 0,\n                    N = 0;\n\n                for (16 == I ? (N = 3 + L(r, k, 3), k += 2, K = F[q - 1]) : 17 == I ? (N = 3 + L(r, k, 7), k += 3) : 18 == I && (N = 11 + L(r, k, 127), k += 7); N--;) {\n                  F[q++] = K;\n                }\n              }\n            }\n\n            var Q = F.subarray(0, j),\n                R = F.subarray(j);\n            E = y(Q), D = y(R), A = w(Q, E, 1), x = w(R, D, 1);\n          } else T(1);\n\n          if (k > M) {\n            g && T(0);\n            break;\n          }\n        }\n\n        c && d(O + 131072);\n\n        for (var W = (1 << E) - 1, X = (1 << D) - 1, Y = k;; Y = k) {\n          var Z = (K = A[U(r, k) & W]) >>> 4;\n\n          if ((k += 15 & K) > M) {\n            g && T(0);\n            break;\n          }\n\n          if (K || T(2), Z < 256) f[O++] = Z;else {\n            if (256 == Z) {\n              Y = k, A = null;\n              break;\n            }\n\n            var $ = Z - 254;\n\n            if (Z > 264) {\n              var rr = a[q = Z - 257];\n              $ = L(r, k, (1 << rr) - 1) + v[q], k += rr;\n            }\n\n            var er = x[U(r, k) & X],\n                nr = er >>> 4;\n            er || T(3), k += 15 & er;\n            R = l[nr];\n\n            if (nr > 3) {\n              rr = i[nr];\n              R += U(r, k) & (1 << rr) - 1, k += rr;\n            }\n\n            if (k > M) {\n              g && T(0);\n              break;\n            }\n\n            c && d(O + 131072);\n\n            for (var tr = O + $; O < tr; O += 4) {\n              f[O] = f[O - R], f[O + 1] = f[O + 1 - R], f[O + 2] = f[O + 2 - R], f[O + 3] = f[O + 3 - R];\n            }\n\n            O = tr;\n          }\n        }\n\n        u.l = A, u.p = Y, u.b = O, A && (m = 1, u.m = E, u.d = x, u.n = D);\n      } while (!m);\n\n      return O == f.length ? f : function (r, a, i) {\n        (null == a || a < 0) && (a = 0), (null == i || i > r.length) && (i = r.length);\n        var o = new (r instanceof n ? n : r instanceof t ? t : e)(i - a);\n        return o.set(r.subarray(a, i)), o;\n      }(f, 0, O);\n    },\n        A = new e(0);\n\n    var x = \"undefined\" != typeof TextDecoder && new TextDecoder();\n\n    try {\n      x.decode(A, {\n        stream: !0\n      }), 1;\n    } catch (r) {}\n\n    return r.convert_streams = function (r) {\n      var e = new DataView(r),\n          n = 0;\n\n      function t() {\n        var r = e.getUint16(n);\n        return n += 2, r;\n      }\n\n      function a() {\n        var r = e.getUint32(n);\n        return n += 4, r;\n      }\n\n      function i(r) {\n        m.setUint16(b, r), b += 2;\n      }\n\n      function o(r) {\n        m.setUint32(b, r), b += 4;\n      }\n\n      for (var f = {\n        signature: a(),\n        flavor: a(),\n        length: a(),\n        numTables: t(),\n        reserved: t(),\n        totalSfntSize: a(),\n        majorVersion: t(),\n        minorVersion: t(),\n        metaOffset: a(),\n        metaLength: a(),\n        metaOrigLength: a(),\n        privOffset: a(),\n        privLength: a()\n      }, u = 0; Math.pow(2, u) <= f.numTables;) {\n        u++;\n      }\n\n      u--;\n\n      for (var v = 16 * Math.pow(2, u), s = 16 * f.numTables - v, l = 12, c = [], g = 0; g < f.numTables; g++) {\n        c.push({\n          tag: a(),\n          offset: a(),\n          compLength: a(),\n          origLength: a(),\n          origChecksum: a()\n        }), l += 16;\n      }\n\n      var h,\n          w = new Uint8Array(12 + 16 * c.length + c.reduce(function (r, e) {\n        return r + e.origLength + 4;\n      }, 0)),\n          d = w.buffer,\n          m = new DataView(d),\n          b = 0;\n      return o(f.flavor), i(f.numTables), i(v), i(u), i(s), c.forEach(function (r) {\n        o(r.tag), o(r.origChecksum), o(l), o(r.origLength), r.outOffset = l, (l += r.origLength) % 4 != 0 && (l += 4 - l % 4);\n      }), c.forEach(function (e) {\n        var n,\n            t = r.slice(e.offset, e.offset + e.compLength);\n\n        if (e.compLength != e.origLength) {\n          var a = new Uint8Array(e.origLength);\n          n = new Uint8Array(t, 2), O(n, a);\n        } else a = new Uint8Array(t);\n\n        w.set(a, e.outOffset);\n        var i = 0;\n        (l = e.outOffset + e.origLength) % 4 != 0 && (i = 4 - l % 4), w.set(new Uint8Array(i).buffer, e.outOffset + e.origLength), h = l + i;\n      }), d.slice(0, h);\n    }, Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r;\n  }({}).convert_streams;\n}\n/**\n * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n * Also adds support for WOFF files (not WOFF2).\n */\n\n\nfunction parserFactory(Typr, woff2otf) {\n  var cmdArgLengths = {\n    M: 2,\n    L: 2,\n    Q: 4,\n    C: 6,\n    Z: 0\n  }; // {joinType: \"skip+step,...\"}\n\n  var joiningTypeRawData = {\n    \"C\": \"18g,ca,368,1kz\",\n    \"D\": \"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v\",\n    \"R\": \"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6\",\n    \"L\": \"x9u,jff,a,fd,jv\",\n    \"T\": \"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n\"\n  };\n  var JT_LEFT = 1,\n      //indicates that a character joins with the subsequent character, but does not join with the preceding character.\n  JT_RIGHT = 2,\n      //indicates that a character joins with the preceding character, but does not join with the subsequent character.\n  JT_DUAL = 4,\n      //indicates that a character joins with the preceding character and joins with the subsequent character.\n  JT_TRANSPARENT = 8,\n      //indicates that the character does not join with adjacent characters and that the character must be skipped over when the shaping engine is evaluating the joining positions in a sequence of characters. When a JT_TRANSPARENT character is encountered in a sequence, the JOINING_TYPE of the preceding character passes through. Diacritical marks are frequently assigned this value.\n  JT_JOIN_CAUSING = 16,\n      //indicates that the character forces the use of joining forms with the preceding and subsequent characters. Kashidas and the Zero Width Joiner (U+200D) are both JOIN_CAUSING characters.\n  JT_NON_JOINING = 32; //indicates that a character does not join with the preceding or with the subsequent character.,\n\n  var joiningTypeMap;\n\n  function getCharJoiningType(ch) {\n    if (!joiningTypeMap) {\n      (function () {\n        var m = {\n          R: JT_RIGHT,\n          L: JT_LEFT,\n          D: JT_DUAL,\n          C: JT_JOIN_CAUSING,\n          U: JT_NON_JOINING,\n          T: JT_TRANSPARENT\n        };\n        joiningTypeMap = new Map();\n\n        var _loop = function _loop(type) {\n          var lastCode = 0;\n          joiningTypeRawData[type].split(',').forEach(function (range) {\n            var _range$split = range.split('+'),\n                _range$split2 = _slicedToArray(_range$split, 2),\n                skip = _range$split2[0],\n                step = _range$split2[1];\n\n            skip = parseInt(skip, 36);\n            step = step ? parseInt(step, 36) : 0;\n            joiningTypeMap.set(lastCode += skip, m[type]);\n\n            for (var i = step; i--;) {\n              joiningTypeMap.set(++lastCode, m[type]);\n            }\n          });\n        };\n\n        for (var type in joiningTypeRawData) {\n          _loop(type);\n        }\n      })();\n    }\n\n    return joiningTypeMap.get(ch) || JT_NON_JOINING;\n  }\n\n  var ISOL = 1,\n      INIT = 2,\n      FINA = 3,\n      MEDI = 4;\n  var formsToFeatures = [null, 'isol', 'init', 'fina', 'medi'];\n\n  function detectJoiningForms(str) {\n    // This implements the algorithm described here:\n    // https://github.com/n8willis/opentype-shaping-documents/blob/master/opentype-shaping-arabic-general.md\n    var joiningForms = new Uint8Array(str.length);\n    var prevJoiningType = JT_NON_JOINING;\n    var prevForm = ISOL;\n    var prevIndex = -1;\n\n    for (var i = 0; i < str.length; i++) {\n      var code = str.codePointAt(i);\n      var joiningType = getCharJoiningType(code) | 0;\n      var form = ISOL;\n\n      if (joiningType & JT_TRANSPARENT) {\n        continue;\n      }\n\n      if (prevJoiningType & (JT_LEFT | JT_DUAL | JT_JOIN_CAUSING)) {\n        if (joiningType & (JT_RIGHT | JT_DUAL | JT_JOIN_CAUSING)) {\n          form = FINA; // isol->init, fina->medi\n\n          if (prevForm === ISOL || prevForm === FINA) {\n            joiningForms[prevIndex]++;\n          }\n        } else if (joiningType & (JT_LEFT | JT_NON_JOINING)) {\n          // medi->fina, init->isol\n          if (prevForm === INIT || prevForm === MEDI) {\n            joiningForms[prevIndex]--;\n          }\n        }\n      } else if (prevJoiningType & (JT_RIGHT | JT_NON_JOINING)) {\n        // medi->fina, init->isol\n        if (prevForm === INIT || prevForm === MEDI) {\n          joiningForms[prevIndex]--;\n        }\n      }\n\n      prevForm = joiningForms[i] = form;\n      prevJoiningType = joiningType;\n      prevIndex = i;\n      if (code > 0xffff) i++;\n    } // console.log(str.split('').map(ch => ch.codePointAt(0).toString(16)))\n    // console.log(str.split('').map(ch => getCharJoiningType(ch.codePointAt(0))))\n    // console.log(Array.from(joiningForms).map(f => formsToFeatures[f] || 'none'))\n\n\n    return joiningForms;\n  }\n\n  function stringToGlyphs(font, str) {\n    var glyphIds = [];\n\n    for (var i = 0; i < str.length; i++) {\n      var cc = str.codePointAt(i);\n      if (cc > 0xffff) i++;\n      glyphIds.push(Typr.U.codeToGlyph(font, cc));\n    }\n\n    var gsub = font['GSUB'];\n\n    if (gsub) {\n      var lookupList = gsub.lookupList,\n          featureList = gsub.featureList;\n      var joiningForms;\n      var supportedFeatures = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/;\n      var usedLookups = [];\n      featureList.forEach(function (feature) {\n        if (supportedFeatures.test(feature.tag)) {\n          for (var ti = 0; ti < feature.tab.length; ti++) {\n            if (usedLookups[feature.tab[ti]]) continue;\n            usedLookups[feature.tab[ti]] = true;\n            var tab = lookupList[feature.tab[ti]];\n            var isJoiningFeature = /^(isol|init|fina|medi)$/.test(feature.tag);\n\n            if (isJoiningFeature && !joiningForms) {\n              //lazy\n              joiningForms = detectJoiningForms(str);\n            }\n\n            for (var ci = 0; ci < glyphIds.length; ci++) {\n              if (!joiningForms || !isJoiningFeature || formsToFeatures[joiningForms[ci]] === feature.tag) {\n                Typr.U._applySubs(glyphIds, ci, tab, lookupList);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return glyphIds;\n  }\n\n  function wrapFontObj(typrFont) {\n    var glyphMap = Object.create(null);\n    var fontObj = {\n      unitsPerEm: typrFont.head.unitsPerEm,\n      ascender: typrFont.hhea.ascender,\n      descender: typrFont.hhea.descender,\n      forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n        var glyphX = 0;\n        var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n        var glyphIndices = stringToGlyphs(typrFont, text);\n        var charIndex = 0;\n        var prevGlyphIndex = -1;\n        glyphIndices.forEach(function (glyphIndex, i) {\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\n          // were omitted due to ligature substitution. So we can track original index in the\n          // string via simple increment, and skip everything else when seeing a -1.\n          if (glyphIndex !== -1) {\n            var glyphObj = glyphMap[glyphIndex];\n\n            if (!glyphObj) {\n              var _Typr$U$glyphToPath = Typr.U.glyphToPath(typrFont, glyphIndex),\n                  cmds = _Typr$U$glyphToPath.cmds,\n                  crds = _Typr$U$glyphToPath.crds; // Build path string\n\n\n              var path = '';\n              var crdsIdx = 0;\n\n              for (var _i6 = 0, len = cmds.length; _i6 < len; _i6++) {\n                var numArgs = cmdArgLengths[cmds[_i6]];\n                path += cmds[_i6];\n\n                for (var j = 1; j <= numArgs; j++) {\n                  path += (j > 1 ? ',' : '') + crds[crdsIdx++];\n                }\n              } // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n              // normalize the two, so it's simplest just to iterate ourselves.\n\n\n              var xMin, yMin, xMax, yMax;\n\n              if (crds.length) {\n                xMin = yMin = Infinity;\n                xMax = yMax = -Infinity;\n\n                for (var _i7 = 0, _len = crds.length; _i7 < _len; _i7 += 2) {\n                  var x = crds[_i7];\n                  var y = crds[_i7 + 1];\n                  if (x < xMin) xMin = x;\n                  if (y < yMin) yMin = y;\n                  if (x > xMax) xMax = x;\n                  if (y > yMax) yMax = y;\n                }\n              } else {\n                xMin = xMax = yMin = yMax = 0;\n              }\n\n              glyphObj = glyphMap[glyphIndex] = {\n                index: glyphIndex,\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                xMin: xMin,\n                yMin: yMin,\n                xMax: xMax,\n                yMax: yMax,\n                path: path,\n                pathCommandCount: cmds.length // forEachPathCommand(callback) {\n                //   let argsIndex = 0\n                //   const argsArray = []\n                //   for (let i = 0, len = cmds.length; i < len; i++) {\n                //     const numArgs = cmdArgLengths[cmds[i]]\n                //     argsArray.length = 1 + numArgs\n                //     argsArray[0] = cmds[i]\n                //     for (let j = 1; j <= numArgs; j++) {\n                //       argsArray[j] = crds[argsIndex++]\n                //     }\n                //     callback.apply(null, argsArray)\n                //   }\n                // }\n\n              };\n            } // Kerning\n\n\n            if (prevGlyphIndex !== -1) {\n              glyphX += Typr.U.getPairAdjustment(typrFont, prevGlyphIndex, glyphIndex) * fontScale;\n            }\n\n            callback.call(null, glyphObj, glyphX, charIndex);\n\n            if (glyphObj.advanceWidth) {\n              glyphX += glyphObj.advanceWidth * fontScale;\n            }\n\n            if (letterSpacing) {\n              glyphX += letterSpacing * fontSize;\n            }\n\n            prevGlyphIndex = glyphIndex;\n          }\n\n          charIndex += text.codePointAt(charIndex) > 0xffff ? 2 : 1;\n        });\n        return glyphX;\n      }\n    };\n    return fontObj;\n  }\n\n  return function parse(buffer) {\n    // Look to see if we have a WOFF file and convert it if so:\n    var peek = new Uint8Array(buffer, 0, 4);\n\n    var tag = Typr._bin.readASCII(peek, 0, 4);\n\n    if (tag === 'wOFF') {\n      buffer = woff2otf(buffer);\n    } else if (tag === 'wOF2') {\n      throw new Error('woff2 fonts not supported');\n    }\n\n    return wrapFontObj(Typr.parse(buffer)[0]);\n  };\n}\n\nvar workerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typr Font Parser',\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\n  init: function init(typrFactory, woff2otfFactory, parserFactory) {\n    var Typr = typrFactory();\n    var woff2otf = woff2otfFactory();\n    return parserFactory(Typr, woff2otf);\n  }\n}); // import fontParser from './worker/FontParser_OpenType.js'\n\nvar CONFIG = {\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff',\n  //Roboto Regular\n  sdfGlyphSize: 64,\n  sdfMargin: 1 / 16,\n  sdfExponent: 9,\n  textureWidth: 2048\n};\nvar tempColor = /*#__PURE__*/new Color();\nvar hasRequested = false;\n\nfunction now() {\n  return (self.performance || Date).now();\n}\n/**\n * Customizes the text builder configuration. This must be called prior to the first font processing\n * request, and applies to all fonts.\n *\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n *                 to 64 which is generally a good balance of size and quality.\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\n *                 the glyph's path, with lower precision further away. Defaults to 9.\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\n *                 Defaults to 1/16th of the glyph size.\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n *                 2048 which is a safe maximum texture dimension according to the stats at\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n *                 glyph size and/or have an extraordinary number of glyphs.\n */\n\n\nfunction configureTextBuilder(config) {\n  if (hasRequested) {\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\n  } else {\n    assign(CONFIG, config);\n  }\n}\n/**\n * Repository for all font SDF atlas textures\n *\n *   {\n *     [font]: {\n *       sdfTexture: DataTexture\n *     }\n *   }\n */\n\n\nvar atlases = Object.create(null);\n/**\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n * @property {object} parameters - The normalized input arguments to the render call.\n * @property {DataTexture} sdfTexture - The SDF atlas texture.\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n * @property {Float32Array} [caretPositions] - A list of caret positions for all characters in the string; each is\n *           three elements: the starting X, the ending X, and the bottom Y for the caret.\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\n * @property {number} ascender - The font's ascender metric.\n * @property {number} descender - The font's descender metric.\n * @property {number} lineHeight - The final computed lineHeight measurement.\n * @property {number} topBaseline - The y position of the top line's baseline.\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\n *           equivalent to the dimensions of a block-level text element in CSS.\n * @property {Array<number>} visibleBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           unlike `blockBounds` this is tightly wrapped to the visible glyph paths.\n * @property {Array<number>} totalBounds - DEPRECATED; use blockBounds instead.\n * @property {Array<number>} totalBlockSize - DEPRECATED; use blockBounds instead\n * @property {Array<object>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n *           generation, typesetting, etc.\n * @frozen\n */\n\n/**\n * @callback getTextRenderInfo~callback\n * @param {TroikaTextRenderInfo} textRenderInfo\n */\n\n/**\n * Main entry point for requesting the data needed to render a text string with given font parameters.\n * This is an asynchronous call, performing most of the logic in a web worker thread.\n * @param {object} args\n * @param {getTextRenderInfo~callback} callback\n */\n\nfunction getTextRenderInfo(args, callback) {\n  hasRequested = true;\n  args = assign({}, args);\n  var totalStart = now(); // Apply default font here to avoid a 'null' atlas, and convert relative\n  // URLs to absolute so they can be resolved in the worker\n\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL); // Normalize text to a string\n\n  args.text = '' + args.text;\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize; // Normalize colors\n\n  if (args.colorRanges != null) {\n    var colors = {};\n\n    for (var key in args.colorRanges) {\n      if (args.colorRanges.hasOwnProperty(key)) {\n        var val = args.colorRanges[key];\n\n        if (typeof val !== 'number') {\n          val = tempColor.set(val).getHex();\n        }\n\n        colors[key] = val;\n      }\n    }\n\n    args.colorRanges = colors;\n  }\n\n  Object.freeze(args); // Init the atlas for this font if needed\n\n  var textureWidth = CONFIG.textureWidth,\n      sdfExponent = CONFIG.sdfExponent;\n  var _args = args,\n      sdfGlyphSize = _args.sdfGlyphSize;\n  var atlasKey = \"\".concat(args.font, \"@\").concat(sdfGlyphSize);\n  var atlas = atlases[atlasKey];\n\n  if (!atlas) {\n    atlas = atlases[atlasKey] = {\n      count: 0,\n      glyphs: new Map(),\n      //glyphId->{}\n      sdfTexture: new DataTexture(new Uint8Array(sdfGlyphSize * textureWidth * 4), textureWidth, sdfGlyphSize, RGBAFormat, undefined, undefined, undefined, undefined, LinearFilter, LinearFilter)\n    };\n    atlas.sdfTexture.font = args.font;\n  } // Issue request to the typesetting engine in the worker\n\n\n  typesetInWorker(args).then(function (result) {\n    var glyphIds = result.glyphIds,\n        glyphPositions = result.glyphPositions,\n        fontSize = result.fontSize,\n        unitsPerEm = result.unitsPerEm,\n        timings = result.timings;\n    var neededSDFs = [];\n    var glyphBounds = new Float32Array(glyphIds.length * 4);\n    var fontSizeMult = fontSize / unitsPerEm;\n    var boundsIdx = 0;\n    var positionsIdx = 0;\n    var quadsStart = now();\n    glyphIds.forEach(function (glyphId, i) {\n      var glyphInfo = atlas.glyphs.get(glyphId); // If this is a glyphId not seen before, add it to the atlas\n\n      if (!glyphInfo) {\n        var _result$glyphData$gly = result.glyphData[glyphId],\n            path = _result$glyphData$gly.path,\n            pathBounds = _result$glyphData$gly.pathBounds; // Margin around path edges in SDF, based on a percentage of the glyph's max dimension.\n        // Note we add an extra 0.5 px over the configured value because the outer 0.5 doesn't contain\n        // useful interpolated values and will be ignored anyway.\n\n        var fontUnitsMargin = Math.max(pathBounds[2] - pathBounds[0], pathBounds[3] - pathBounds[1]) / sdfGlyphSize * (CONFIG.sdfMargin * sdfGlyphSize + 0.5);\n        var atlasIndex = atlas.count++;\n        var _sdfViewBox = [pathBounds[0] - fontUnitsMargin, pathBounds[1] - fontUnitsMargin, pathBounds[2] + fontUnitsMargin, pathBounds[3] + fontUnitsMargin];\n        atlas.glyphs.set(glyphId, glyphInfo = {\n          path: path,\n          atlasIndex: atlasIndex,\n          sdfViewBox: _sdfViewBox\n        }); // Collect those that need SDF generation\n\n        neededSDFs.push(glyphInfo);\n      } // Calculate bounds for renderable quads\n      // TODO can we get this back off the main thread?\n\n\n      var _glyphInfo3 = glyphInfo,\n          sdfViewBox = _glyphInfo3.sdfViewBox;\n      var posX = glyphPositions[positionsIdx++];\n      var posY = glyphPositions[positionsIdx++];\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[0] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[1] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[2] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[3] * fontSizeMult; // Convert glyphId to SDF index for the shader\n\n      glyphIds[i] = glyphInfo.atlasIndex;\n    });\n    timings.quads = (timings.quads || 0) + (now() - quadsStart);\n    var sdfStart = now();\n    timings.sdf = {};\n    Thenable.all(neededSDFs.map(function (_ref2) {\n      var path = _ref2.path,\n          atlasIndex = _ref2.atlasIndex,\n          sdfViewBox = _ref2.sdfViewBox;\n      var maxDist = Math.max(sdfViewBox[2] - sdfViewBox[0], sdfViewBox[3] - sdfViewBox[1]);\n      return generateSDFInWorker(sdfGlyphSize, sdfGlyphSize, path, sdfViewBox, maxDist, CONFIG.sdfExponent).then(function (_ref3) {\n        var textureData = _ref3.textureData,\n            timing = _ref3.timing;\n        timings.sdf[atlasIndex] = timing;\n        return {\n          atlasIndex: atlasIndex,\n          textureData: textureData,\n          timing: timing\n        };\n      });\n    })).then(function (sdfResults) {\n      // If we have new SDFs, copy them into the atlas texture at the specified indices\n      if (sdfResults.length) {\n        sdfResults.forEach(function (_ref4) {\n          var atlasIndex = _ref4.atlasIndex,\n              textureData = _ref4.textureData,\n              timing = _ref4.timing;\n          var texImg = atlas.sdfTexture.image; // Grow the texture by power of 2 if needed\n\n          while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n            var biggerArray = new Uint8Array(texImg.data.length * 2);\n            biggerArray.set(texImg.data);\n            texImg.data = biggerArray;\n            texImg.height *= 2;\n          } // Insert the new glyph's data into the full texture image at the correct offsets\n          // Glyphs are packed sequentially into the R,G,B,A channels of a square, advancing\n          // to the next square every 4 glyphs.\n\n\n          var squareIndex = Math.floor(atlasIndex / 4);\n          var cols = texImg.width / sdfGlyphSize;\n          var baseStartIndex = Math.floor(squareIndex / cols) * texImg.width * sdfGlyphSize * 4 //full rows\n          + squareIndex % cols * sdfGlyphSize * 4 //partial row\n          + atlasIndex % 4; //color channel\n\n          for (var y = 0; y < sdfGlyphSize; y++) {\n            var srcStartIndex = y * sdfGlyphSize;\n            var rowStartIndex = baseStartIndex + y * texImg.width * 4;\n\n            for (var x = 0; x < sdfGlyphSize; x++) {\n              texImg.data[rowStartIndex + x * 4] = textureData[srcStartIndex + x];\n            }\n          }\n        });\n        atlas.sdfTexture.needsUpdate = true;\n      }\n\n      timings.sdfTotal = now() - sdfStart;\n      timings.total = now() - totalStart; // Invoke callback with the text layout arrays and updated texture\n\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture: atlas.sdfTexture,\n        sdfGlyphSize: sdfGlyphSize,\n        sdfExponent: sdfExponent,\n        glyphBounds: glyphBounds,\n        glyphAtlasIndices: glyphIds,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        topBaseline: result.topBaseline,\n        blockBounds: result.blockBounds,\n        visibleBounds: result.visibleBounds,\n        timings: result.timings,\n\n        get totalBounds() {\n          console.log('totalBounds deprecated, use blockBounds instead');\n          return result.blockBounds;\n        },\n\n        get totalBlockSize() {\n          console.log('totalBlockSize deprecated, use blockBounds instead');\n\n          var _result$blockBounds2 = _slicedToArray(result.blockBounds, 4),\n              x0 = _result$blockBounds2[0],\n              y0 = _result$blockBounds2[1],\n              x1 = _result$blockBounds2[2],\n              y1 = _result$blockBounds2[3];\n\n          return [x1 - x0, y1 - y0];\n        }\n\n      }));\n    });\n  });\n}\n/**\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n * needed fonts and glyphs up front along with other assets.\n *\n * @param {object} options\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\n *        be loaded.\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n *        to specify ligature sequences in addition to their individual characters to get all\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\n *        specified `characters`.\n * @param {function} callback - A function that will be called when the preloading is complete.\n */\n\n\nfunction preloadFont(_ref5, callback) {\n  var font = _ref5.font,\n      characters = _ref5.characters,\n      sdfGlyphSize = _ref5.sdfGlyphSize;\n  var text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\n  getTextRenderInfo({\n    font: font,\n    sdfGlyphSize: sdfGlyphSize,\n    text: text\n  }, callback);\n} // Local assign impl so we don't have to import troika-core\n\n\nfunction assign(toObj, fromObj) {\n  for (var key in fromObj) {\n    if (fromObj.hasOwnProperty(key)) {\n      toObj[key] = fromObj[key];\n    }\n  }\n\n  return toObj;\n} // Utility for making URLs absolute\n\n\nvar linkEl;\n\nfunction toAbsoluteURL(path) {\n  if (!linkEl) {\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n  }\n\n  linkEl.href = path;\n  return linkEl.href;\n}\n\nvar typesetterWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [CONFIG, workerModule, createTypesetter, bidiFactory],\n  init: function init(config, fontParser, createTypesetter, bidiFactory) {\n    var defaultFontURL = config.defaultFontURL;\n    return createTypesetter(fontParser, bidiFactory(), {\n      defaultFontURL: defaultFontURL\n    });\n  }\n});\n/**\n * SDF generator function wrapper that fans out requests to a number of worker\n * threads for parallelism\n */\n\nvar generateSDFInWorker = /*#__PURE__*/function () {\n  var threadCount = 4; //how many workers to spawn\n\n  var idleTimeout = 2000; //workers will be terminated after being idle this many milliseconds\n\n  var threads = {};\n  var callNum = 0;\n  return function () {\n    var _thread;\n\n    var workerId = 'TroikaTextSDFGenerator_' + callNum++ % threadCount;\n    var thread = threads[workerId];\n\n    if (!thread) {\n      thread = threads[workerId] = {\n        workerModule: defineWorkerModule({\n          name: workerId,\n          workerId: workerId,\n          dependencies: [CONFIG, createGlyphSegmentsIndex, createSDFGenerator],\n          init: function init(config, createGlyphSegmentsIndex, createSDFGenerator) {\n            var sdfExponent = config.sdfExponent,\n                sdfMargin = config.sdfMargin;\n            return createSDFGenerator(createGlyphSegmentsIndex, {\n              sdfExponent: sdfExponent,\n              sdfMargin: sdfMargin\n            });\n          },\n          getTransferables: function getTransferables(result) {\n            return [result.textureData.buffer];\n          }\n        }),\n        requests: 0,\n        idleTimer: null\n      };\n    }\n\n    thread.requests++;\n    clearTimeout(thread.idleTimer);\n    return (_thread = thread).workerModule.apply(_thread, arguments).then(function (result) {\n      if (--thread.requests === 0) {\n        thread.idleTimer = setTimeout(function () {\n          terminateWorker(workerId);\n        }, idleTimeout);\n      }\n\n      return result;\n    });\n  };\n}();\n\nvar typesetInWorker = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [typesetterWorkerModule, ThenableWorkerModule],\n  init: function init(typesetter, Thenable) {\n    return function (args) {\n      var thenable = new Thenable();\n      typesetter.typeset(args, thenable.resolve);\n      return thenable;\n    };\n  },\n  getTransferables: function getTransferables(result) {\n    // Mark array buffers as transferable to avoid cloning during postMessage\n    var transferables = [result.glyphPositions.buffer, result.glyphIds.buffer];\n\n    if (result.caretPositions) {\n      transferables.push(result.caretPositions.buffer);\n    }\n\n    return transferables;\n  }\n});\n\nfunction dumpSDFTextures() {\n  Object.keys(atlases).forEach(function (font) {\n    var atlas = atlases[font];\n    var canvas = document.createElement('canvas');\n    var _atlas$sdfTexture$ima = atlas.sdfTexture.image,\n        width = _atlas$sdfTexture$ima.width,\n        height = _atlas$sdfTexture$ima.height,\n        data = _atlas$sdfTexture$ima.data;\n    canvas.width = width;\n    canvas.height = height;\n    var imgData = new ImageData(new Uint8ClampedArray(data), width, height);\n    var ctx = canvas.getContext('2d');\n    ctx.putImageData(imgData, 0, 0);\n    console.log(font, atlas, canvas.toDataURL());\n    console.log(\"%c.\", \"\\n      background: url(\".concat(canvas.toDataURL(), \");\\n      background-size: \").concat(width, \"px \").concat(height, \"px;\\n      color: transparent;\\n      font-size: 0;\\n      line-height: \").concat(height, \"px;\\n      padding-left: \").concat(width, \"px;\\n    \"));\n  });\n}\n\nvar GlyphsGeometry = /*#__PURE__*/function () {\n  var templateGeometries = {};\n\n  function getTemplateGeometry(detail) {\n    var geom = templateGeometries[detail];\n\n    if (!geom) {\n      geom = templateGeometries[detail] = new PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\n    }\n\n    return geom;\n  }\n\n  new Vector3();\n  var glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  var glyphIndexAttrName = 'aTroikaGlyphIndex';\n  var glyphColorAttrName = 'aTroikaGlyphColor';\n  /**\n  @class GlyphsGeometry\n   A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n     Where N = number of glyphs...\n     Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n     Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n   A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n   */\n\n  var GlyphsGeometry = /*#__PURE__*/function (_InstancedBufferGeome) {\n    _inherits(GlyphsGeometry, _InstancedBufferGeome);\n\n    var _super = _createSuper(GlyphsGeometry);\n\n    function GlyphsGeometry() {\n      var _this;\n\n      _classCallCheck(this, GlyphsGeometry);\n\n      _this = _super.call(this);\n      _this.detail = 1;\n      _this.curveRadius = 0; // Define groups for rendering text outline as a separate pass; these will only\n      // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\n\n      _this.groups = [{\n        start: 0,\n        count: Infinity,\n        materialIndex: 0\n      }, {\n        start: 0,\n        count: Infinity,\n        materialIndex: 1\n      }]; // Preallocate empty bounding objects\n\n      _this.boundingSphere = new Sphere();\n      _this.boundingBox = new Box3();\n      return _this;\n    }\n\n    _createClass(GlyphsGeometry, [{\n      key: \"computeBoundingSphere\",\n      value: function computeBoundingSphere() {// No-op; we'll sync the boundingSphere proactively when needed.\n      }\n    }, {\n      key: \"computeBoundingBox\",\n      value: function computeBoundingBox() {// No-op; we'll sync the boundingBox proactively when needed.\n      }\n    }, {\n      key: \"updateGlyphs\",\n\n      /**\n       * Update the geometry for a new set of glyphs.\n       * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n       *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n       * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n       *        the SDF atlas texture.\n       * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n       * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n       *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n       *        used with `applyClipRect` to choose an optimized `instanceCount`.\n       * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n       */\n      value: function updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\n        // Update the instance attributes\n        updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n        updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n        updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n        this._blockBounds = blockBounds;\n        this._chunkedBounds = chunkedBounds;\n        setInstanceCount(this, glyphAtlasIndices.length);\n\n        this._updateBounds();\n      }\n    }, {\n      key: \"_updateBounds\",\n      value: function _updateBounds() {\n        var bounds = this._blockBounds;\n\n        if (bounds) {\n          var curveRadius = this.curveRadius,\n              bbox = this.boundingBox;\n\n          if (curveRadius) {\n            var PI = Math.PI,\n                floor = Math.floor,\n                min = Math.min,\n                max = Math.max,\n                sin = Math.sin,\n                cos = Math.cos;\n            var halfPi = PI / 2;\n            var twoPi = PI * 2;\n            var absR = Math.abs(curveRadius);\n            var leftAngle = bounds[0] / absR;\n            var rightAngle = bounds[2] / absR;\n            var minX = floor((leftAngle + halfPi) / twoPi) !== floor((rightAngle + halfPi) / twoPi) ? -absR : min(sin(leftAngle) * absR, sin(rightAngle) * absR);\n            var maxX = floor((leftAngle - halfPi) / twoPi) !== floor((rightAngle - halfPi) / twoPi) ? absR : max(sin(leftAngle) * absR, sin(rightAngle) * absR);\n            var maxZ = floor((leftAngle + PI) / twoPi) !== floor((rightAngle + PI) / twoPi) ? absR * 2 : max(absR - cos(leftAngle) * absR, absR - cos(rightAngle) * absR);\n            bbox.min.set(minX, bounds[1], curveRadius < 0 ? -maxZ : 0);\n            bbox.max.set(maxX, bounds[3], curveRadius < 0 ? 0 : maxZ);\n          } else {\n            bbox.min.set(bounds[0], bounds[1], 0);\n            bbox.max.set(bounds[2], bounds[3], 0);\n          }\n\n          bbox.getBoundingSphere(this.boundingSphere);\n        }\n      }\n      /**\n       * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n       * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n       * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n       * be clipped anyway.\n       *\n       * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n       * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n       * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n       * but at the expense of much larger attribute buffers (see classdoc above.)\n       *\n       * @param {Vector4} clipRect\n       */\n\n    }, {\n      key: \"applyClipRect\",\n      value: function applyClipRect(clipRect) {\n        var count = this.getAttribute(glyphIndexAttrName).count;\n        var chunks = this._chunkedBounds;\n\n        if (chunks) {\n          for (var i = chunks.length; i--;) {\n            count = chunks[i].end;\n            var rect = chunks[i].rect; // note: both rects are l-b-r-t\n\n            if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n              break;\n            }\n          }\n        }\n\n        setInstanceCount(this, count);\n      }\n    }, {\n      key: \"detail\",\n      set: function set(detail) {\n        var _this2 = this;\n\n        if (detail !== this._detail) {\n          this._detail = detail;\n\n          if (typeof detail !== 'number' || detail < 1) {\n            detail = 1;\n          }\n\n          var tpl = getTemplateGeometry(detail);\n          ['position', 'normal', 'uv'].forEach(function (attr) {\n            _this2.attributes[attr] = tpl.attributes[attr].clone();\n          });\n          this.setIndex(tpl.getIndex().clone());\n        }\n      },\n      get: function get() {\n        return this._detail;\n      }\n    }, {\n      key: \"curveRadius\",\n      set: function set(r) {\n        if (r !== this._curveRadius) {\n          this._curveRadius = r;\n\n          this._updateBounds();\n        }\n      },\n      get: function get() {\n        return this._curveRadius;\n      }\n    }]);\n\n    return GlyphsGeometry;\n  }(InstancedBufferGeometry); // Compat for pre r109:\n\n\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function (name, attribute) {\n      this.attributes[name] = attribute;\n      return this;\n    };\n  }\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    var attr = geom.getAttribute(attrName);\n\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize)); // If the new attribute has a different size, we also have to (as of r117) manually clear the\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\n        // implies it should be supported. It's possible we need to\n\n        delete geom._maxInstanceCount; //for r117+, could be fragile\n\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  } // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n\n\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  return GlyphsGeometry;\n}(); // language=GLSL\n\n\nvar VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nuniform vec4 uTroikaClipRect;\\nuniform mat3 uTroikaOrient;\\nuniform bool uTroikaUseGlyphColors;\\nuniform float uTroikaDistanceOffset;\\nuniform float uTroikaBlurRadius;\\nuniform vec2 uTroikaPositionOffset;\\nuniform float uTroikaCurveRadius;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nattribute vec3 aTroikaGlyphColor;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec4 vTroikaTextureUVBounds;\\nvarying float vTroikaTextureChannel;\\nvarying vec3 vTroikaGlyphColor;\\nvarying vec2 vTroikaGlyphDimensions;\\n\"; // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n\nvar VERTEX_TRANSFORM = \"\\nvec4 bounds = aTroikaGlyphBounds;\\nbounds.xz += uTroikaPositionOffset.x;\\nbounds.yw -= uTroikaPositionOffset.y;\\n\\nvec4 outlineBounds = vec4(\\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\\n);\\nvec4 clippedBounds = vec4(\\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\\n);\\n\\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\\n\\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\\n\\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\\n\\nfloat rad = uTroikaCurveRadius;\\nif (rad != 0.0) {\\n  float angle = position.x / rad;\\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\\n  normal.xz = vec2(sin(angle), cos(angle));\\n}\\n  \\nposition = uTroikaOrient * position;\\nnormal = uTroikaOrient * normal;\\n\\nvTroikaGlyphUV = clippedXY.xy;\\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\\n\\n\".concat(\"\\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\nvec2 txStartUV = txUvPerSquare * vec2(\\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\\n);\\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\\n\"); // language=GLSL\n\nvar FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform float uTroikaSDFExponent;\\nuniform float uTroikaDistanceOffset;\\nuniform float uTroikaFillOpacity;\\nuniform float uTroikaOutlineOpacity;\\nuniform float uTroikaBlurRadius;\\nuniform vec3 uTroikaStrokeColor;\\nuniform float uTroikaStrokeWidth;\\nuniform float uTroikaStrokeOpacity;\\nuniform bool uTroikaSDFDebug;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec4 vTroikaTextureUVBounds;\\nvarying float vTroikaTextureChannel;\\nvarying vec2 vTroikaGlyphDimensions;\\n\\nfloat troikaSdfValueToSignedDistance(float alpha) {\\n  // Inverse of encoding in SDFGenerator.js\\n  \".concat(\"\\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\\n  return signedDist;\\n}\\n\\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\\n}\\n\\nfloat troikaGlyphUvToDistance(vec2 uv) {\\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\\n}\\n\\nfloat troikaGetAADist() {\\n  \", \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\\n  #else\\n  return vTroikaGlyphDimensions.x / 64.0;\\n  #endif\\n}\\n\\nfloat troikaGetFragDistValue() {\\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\\n \\n  // Extrapolate distance when outside bounds:\\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \\n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\\n\\n  \", \"\\n\\n  return distance;\\n}\\n\\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(-distanceOffset, -distance);\\n  #else\\n\\n  float alpha = smoothstep(\\n    distanceOffset + aaDist,\\n    distanceOffset - aaDist,\\n    distance\\n  );\\n  #endif\\n\\n  return alpha;\\n}\\n\"); // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n\nvar FRAGMENT_TRANSFORM = \"\\nfloat aaDist = troikaGetAADist();\\nfloat distance = troikaGetFragDistValue();\\nfloat edgeAlpha = uTroikaSDFDebug ?\\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\\n  troikaGetEdgeAlpha(distance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\\n\\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\\nvec4 fillRGBA = gl_FragColor;\\nfillRGBA.a *= uTroikaFillOpacity;\\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\\n  -uTroikaStrokeWidth - aaDist,\\n  -uTroikaStrokeWidth + aaDist,\\n  distance\\n));\\ngl_FragColor.a *= edgeAlpha;\\n#endif\\n\\nif (edgeAlpha == 0.0) {\\n  discard;\\n}\\n\";\n/**\n * Create a material for rendering text, derived from a baseMaterial\n */\n\nfunction createTextDerivedMaterial(baseMaterial) {\n  var textMaterial = createDerivedMaterial(baseMaterial, {\n    chained: true,\n    extensions: {\n      derivatives: true\n    },\n    uniforms: {\n      uTroikaSDFTexture: {\n        value: null\n      },\n      uTroikaSDFTextureSize: {\n        value: new Vector2()\n      },\n      uTroikaSDFGlyphSize: {\n        value: 0\n      },\n      uTroikaSDFExponent: {\n        value: 0\n      },\n      uTroikaTotalBounds: {\n        value: new Vector4(0, 0, 0, 0)\n      },\n      uTroikaClipRect: {\n        value: new Vector4(0, 0, 0, 0)\n      },\n      uTroikaDistanceOffset: {\n        value: 0\n      },\n      uTroikaOutlineOpacity: {\n        value: 0\n      },\n      uTroikaFillOpacity: {\n        value: 1\n      },\n      uTroikaPositionOffset: {\n        value: new Vector2()\n      },\n      uTroikaCurveRadius: {\n        value: 0\n      },\n      uTroikaBlurRadius: {\n        value: 0\n      },\n      uTroikaStrokeWidth: {\n        value: 0\n      },\n      uTroikaStrokeColor: {\n        value: new Color()\n      },\n      uTroikaStrokeOpacity: {\n        value: 1\n      },\n      uTroikaOrient: {\n        value: new Matrix3()\n      },\n      uTroikaUseGlyphColors: {\n        value: true\n      },\n      uTroikaSDFDebug: {\n        value: false\n      }\n    },\n    vertexDefs: VERTEX_DEFS,\n    vertexTransform: VERTEX_TRANSFORM,\n    fragmentDefs: FRAGMENT_DEFS,\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\n    customRewriter: function customRewriter(_ref6) {\n      var vertexShader = _ref6.vertexShader,\n          fragmentShader = _ref6.fragmentShader;\n      var uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n\n      if (uDiffuseRE.test(fragmentShader)) {\n        // Replace all instances of `diffuse` with our varying\n        fragmentShader = fragmentShader.replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor').replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor'); // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n\n        if (!uDiffuseRE.test(vertexShader)) {\n          vertexShader = vertexShader.replace(voidMainRegExp, 'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n');\n        }\n      }\n\n      return {\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      };\n    }\n  }); // Force transparency - TODO is this reasonable?\n\n  textMaterial.transparent = true;\n  Object.defineProperties(textMaterial, {\n    isTroikaTextMaterial: {\n      value: true\n    },\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\n    // for planes, so here we force the `shadowSide` to always match the main side.\n    shadowSide: {\n      get: function get() {\n        return this.side;\n      },\n      set: function set() {//no-op\n      }\n    }\n  });\n  return textMaterial;\n}\n\nvar Text = /*#__PURE__*/function () {\n  var defaultMaterial = new MeshBasicMaterial({\n    color: 0xffffff,\n    side: DoubleSide,\n    transparent: true\n  });\n  var defaultStrokeColor = 0x808080;\n  var tempMat4 = new Matrix4();\n  var tempVec3a = new Vector3();\n  var tempVec3b = new Vector3();\n  var tempArray = [];\n  var origin = new Vector3();\n  var defaultOrient = '+x+y';\n\n  function first(o) {\n    return Array.isArray(o) ? o[0] : o;\n  }\n\n  var _getFlatRaycastMesh = function getFlatRaycastMesh() {\n    var mesh = new Mesh(new PlaneBufferGeometry(1, 1), defaultMaterial);\n\n    _getFlatRaycastMesh = function getFlatRaycastMesh() {\n      return mesh;\n    };\n\n    return mesh;\n  };\n\n  var _getCurvedRaycastMesh = function getCurvedRaycastMesh() {\n    var mesh = new Mesh(new PlaneBufferGeometry(1, 1, 32, 1), defaultMaterial);\n\n    _getCurvedRaycastMesh = function getCurvedRaycastMesh() {\n      return mesh;\n    };\n\n    return mesh;\n  };\n\n  var syncStartEvent = {\n    type: 'syncstart'\n  };\n  var syncCompleteEvent = {\n    type: 'synccomplete'\n  };\n  var SYNCABLE_PROPS = ['font', 'fontSize', 'letterSpacing', 'lineHeight', 'maxWidth', 'overflowWrap', 'text', 'direction', 'textAlign', 'textIndent', 'whiteSpace', 'anchorX', 'anchorY', 'colorRanges', 'sdfGlyphSize'];\n  var COPYABLE_PROPS = SYNCABLE_PROPS.concat('material', 'color', 'depthOffset', 'clipRect', 'curveRadius', 'orientation', 'glyphGeometryDetail');\n  /**\n   * @class Text\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n\n  var Text = /*#__PURE__*/function (_Mesh) {\n    _inherits(Text, _Mesh);\n\n    var _super2 = _createSuper(Text);\n\n    function Text() {\n      var _this3;\n\n      _classCallCheck(this, Text);\n\n      var geometry = new GlyphsGeometry();\n      _this3 = _super2.call(this, geometry, null); // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n\n      _this3.text = '';\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n\n      _this3.anchorX = 0;\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n\n      _this3.anchorY = 0;\n      /**\n       * @member {number} curveRadius\n       * Defines a cylindrical radius along which the text's plane will be curved. Positive numbers put\n       * the cylinder's centerline (oriented vertically) that distance in front of the text, for a concave\n       * curvature, while negative numbers put it behind the text for a convex curvature. The centerline\n       * will be aligned with the text's local origin; you can use `anchorX` to offset it.\n       *\n       * Since each glyph is by default rendered with a simple quad, each glyph remains a flat plane\n       * internally. You can use `glyphGeometryDetail` to add more vertices for curvature inside glyphs.\n       */\n\n      _this3.curveRadius = 0;\n      /**\n       * @member {string} direction\n       * Sets the base direction for the text. The default value of \"auto\" will choose a direction based\n       * on the text's content according to the bidi spec. A value of \"ltr\" or \"rtl\" will force the direction.\n       */\n\n      _this3.direction = 'auto';\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be any of the formats supported by\n       * OpenType (see https://github.com/opentypejs/opentype.js).\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n\n      _this3.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n\n      _this3.fontSize = 0.1;\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n\n      _this3.letterSpacing = 0;\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n\n      _this3.lineHeight = 'normal';\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n\n      _this3.maxWidth = Infinity;\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n\n      _this3.overflowWrap = 'normal';\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n\n      _this3.textAlign = 'left';\n      /**\n       * @member {number} textIndent\n       * Indentation for the first character of a line; see CSS `text-indent`.\n       */\n\n      _this3.textIndent = 0;\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n\n      _this3.whiteSpace = 'normal'; // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n\n      _this3.material = null;\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`. Also, if you do use a custom\n       * `material`, this color will only be used for this particuar Text instance, even if\n       * that same material instance is shared across multiple Text objects.\n       */\n\n      _this3.color = null;\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n\n      _this3.colorRanges = null;\n      /**\n       * @member {number|string} outlineWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an outline/halo to be drawn around each text glyph using the `outlineColor` and `outlineOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`, which means\n       * no outline will be drawn unless an `outlineOffsetX/Y` or `outlineBlur` is set.\n       */\n\n      _this3.outlineWidth = 0;\n      /**\n       * @member {string|number|THREE.Color} outlineColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to black.\n       */\n\n      _this3.outlineColor = 0x000000;\n      /**\n       * @member {number} outlineOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to `1`.\n       */\n\n      _this3.outlineOpacity = 1;\n      /**\n       * @member {number|string} outlineBlur\n       * WARNING: This API is experimental and may change.\n       * A blur radius applied to the outer edge of the text's outline. If the `outlineWidth` is\n       * zero, the blur will be applied at the glyph edge, like CSS's `text-shadow` blur radius.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineBlur = 0;\n      /**\n       * @member {number|string} outlineOffsetX\n       * WARNING: This API is experimental and may change.\n       * A horizontal offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineOffsetX = 0;\n      /**\n       * @member {number|string} outlineOffsetY\n       * WARNING: This API is experimental and may change.\n       * A vertical offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.outlineOffsetY = 0;\n      /**\n       * @member {number|string} strokeWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an inner stroke drawn inside each text glyph using the `strokeColor` and `strokeOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n\n      _this3.strokeWidth = 0;\n      /**\n       * @member {string|number|THREE.Color} strokeColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text stroke, if `strokeWidth` is greater than zero. Defaults to gray.\n       */\n\n      _this3.strokeColor = defaultStrokeColor;\n      /**\n       * @member {number} strokeOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the stroke, if `strokeWidth` is greater than zero. Defaults to `1`.\n       */\n\n      _this3.strokeOpacity = 1;\n      /**\n       * @member {number} fillOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the glyph's fill from 0 to 1. This behaves like the material's `opacity` but allows\n       * giving the fill a different opacity than the `strokeOpacity`. A fillOpacity of `0` makes the\n       * interior of the glyph invisible, leaving just the `strokeWidth`. Defaults to `1`.\n       */\n\n      _this3.fillOpacity = 1;\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n\n      _this3.depthOffset = 0;\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n\n      _this3.clipRect = null;\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n\n      _this3.orientation = defaultOrient;\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n\n      _this3.glyphGeometryDetail = 1;\n      /**\n       * @member {number|null} sdfGlyphSize\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\n       * increased memory footprint and longer SDF generation time.\n       */\n\n      _this3.sdfGlyphSize = null;\n      _this3.debugSDF = false;\n      return _this3;\n    }\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n\n\n    _createClass(Text, [{\n      key: \"sync\",\n      value: function sync(callback) {\n        var _this4 = this;\n\n        if (this._needsSync) {\n          this._needsSync = false; // If there's another sync still in progress, queue\n\n          if (this._isSyncing) {\n            (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n          } else {\n            this._isSyncing = true;\n            this.dispatchEvent(syncStartEvent);\n            getTextRenderInfo({\n              text: this.text,\n              font: this.font,\n              fontSize: this.fontSize || 0.1,\n              letterSpacing: this.letterSpacing || 0,\n              lineHeight: this.lineHeight || 'normal',\n              maxWidth: this.maxWidth,\n              direction: this.direction || 'auto',\n              textAlign: this.textAlign,\n              textIndent: this.textIndent,\n              whiteSpace: this.whiteSpace,\n              overflowWrap: this.overflowWrap,\n              anchorX: this.anchorX,\n              anchorY: this.anchorY,\n              colorRanges: this.colorRanges,\n              includeCaretPositions: true,\n              //TODO parameterize\n              sdfGlyphSize: this.sdfGlyphSize\n            }, function (textRenderInfo) {\n              _this4._isSyncing = false; // Save result for later use in onBeforeRender\n\n              _this4._textRenderInfo = textRenderInfo; // Update the geometry attributes\n\n              _this4.geometry.updateGlyphs(textRenderInfo.glyphBounds, textRenderInfo.glyphAtlasIndices, textRenderInfo.blockBounds, textRenderInfo.chunkedBounds, textRenderInfo.glyphColors); // If we had extra sync requests queued up, kick it off\n\n\n              var queued = _this4._queuedSyncs;\n\n              if (queued) {\n                _this4._queuedSyncs = null;\n                _this4._needsSync = true;\n\n                _this4.sync(function () {\n                  queued.forEach(function (fn) {\n                    return fn && fn();\n                  });\n                });\n              }\n\n              _this4.dispatchEvent(syncCompleteEvent);\n\n              if (callback) {\n                callback();\n              }\n            });\n          }\n        }\n      }\n      /**\n       * Initiate a sync if needed - note it won't complete until next frame at the\n       * earliest so if possible it's a good idea to call sync() manually as soon as\n       * all the properties have been set.\n       * @override\n       */\n\n    }, {\n      key: \"onBeforeRender\",\n      value: function onBeforeRender(renderer, scene, camera, geometry, material, group) {\n        this.sync(); // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\n\n        if (material.isTroikaTextMaterial) {\n          this._prepareForRender(material);\n        }\n      }\n      /**\n       * Shortcut to dispose the geometry specific to this instance.\n       * Note: we don't also dispose the derived material here because if anything else is\n       * sharing the same base material it will result in a pause next frame as the program\n       * is recompiled. Instead users can dispose the base material manually, like normal,\n       * and we'll also dispose the derived material at that time.\n       */\n\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.geometry.dispose();\n      }\n      /**\n       * @property {TroikaTextRenderInfo|null} textRenderInfo\n       * @readonly\n       * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n       * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n       * the asynchrous `sync()` process completes.\n       */\n\n    }, {\n      key: \"_prepareForRender\",\n      value: function _prepareForRender(material) {\n        var isOutline = material.isTextOutlineMaterial;\n        var uniforms = material.uniforms;\n        var textInfo = this.textRenderInfo;\n\n        if (textInfo) {\n          var sdfTexture = textInfo.sdfTexture,\n              blockBounds = textInfo.blockBounds;\n          uniforms.uTroikaSDFTexture.value = sdfTexture;\n          uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n          uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n          uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\n          uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\n          uniforms.uTroikaUseGlyphColors.value = !isOutline && !!textInfo.glyphColors;\n          var distanceOffset = 0;\n          var blurRadius = 0;\n          var strokeWidth = 0;\n          var fillOpacity;\n          var strokeOpacity;\n          var strokeColor;\n          var offsetX = 0;\n          var offsetY = 0;\n\n          if (isOutline) {\n            var outlineWidth = this.outlineWidth,\n                outlineOffsetX = this.outlineOffsetX,\n                outlineOffsetY = this.outlineOffsetY,\n                outlineBlur = this.outlineBlur,\n                outlineOpacity = this.outlineOpacity;\n            distanceOffset = this._parsePercent(outlineWidth) || 0;\n            blurRadius = Math.max(0, this._parsePercent(outlineBlur) || 0);\n            fillOpacity = outlineOpacity;\n            offsetX = this._parsePercent(outlineOffsetX) || 0;\n            offsetY = this._parsePercent(outlineOffsetY) || 0;\n          } else {\n            strokeWidth = Math.max(0, this._parsePercent(this.strokeWidth) || 0);\n\n            if (strokeWidth) {\n              strokeColor = this.strokeColor;\n              uniforms.uTroikaStrokeColor.value.set(strokeColor == null ? defaultStrokeColor : strokeColor);\n              strokeOpacity = this.strokeOpacity;\n              if (strokeOpacity == null) strokeOpacity = 1;\n            }\n\n            fillOpacity = this.fillOpacity;\n          }\n\n          uniforms.uTroikaDistanceOffset.value = distanceOffset;\n          uniforms.uTroikaPositionOffset.value.set(offsetX, offsetY);\n          uniforms.uTroikaBlurRadius.value = blurRadius;\n          uniforms.uTroikaStrokeWidth.value = strokeWidth;\n          uniforms.uTroikaStrokeOpacity.value = strokeOpacity;\n          uniforms.uTroikaFillOpacity.value = fillOpacity == null ? 1 : fillOpacity;\n          uniforms.uTroikaCurveRadius.value = this.curveRadius || 0;\n          var clipRect = this.clipRect;\n\n          if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\n            uniforms.uTroikaClipRect.value.fromArray(clipRect);\n          } else {\n            // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\n            var pad = (this.fontSize || 0.1) * 100;\n            uniforms.uTroikaClipRect.value.set(blockBounds[0] - pad, blockBounds[1] - pad, blockBounds[2] + pad, blockBounds[3] + pad);\n          }\n\n          this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n        }\n\n        uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n        material.polygonOffset = !!this.depthOffset;\n        material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0; // Shortcut for setting material color via `color` prop on the mesh; this is\n        // applied only to the derived material to avoid mutating a shared base material.\n\n        var color = isOutline ? this.outlineColor || 0 : this.color;\n\n        if (color == null) {\n          delete material.color; //inherit from base\n        } else {\n          var colorObj = material.hasOwnProperty('color') ? material.color : material.color = new Color();\n\n          if (color !== colorObj._input || typeof color === 'object') {\n            colorObj.set(colorObj._input = color);\n          }\n        } // base orientation\n\n\n        var orient = this.orientation || defaultOrient;\n\n        if (orient !== material._orientation) {\n          var rotMat = uniforms.uTroikaOrient.value;\n          orient = orient.replace(/[^-+xyz]/g, '');\n          var match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n\n          if (match) {\n            var _match = _slicedToArray(match, 5),\n                hSign = _match[1],\n                hAxis = _match[2],\n                vSign = _match[3],\n                vAxis = _match[4];\n\n            tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n            tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n            tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n            rotMat.setFromMatrix4(tempMat4);\n          } else {\n            rotMat.identity();\n          }\n\n          material._orientation = orient;\n        }\n      }\n    }, {\n      key: \"_parsePercent\",\n      value: function _parsePercent(value) {\n        if (typeof value === 'string') {\n          var match = value.match(/^(-?[\\d.]+)%$/);\n          var pct = match ? parseFloat(match[1]) : NaN;\n          value = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\n        }\n\n        return value;\n      }\n      /**\n       * Translate a point in local space to an x/y in the text plane.\n       */\n\n    }, {\n      key: \"localPositionToTextCoords\",\n      value: function localPositionToTextCoords(position) {\n        var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        target.copy(position); //simple non-curved case is 1:1\n\n        var r = this.curveRadius;\n\n        if (r) {\n          //flatten the curve\n          target.x = Math.atan2(position.x, Math.abs(r) - Math.abs(position.z)) * Math.abs(r);\n        }\n\n        return target;\n      }\n      /**\n       * Translate a point in world space to an x/y in the text plane.\n       */\n\n    }, {\n      key: \"worldPositionToTextCoords\",\n      value: function worldPositionToTextCoords(position) {\n        var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n        tempVec3a.copy(position);\n        return this.localPositionToTextCoords(this.worldToLocal(tempVec3a), target);\n      }\n      /**\n       * @override Custom raycasting to test against the whole text block's max rectangular bounds\n       * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n       */\n\n    }, {\n      key: \"raycast\",\n      value: function raycast(raycaster, intersects) {\n        var textRenderInfo = this.textRenderInfo,\n            curveRadius = this.curveRadius;\n\n        if (textRenderInfo) {\n          var bounds = textRenderInfo.blockBounds;\n          var raycastMesh = curveRadius ? _getCurvedRaycastMesh() : _getFlatRaycastMesh();\n          var geom = raycastMesh.geometry;\n          var _geom$attributes = geom.attributes,\n              position = _geom$attributes.position,\n              uv = _geom$attributes.uv;\n\n          for (var i = 0; i < uv.count; i++) {\n            var x = bounds[0] + uv.getX(i) * (bounds[2] - bounds[0]);\n            var y = bounds[1] + uv.getY(i) * (bounds[3] - bounds[1]);\n            var z = 0;\n\n            if (curveRadius) {\n              z = curveRadius - Math.cos(x / curveRadius) * curveRadius;\n              x = Math.sin(x / curveRadius) * curveRadius;\n            }\n\n            position.setXYZ(i, x, y, z);\n          }\n\n          geom.boundingSphere = this.geometry.boundingSphere;\n          geom.boundingBox = this.geometry.boundingBox;\n          raycastMesh.matrixWorld = this.matrixWorld;\n          raycastMesh.material.side = this.material.side;\n          tempArray.length = 0;\n          raycastMesh.raycast(raycaster, tempArray);\n\n          for (var _i8 = 0; _i8 < tempArray.length; _i8++) {\n            tempArray[_i8].object = this;\n            intersects.push(tempArray[_i8]);\n          }\n        }\n      }\n    }, {\n      key: \"copy\",\n      value: function copy(source) {\n        var _this5 = this;\n\n        // Prevent copying the geometry reference so we don't end up sharing attributes between instances\n        var geom = this.geometry;\n\n        _get(_getPrototypeOf(Text.prototype), \"copy\", this).call(this, source);\n\n        this.geometry = geom;\n        COPYABLE_PROPS.forEach(function (prop) {\n          _this5[prop] = source[prop];\n        });\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new this.constructor().copy(this);\n      }\n    }, {\n      key: \"textRenderInfo\",\n      get: function get() {\n        return this._textRenderInfo || null;\n      } // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n      // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n\n    }, {\n      key: \"material\",\n      get: function get() {\n        var derivedMaterial = this._derivedMaterial;\n        var baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\n\n        if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n          derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial); // dispose the derived material when its base material is disposed:\n\n          baseMaterial.addEventListener('dispose', function onDispose() {\n            baseMaterial.removeEventListener('dispose', onDispose);\n            derivedMaterial.dispose();\n          });\n        } // If text outline is configured, render it as a preliminary draw using Three's multi-material\n        // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\n        // materials ensures the layers are always rendered consecutively in a consistent order.\n        // Each layer will trigger onBeforeRender with the appropriate material.\n\n\n        if (this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {\n          var outlineMaterial = derivedMaterial._outlineMtl;\n\n          if (!outlineMaterial) {\n            outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\n              id: {\n                value: derivedMaterial.id + 0.1\n              }\n            });\n            outlineMaterial.isTextOutlineMaterial = true;\n            outlineMaterial.depthWrite = false;\n            outlineMaterial.map = null; //???\n\n            derivedMaterial.addEventListener('dispose', function onDispose() {\n              derivedMaterial.removeEventListener('dispose', onDispose);\n              outlineMaterial.dispose();\n            });\n          }\n\n          return [outlineMaterial, derivedMaterial];\n        } else {\n          return derivedMaterial;\n        }\n      },\n      set: function set(baseMaterial) {\n        if (baseMaterial && baseMaterial.isTroikaTextMaterial) {\n          //prevent double-derivation\n          this._derivedMaterial = baseMaterial;\n          this._baseMaterial = baseMaterial.baseMaterial;\n        } else {\n          this._baseMaterial = baseMaterial;\n        }\n      }\n    }, {\n      key: \"glyphGeometryDetail\",\n      get: function get() {\n        return this.geometry.detail;\n      },\n      set: function set(detail) {\n        this.geometry.detail = detail;\n      }\n    }, {\n      key: \"curveRadius\",\n      get: function get() {\n        return this.geometry.curveRadius;\n      },\n      set: function set(r) {\n        this.geometry.curveRadius = r;\n      } // Create and update material for shadows upon request:\n\n    }, {\n      key: \"customDepthMaterial\",\n      get: function get() {\n        return first(this.material).getDepthMaterial();\n      }\n    }, {\n      key: \"customDistanceMaterial\",\n      get: function get() {\n        return first(this.material).getDistanceMaterial();\n      }\n    }]);\n\n    return Text;\n  }(Mesh); // Create setters for properties that affect text layout:\n\n\n  SYNCABLE_PROPS.forEach(function (prop) {\n    var privateKey = '_private_' + prop;\n    Object.defineProperty(Text.prototype, prop, {\n      get: function get() {\n        return this[privateKey];\n      },\n      set: function set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  }); // Deprecation handler for `anchor` array:\n\n  var deprMsgShown = false;\n  Object.defineProperty(Text.prototype, 'anchor', {\n    get: function get() {\n      return this._deprecated_anchor;\n    },\n    set: function set(val) {\n      this._deprecated_anchor = val;\n\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n\n      if (Array.isArray(val)) {\n        this.anchorX = \"\".concat((+val[0] || 0) * 100, \"%\");\n        this.anchorY = \"\".concat((+val[1] || 0) * 100, \"%\");\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n  return Text;\n}(); //=== Utility functions for dealing with carets and selection ranges ===//\n\n/**\n * @typedef {object} TextCaret\n * @property {number} x - x position of the caret\n * @property {number} y - y position of the caret's bottom\n * @property {number} height - height of the caret\n * @property {number} charIndex - the index in the original input string of this caret's target\n *   character; the caret will be for the position _before_ that character.\n */\n\n/**\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n * @param {number} x\n * @param {number} y\n * @return {TextCaret | null}\n */\n\n\nfunction getCaretAtPoint(textRenderInfo, x, y) {\n  var closestCaret = null;\n  var caretHeight = textRenderInfo.caretHeight;\n  var caretsByRow = groupCaretsByRow(textRenderInfo); // Find nearest row by y first\n\n  var closestRowY = Infinity;\n  caretsByRow.forEach(function (carets, rowY) {\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n      closestRowY = rowY;\n    }\n  }); // Then find closest caret by x within that row\n\n  caretsByRow.get(closestRowY).forEach(function (caret) {\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n      closestCaret = caret;\n    }\n  });\n  return closestCaret;\n}\n\nvar _rectsCache = new WeakMap();\n/**\n * Given start and end character indexes, return a list of rectangles covering all the\n * characters within that selection.\n * @param {TroikaTextRenderInfo} textRenderInfo\n * @param {number} start - index of the first char in the selection\n * @param {number} end - index of the first char after the selection\n * @return {Array<{left, top, right, bottom}> | null}\n */\n\n\nfunction getSelectionRects(textRenderInfo, start, end) {\n  var rects;\n\n  if (textRenderInfo) {\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n    var prevResult = _rectsCache.get(textRenderInfo);\n\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\n      return prevResult.rects;\n    }\n\n    var caretPositions = textRenderInfo.caretPositions,\n        caretHeight = textRenderInfo.caretHeight; // Normalize\n\n    if (end < start) {\n      var s = start;\n      start = end;\n      end = s;\n    }\n\n    start = Math.max(start, 0);\n    end = Math.min(end, caretPositions.length + 1); // Build list of rects, expanding the current rect for all characters in a run and starting\n    // a new rect whenever reaching a new line or a new bidi direction\n\n    rects = [];\n    var currentRect = null;\n\n    for (var i = start; i < end; i++) {\n      var x1 = caretPositions[i * 3];\n      var x2 = caretPositions[i * 3 + 1];\n      var left = Math.min(x1, x2);\n      var right = Math.max(x1, x2);\n      var bottom = caretPositions[i * 3 + 2];\n\n      if (!currentRect || bottom !== currentRect.bottom || left > currentRect.right || right < currentRect.left) {\n        currentRect = {\n          left: Infinity,\n          right: -Infinity,\n          bottom: bottom,\n          top: bottom + caretHeight\n        };\n        rects.push(currentRect);\n      }\n\n      currentRect.left = Math.min(left, currentRect.left);\n      currentRect.right = Math.max(right, currentRect.right);\n    } // Merge any overlapping rects, e.g. those formed by adjacent bidi runs\n\n\n    rects.sort(function (a, b) {\n      return b.bottom - a.bottom || a.left - b.left;\n    });\n\n    for (var _i9 = rects.length - 1; _i9-- > 0;) {\n      var rectA = rects[_i9];\n      var rectB = rects[_i9 + 1];\n\n      if (rectA.bottom === rectB.bottom && rectA.left <= rectB.right && rectA.right >= rectB.left) {\n        rectB.left = Math.min(rectB.left, rectA.left);\n        rectB.right = Math.max(rectB.right, rectA.right);\n        rects.splice(_i9, 1);\n      }\n    }\n\n    _rectsCache.set(textRenderInfo, {\n      start: start,\n      end: end,\n      rects: rects\n    });\n  }\n\n  return rects;\n}\n\nvar _caretsByRowCache = new WeakMap();\n\nfunction groupCaretsByRow(textRenderInfo) {\n  // textRenderInfo is frozen so it's safe to cache based on it\n  var caretsByRow = _caretsByRowCache.get(textRenderInfo);\n\n  if (!caretsByRow) {\n    var caretPositions = textRenderInfo.caretPositions,\n        caretHeight = textRenderInfo.caretHeight;\n    caretsByRow = new Map();\n\n    for (var i = 0; i < caretPositions.length; i += 3) {\n      var rowY = caretPositions[i + 2];\n      var rowCarets = caretsByRow.get(rowY);\n\n      if (!rowCarets) {\n        caretsByRow.set(rowY, rowCarets = []);\n      }\n\n      rowCarets.push({\n        x: caretPositions[i],\n        y: rowY,\n        height: caretHeight,\n        charIndex: i / 3\n      }); // Add one more caret after the final char\n\n      if (i + 3 >= caretPositions.length) {\n        rowCarets.push({\n          x: caretPositions[i + 1],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3 + 1\n        });\n      }\n    }\n  }\n\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\n\n  return caretsByRow;\n}\n\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, dumpSDFTextures, getCaretAtPoint, getSelectionRects, preloadFont, typesetterWorkerModule };"],"sourceRoot":""}